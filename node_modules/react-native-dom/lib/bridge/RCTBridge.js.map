{"version":3,"sources":["../../ReactDom/bridge/RCTBridge.js"],"names":["MODULE_IDS","METHOD_IDS","PARAMS","DEVTOOLS_FLAG","HOTRELOAD_FLAG","WORKER_SRC","__DEV__","test","location","search","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","log","getPropertyNames","obj","currentPropertyNames","Object","getOwnPropertyNames","concat","getPrototypeOf","RCTBridge","moduleName","bundle","nativeModules","parent","urlScheme","basename","modulesByName","moduleClasses","moduleConfigs","messages","queue","executing","initializeModules","Promise","all","map","maybeModule","default","forEach","moduleClass","module","getInitialModuleConfig","remoteModuleConfig","bridgeModule","description","generateModuleConfig","push","loading","bundleLocation","bridgeCodeBlob","Blob","worker","Worker","URL","createObjectURL","setThread","cls","thread","onmessage","onMessage","bind","topic","payload","postMessage","moduleId","methodId","params","moduleConfig","name","promiseMethods","nativeModule","nativeMethod","functionMap","includes","splice","resolveId","rejectId","resolve","apply","then","res","JSON","parse","stringify","callbackFromId","catch","err","message","data","NotificationCenter","emitEvent","bundleFinishedLoading","Array","isArray","moduleIds","methodIds","i","length","args","devLoadingView","updateProgress","warn","shouldContinue","uiManager","requestTick","moduleDescription","_describe","config","sendMessage","protocol","values","filter","RCTModule","methodName","moduleDotMethod","split","method","enqueueJSCall","id","enqueueJSCallback","callNativeModule","_uiManager","_devLoadingView","_eventDispatcher","eventDispatcher","_imageLoader","imageLoader","_deviceInfo","deviceInfo","_devSettings","devSettings","_redBox","redBox","_networking","networking","_blobManager","blobModule"],"mappings":"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","sourcesContent":["/** @flow */\nimport type { Exports as YogaExports } from \"yoga-dom\";\nimport invariant from \"invariant\";\n\nimport { moduleConfigFactory } from \"RCTModuleConfig\";\nimport NotificationCenter from \"NotificationCenter\";\nimport {\n  RCTFunctionTypeNormal,\n  RCTFunctionTypePromise,\n  RCTFunctionTypeSync\n} from \"RCTBridgeMethod\";\nimport type { RCTFunctionType } from \"RCTBridgeMethod\";\nimport type RCTEventDispatcher from \"RCTEventDispatcher\";\nimport type RCTImageLoader from \"RCTImageLoader\";\nimport type RCTDeviceInfo from \"RCTDeviceInfo\";\nimport type RCTDevLoadingView from \"RCTDevLoadingView\";\nimport type RCTDevSettings from \"RCTDevSettings\";\nimport type RCTNetworking from \"RCTNetworkingNative\";\nimport type RCTBlobManager from \"RCTBlobManager\";\nimport RCTModule, {\n  type ModuleDescription,\n  type NativeModuleImports\n} from \"RCTModule\";\nimport { bridgeModuleNameForClass } from \"RCTModule\";\nimport type RCTRedBox from \"RCTRedBox\";\nimport type RCTUIManager from \"RCTUIManager\";\n\nexport { RCTFunctionTypeNormal, RCTFunctionTypePromise, RCTFunctionTypeSync };\nexport type { RCTFunctionType };\n\ndeclare var __DEV__: boolean;\n\ntype ClassInstance = <T>(Class<T>) => T;\n\ntype MessagePayload = {\n  data: {\n    topic: string,\n    payload: any\n  }\n};\n\ntype NativeCall = {\n  moduleId: number,\n  methodId: number,\n  args: Array<any>\n};\n\nconst MODULE_IDS = 0;\nconst METHOD_IDS = 1;\nconst PARAMS = 2;\n\nconst DEVTOOLS_FLAG = /\\bdevtools\\b/;\nconst HOTRELOAD_FLAG = /\\bhotreload\\b/;\n\n// $FlowFixMe\nlet WORKER_SRC = preval`\n  const fs = require('fs');\n  const path = require('path');\n\n  module.exports = fs.readFileSync(\n    path.resolve(__dirname, 'RCTBridge.worker.js'),\n    'utf8'\n  );\n`;\n\nif (__DEV__) {\n  WORKER_SRC = \"__DEV__ = true;\\n\" + WORKER_SRC;\n  if (DEVTOOLS_FLAG.test(location.search)) {\n    WORKER_SRC = \"__DEVTOOLS__ = true;\\n\" + WORKER_SRC;\n    if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {\n      console.log(\n        \"We detected that you have the React Devtools extension installed. \" +\n          \"Please note that at this time, React Native DOM is only compatible with the \" +\n          \"standalone version of React Developer Tools.\"\n      );\n    }\n  }\n} else {\n  WORKER_SRC = \"__DEV__ = false;\\n\" + WORKER_SRC;\n}\n\nexport function getPropertyNames(obj: ?Object): Array<string> {\n  if (obj == null) return [];\n\n  const currentPropertyNames = Object.getOwnPropertyNames(obj);\n  return currentPropertyNames.concat(\n    getPropertyNames(Object.getPrototypeOf(obj))\n  );\n}\n\ntype ModuleData = {\n  name: string,\n  methods: string[],\n  constants: { [string]: any }\n};\n\nexport default class RCTBridge {\n  nativeModules: NativeModuleImports;\n\n  modulesByName: { [name: string]: RCTModule } = {};\n  moduleClasses: Array<Class<RCTModule>> = [];\n  moduleConfigs: Array<ModuleDescription> = [];\n  bundleFinishedLoading: ?() => void;\n  messages: Array<NativeCall> = [];\n  moduleName: string;\n  bundleLocation: string;\n  loading: boolean;\n  parent: HTMLElement;\n  urlScheme: string;\n  basename: string;\n\n  Yoga: YogaExports;\n\n  _uiManager: ?RCTUIManager;\n  _eventDispatcher: ?RCTEventDispatcher;\n  _imageLoader: ?RCTImageLoader;\n  _deviceInfo: ?RCTDeviceInfo;\n  _devLoadingView: ?RCTDevLoadingView;\n  _devSettings: ?RCTDevSettings;\n  _redBox: ?RCTRedBox;\n  _networking: ?RCTNetworking;\n  _blobManager: ?RCTBlobManager;\n\n  constructor(\n    moduleName: string,\n    bundle: string,\n    nativeModules: NativeModuleImports,\n    parent: HTMLElement,\n    urlScheme: string,\n    basename: string\n  ) {\n    this.loading = true;\n    this.moduleName = moduleName;\n    this.bundleLocation = bundle;\n    this.nativeModules = nativeModules;\n    this.parent = parent;\n    this.urlScheme = urlScheme;\n    this.basename = basename;\n\n    const bridgeCodeBlob = new Blob([WORKER_SRC]);\n    const worker = new Worker(URL.createObjectURL(bridgeCodeBlob));\n    this.setThread(worker);\n  }\n\n  moduleForClass(cls: Class<RCTModule>): RCTModule {\n    return this.modulesByName[bridgeModuleNameForClass(cls)];\n  }\n\n  queue: Array<any> = [];\n  executing: boolean = false;\n  thread: ?Worker;\n\n  setThread(thread: Worker) {\n    this.thread = thread;\n    thread.onmessage = this.onMessage.bind(this);\n  }\n\n  sendMessage(topic: string, payload: any) {\n    if (this.thread) {\n      this.thread.postMessage({ topic, payload });\n    }\n  }\n\n  callNativeModule(moduleId: number, methodId: number, params: Array<any>) {\n    const moduleConfig = this.moduleConfigs[moduleId];\n\n    invariant(moduleConfig, `No such module with id: ${moduleId}`);\n    const [name, , , promiseMethods] = moduleConfig;\n\n    const nativeModule = this.modulesByName[name];\n    invariant(nativeModule, `No such module with name ${name}`);\n\n    // console.log(\"JS -> Native\", name, functionName, params);\n\n    const nativeMethod = nativeModule.functionMap[methodId];\n\n    if (promiseMethods.includes(methodId)) {\n      const [resolveId, rejectId] = params.splice(-2, 2);\n      Promise.resolve(nativeMethod.apply(nativeModule, params))\n        .then((res) => {\n          res = JSON.parse(JSON.stringify(res));\n          this.callbackFromId(resolveId)(res);\n        })\n        .catch((err) => {\n          err = JSON.parse(JSON.stringify(err));\n          this.callbackFromId(rejectId)(err);\n        });\n    } else {\n      nativeModule.functionMap[methodId].apply(nativeModule, params);\n    }\n  }\n\n  onMessage(message: any) {\n    const { topic, payload } = message.data;\n\n    switch (topic) {\n      case \"bundleFinishedLoading\": {\n        this.loading = false;\n        NotificationCenter.emitEvent(\"RCTJavaScriptDidLoadNotification\");\n        if (this.bundleFinishedLoading) {\n          this.bundleFinishedLoading();\n        }\n        break;\n      }\n      case \"flushedQueue\": {\n        if (payload != null && Array.isArray(payload)) {\n          const [moduleIds, methodIds, params] = payload;\n          for (let i = 0; i < moduleIds.length; i++) {\n            this.messages.push({\n              moduleId: moduleIds[i],\n              methodId: methodIds[i],\n              args: params[i]\n            });\n          }\n        }\n        break;\n      }\n      case \"updateProgress\": {\n        this.devLoadingView.updateProgress(payload);\n        break;\n      }\n      default: {\n        console.warn(`Unknown topic: ${topic}`);\n      }\n    }\n\n    if (this.shouldContinue()) {\n      this.uiManager.requestTick();\n    }\n  }\n\n  initializeModules = async () => {\n    this.moduleClasses = await Promise.all(this.nativeModules);\n\n    // resolve default exports from es modules\n    this.moduleClasses = this.moduleClasses.map((maybeModule) => {\n      return (maybeModule: any).default != null\n        ? (maybeModule: any).default\n        : maybeModule;\n    });\n\n    this.moduleClasses.forEach((moduleClass: Class<RCTModule>) => {\n      const module = new moduleClass(this);\n      const moduleName = bridgeModuleNameForClass(moduleClass);\n      this.modulesByName[moduleName] = module;\n    });\n  };\n\n  generateModuleConfig(\n    name: string,\n    bridgeModule: RCTModule\n  ): ModuleDescription {\n    const moduleDescription = bridgeModule._describe();\n    this.moduleConfigs.push(moduleDescription);\n    return moduleDescription;\n  }\n\n  loadBridgeConfig() {\n    const config = this.getInitialModuleConfig();\n    this.sendMessage(\"loadBridgeConfig\", {\n      config,\n      bundle: this.bundleLocation\n    });\n  }\n\n  getInitialModuleConfig = () => {\n    const remoteModuleConfig: ModuleDescription[] = [];\n\n    for (let moduleName in this.modulesByName) {\n      const bridgeModule = this.modulesByName[moduleName];\n      const description = this.generateModuleConfig(moduleName, bridgeModule);\n      remoteModuleConfig.push(description);\n    }\n\n    return { remoteModuleConfig };\n  };\n\n  modulesConformingToProtocol<T: Class<any>>(\n    protocol: T\n  ): $Call<ClassInstance, T>[] {\n    return Object.values(this.modulesByName).filter((module) => {\n      return module instanceof RCTModule && module instanceof protocol;\n    });\n  }\n\n  enqueueJSCall(moduleName: string, methodName: string, args: Array<any>) {\n    // console.log(\"Native -> JS\", moduleName, methodName, args);\n    this.sendMessage(\"callFunctionReturnFlushedQueue\", [\n      moduleName,\n      methodName,\n      args\n    ]);\n  }\n\n  enqueueJSCallWithDotMethod(moduleDotMethod: string, args: Array<any>) {\n    const [module, method] = moduleDotMethod.split(\".\");\n    this.enqueueJSCall(module, method, args);\n  }\n\n  enqueueJSCallback(id: number, args: Array<any>) {\n    // console.log(\"invokeCallback\", id, args);\n    this.sendMessage(\"invokeCallbackAndReturnFlushedQueue\", [id, args]);\n  }\n\n  callbackFromId(id: number) {\n    return (...args: Array<any>) => {\n      this.enqueueJSCallback(id, args);\n    };\n  }\n\n  getModuleByName<T>(name: string): T {\n    const module: any = this.modulesByName[name];\n    invariant(module, `No such module found with name '${name}'`);\n    return module;\n  }\n\n  get uiManager(): RCTUIManager {\n    if (!this._uiManager) {\n      const uiManager: any = this.modulesByName[\"UIManager\"];\n      this._uiManager = uiManager;\n    }\n    return this._uiManager;\n  }\n\n  get devLoadingView(): RCTDevLoadingView {\n    if (!this._devLoadingView) {\n      const devLoadingView: any = this.modulesByName[\"DevLoadingView\"];\n      this._devLoadingView = devLoadingView;\n    }\n    return this._devLoadingView;\n  }\n\n  get eventDispatcher(): RCTEventDispatcher {\n    if (!this._eventDispatcher) {\n      const eventDispatcher: any = this.modulesByName[\"EventDispatcher\"];\n      this._eventDispatcher = eventDispatcher;\n    }\n    return this._eventDispatcher;\n  }\n\n  get imageLoader(): RCTImageLoader {\n    if (!this._imageLoader) {\n      const imageLoader: any = this.modulesByName[\"ImageLoader\"];\n      this._imageLoader = imageLoader;\n    }\n    return this._imageLoader;\n  }\n\n  get deviceInfo(): RCTDeviceInfo {\n    if (!this._deviceInfo) {\n      const deviceInfo: any = this.modulesByName[\"DeviceInfo\"];\n      this._deviceInfo = deviceInfo;\n    }\n    return this._deviceInfo;\n  }\n\n  get devSettings(): RCTDevSettings {\n    if (!this._devSettings) {\n      const devSettings: any = this.modulesByName[\"DevSettings\"];\n      this._devSettings = devSettings;\n    }\n    return this._devSettings;\n  }\n\n  get redBox(): RCTRedBox {\n    if (!this._redBox) {\n      const redBox: any = this.modulesByName[\"RedBox\"];\n      this._redBox = redBox;\n    }\n    return this._redBox;\n  }\n\n  get networking(): RCTNetworking {\n    if (!this._networking) {\n      const networking: any = this.modulesByName[\"Networking\"];\n      this._networking = networking;\n    }\n    return this._networking;\n  }\n\n  get blobManager(): RCTBlobManager {\n    if (!this._blobManager) {\n      const blobModule: any = this.modulesByName[\"BlobModule\"];\n      this._blobManager = blobModule;\n    }\n    return this._blobManager;\n  }\n\n  async frame() {\n    this.sendMessage(\"flush\");\n\n    const messages = [...this.messages];\n    this.messages = [];\n\n    messages.forEach(({ moduleId, methodId, args }) => {\n      this.callNativeModule(moduleId, methodId, args);\n    });\n  }\n\n  shouldContinue(): boolean {\n    return this.messages.length !== 0;\n  }\n}\n"],"file":"RCTBridge.js"}