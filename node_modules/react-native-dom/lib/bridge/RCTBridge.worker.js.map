{"version":3,"sources":["../../ReactDom/bridge/RCTBridge.worker.js"],"names":["sendMessage","topic","payload","postMessage","Status","undefined","loadBundle","bundle","Promise","resolve","reject","__DEV__","xmlHttp","XMLHttpRequest","open","setRequestHeader","onload","importScripts","onerror","evt","onabort","onprogress","progressEvents","response","match","JSON","parse","length","done","total","err","send","handleError","e","console","warn","xmlhttp","onreadystatechange","readyState","result","responseText","type","message","snippet","replace","split","filename","indexOf","errors","i","error","stringify","onmessage","data","config","__fbBatchedBridgeConfig","then","catch","self","__fbBatchedBridge","flushedQueue","callFunctionReturnFlushedQueue","invokeCallbackAndReturnFlushedQueue","apply"],"mappings":"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","sourcesContent":["function sendMessage(topic, payload) {\n  postMessage({ topic, payload });\n}\n\nlet Status = undefined;\n\nfunction loadBundle(bundle) {\n  return new Promise(function(resolve, reject) {\n    if (__DEV__) {\n      let xmlHttp = new XMLHttpRequest();\n      xmlHttp.open(\"GET\", bundle, true);\n      xmlHttp.setRequestHeader(\"Accept\", \"multipart/mixed\");\n      xmlHttp.onload = function() {\n        importScripts(bundle);\n        resolve();\n      };\n      xmlHttp.onerror = function(evt) {\n        reject(evt);\n      };\n      xmlHttp.onabort = function(evt) {\n        reject(evt);\n      };\n      xmlHttp.onprogress = function(evt) {\n        const progressEvents = xmlHttp.response.match(/\\{[\\S]*\\}/g);\n        if (progressEvents) {\n          try {\n            const { done, total } = JSON.parse(\n              progressEvents[progressEvents.length - 1]\n            );\n            if (done && total) {\n              sendMessage(\"updateProgress\", { done, total });\n            }\n          } catch (err) {\n            /* silence parse errors */\n          }\n        }\n      };\n      xmlHttp.send();\n    } else {\n      importScripts(bundle);\n      resolve();\n    }\n  });\n}\n\nfunction handleError(e) {\n  console.warn(e);\n  let xmlhttp = new XMLHttpRequest();\n  xmlhttp.open(\"GET\", bundle, true);\n  xmlhttp.onreadystatechange = function() {\n    if (xmlhttp.readyState == 4) {\n      let result = JSON.parse(xmlhttp.responseText);\n      if (result) {\n        if (\n          result.type === \"UnableToResolveError\" ||\n          result.type === \"NotFoundError\"\n        ) {\n          console.warn(result.message);\n        } else {\n          if (result.snippet) {\n            // remove all color characters and split the lines for improved clarity\n            result.snippet = result.snippet\n              .replace(/\\u001b\\[.*?m/g, \"\")\n              .split(\"\\\\n\");\n          }\n          if (result.filename && result.filename.indexOf(\":\") <= 2) {\n            result.filename = \"file:///\" + result.filename;\n          }\n          if (result.errors) {\n            for (let i = 0; i < result.errors.length; i++) {\n              let error = result.errors[i];\n              if (error.filename && error.filename.indexOf(\":\") <= 2) {\n                error.filename = \"file:///\" + error.filename;\n              }\n            }\n          }\n          console.warn(JSON.stringify(result, undefined, 2));\n        }\n      }\n    }\n    xmlhttp.send(null);\n  };\n}\n\nonmessage = ({ data }) => {\n  const { topic, payload } = data;\n  // console.log(\"Recieved message from main thread:\", topic, payload);\n\n  switch (topic) {\n    case \"loadBridgeConfig\": {\n      const { config, bundle } = payload;\n      __fbBatchedBridgeConfig = config;\n      loadBundle(bundle)\n        .then(function() {\n          sendMessage(\"bundleFinishedLoading\");\n        })\n        .catch(handleError);\n      break;\n    }\n    case \"callFunctionReturnFlushedQueue\": {\n      try {\n        if (self.__fbBatchedBridge) {\n          const flushedQueue = __fbBatchedBridge.callFunctionReturnFlushedQueue(\n            ...payload\n          );\n          sendMessage(\"flushedQueue\", flushedQueue);\n        }\n      } catch (e) {\n        console.warn(e);\n        console.warn(\"topic\", topic);\n        console.warn(\"payload\", payload);\n      }\n      break;\n    }\n    case \"invokeCallbackAndReturnFlushedQueue\": {\n      try {\n        if (self.__fbBatchedBridge) {\n          const flushedQueue = __fbBatchedBridge.invokeCallbackAndReturnFlushedQueue(\n            ...payload\n          );\n          sendMessage(\"flushedQueue\", flushedQueue);\n        }\n      } catch (e) {\n        console.warn(e);\n        console.warn(\"topic\", topic);\n        console.warn(\"payload\", payload);\n      }\n      break;\n    }\n    case \"flush\": {\n      try {\n        if (self.__fbBatchedBridge) {\n          const flushedQueue = __fbBatchedBridge.flushedQueue.apply(null);\n          sendMessage(\"flushedQueue\", flushedQueue);\n        }\n      } catch (e) {\n        console.warn(e);\n        console.warn(\"topic\", topic);\n        console.warn(\"payload\", payload);\n      }\n      break;\n    }\n  }\n};\n"],"file":"RCTBridge.worker.js"}