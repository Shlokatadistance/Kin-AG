{"version":3,"sources":["../../ReactDom/base/UIHitSlopView.js"],"names":["UIHitSlopView","viewOwner","touchable","style","contain","position","value","resolvedValue","Object","entries","defaultHitSlop","reduce","acc","cur","cursor","HTMLElement","top","bottom","left","right","customElements","define"],"mappings":"q+BAEA,yF,GAUMA,CAAAA,a,2EAUJ,uBAAYC,SAAZ,CAA+BC,SAA/B,CAAmD,4DACjD,2GAEA,MAAKD,SAAL,CAAiBA,SAAjB,CACA,MAAKC,SAAL,CAAiBA,SAAjB,CAEA,sBACE,MAAKC,KADP,CAEE,gCAAmB,CACjBC,OAAO,CAAE,QADQ,CAEjBC,QAAQ,CAAE,UAFO,CAAnB,CAFF,EANiD,aAalD,C,sEAEQC,K,CAAgB,CACvB,GAAMC,CAAAA,aAAa,CAAGC,MAAM,CAACC,OAAP,+BACjBT,aAAa,CAACU,cADG,CAEjBJ,KAFiB,GAGnBK,MAHmB,CAIpB,SAACC,GAAD,CAAMC,GAAN,sCACKD,GADL,iCAEGC,GAAG,CAAC,CAAD,CAFN,CAEe,CAAC,CAAD,CAAKA,GAAG,CAAC,CAAD,CAFvB,SAJoB,CAQpB,EARoB,CAAtB,CAWA,sBAAc,KAAKV,KAAnB,CAA0BI,aAA1B,EACD,C,oCAEaD,K,CAAgB,CAC5B,KAAKH,KAAL,CAAWW,MAAX,CAAoBR,KAAK,CAAG,SAAH,CAAe,MAAxC,CACD,C,yDA1CyBS,W,GAAtBf,a,CACGU,c,CAA0B,CAC/BM,GAAG,CAAE,CAD0B,CAE/BC,MAAM,CAAE,CAFuB,CAG/BC,IAAI,CAAE,CAHyB,CAI/BC,KAAK,CAAE,CAJwB,C,CA4CnCC,cAAc,CAACC,MAAf,CAAsB,kBAAtB,CAA0CrB,aAA1C,E,aAEeA,a","sourcesContent":["/** @flow */\n\nimport prefixInlineStyles from \"prefixInlineStyles\";\nimport type UIView from \"UIView\";\n\nexport type HitSlop = {\n  top?: number,\n  bottom?: number,\n  left?: number,\n  right?: number\n};\n\nclass UIHitSlopView extends HTMLElement {\n  static defaultHitSlop: HitSlop = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  };\n\n  viewOwner: UIView;\n\n  constructor(viewOwner: UIView, touchable: boolean) {\n    super();\n\n    this.viewOwner = viewOwner;\n    this.touchable = touchable;\n\n    Object.assign(\n      this.style,\n      prefixInlineStyles({\n        contain: \"strict\",\n        position: \"absolute\"\n      })\n    );\n  }\n\n  set slop(value: HitSlop) {\n    const resolvedValue = Object.entries({\n      ...UIHitSlopView.defaultHitSlop,\n      ...value\n    }).reduce(\n      (acc, cur: any) => ({\n        ...acc,\n        [cur[0]]: `${-1 * cur[1]}px`\n      }),\n      {}\n    );\n\n    Object.assign(this.style, resolvedValue);\n  }\n\n  set touchable(value: boolean) {\n    this.style.cursor = value ? \"pointer\" : \"auto\";\n  }\n}\n\ncustomElements.define(\"ui-hit-slop-view\", UIHitSlopView);\n\nexport default UIHitSlopView;\n"],"file":"UIHitSlopView.js"}