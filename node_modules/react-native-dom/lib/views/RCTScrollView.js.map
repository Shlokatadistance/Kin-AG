{"version":3,"sources":["../../ReactDom/views/RCTScrollView.js"],"names":["isSafari","test","navigator","userAgent","SCROLL_LISTENER_OPTIONS","detectIt","passiveEvents","passive","RCTScrollEvent","eventName","reactTag","contentOffset","contentInset","contentSize","scrollFrame","zoomScale","coalescingKey","userData","viewTag","scrollViewContentOffset","scrollViewContentInset","scrollViewContentSize","scrollViewFrame","scrollViewZoomScale","newEvent","updatedChildFrames","concat","length","args","body","layoutMeasurement","width","height","RCTScrollContentView","bridge","updateHostStyle","position","display","opacity","contain","addWillChange","value","superView","reactSuperview","subView","reactSubviews","RCTView","RCTScrollView","boundsDidChange","setScrollPadding","node","scrollTop","offsetHeight","scrollHeight","customElements","define","onTouchStart","handleScroll","e","scrollLeft","x","y","scrollDidChange","top","left","bottom","right","scrollWidth","shadowView","manager","shadowViewRegistry","get","contentFrame","previousLayout","debouncedOnScrollEnd","isScrolling","handleScrollTick","handleScrollStart","handleScrollEnd","uiManager","updateChildContainerStyle","hasScrollParent","scrollEventThrottle","cachedChildFrames","_horizontal","_overflow","_scrollEnabled","addEventListener","isIOS","currentView","reactSuperView","styleUpdate","msOverflowStyle","webkitOverflowScrolling","overflowX","overflowY","touchAction","setAttribute","undefined","removeAttribute","contentView","forEach","subview","idx","newFrame","frame","frameChanged","JSON","stringify","push","index","correctScrollPosition","childFrames","calculateChildFramesData","eventDispatcher","sendEvent","setTimeout","localData","RCTScrollViewLocalData","setLocalDataForView","_scrollLastTick","Date","now","eventArgs","scrollEvent","momentumScrollEvent","scrollNudge","endTopPosition","endLeftPosition","shouldEmitScrollEvent","lastTick","eventThrottle","timeSinceLastTick","updateScrollBehavior","scrollBehavior","_touchable","updateDerivedPointerEvents"],"mappings":"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","sourcesContent":["/** @flow */\n\nimport detectIt from \"detect-it\";\nimport debounce from \"debounce\";\nimport invariant from \"invariant\";\n\nimport type { Frame, Inset, Size, Position } from \"InternalLib\";\nimport RCTView from \"RCTView\";\nimport UIView from \"UIView\";\nimport type RCTBridge from \"RCTBridge\";\nimport { type RCTEvent } from \"RCTEventDispatcher\";\nimport RCTScrollViewLocalData from \"RCTScrollViewLocalData\";\nimport isIOS from \"isIOS\";\nimport RCTEventDispatcher, {\n  normalizeInputEventName\n} from \"RCTEventDispatcher\";\n\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nconst SCROLL_LISTENER_OPTIONS = detectIt.passiveEvents\n  ? { passive: true }\n  : false;\n\ntype ScrollEventArgs = [\n  number,\n  Position,\n  Inset,\n  Size,\n  Frame,\n  number,\n  number,\n  ?Object\n];\n\n// $FlowFixMe - coalesceWithEvent should be compatible but I think flow has a bug\nclass RCTScrollEvent implements RCTEvent {\n  // interface properties\n  viewTag: number;\n  eventName: string;\n  coalescingKey: number;\n\n  scrollViewContentOffset: Position;\n  scrollViewContentInset: Inset;\n  scrollViewContentSize: Size;\n  scrollViewFrame: Frame;\n  scrollViewZoomScale: number;\n  userData: ?Object;\n\n  constructor(\n    eventName: string,\n    reactTag: number,\n    contentOffset: Position,\n    contentInset: Inset,\n    contentSize: Size,\n    scrollFrame: Frame,\n    zoomScale: number,\n    coalescingKey: number,\n    userData: ?Object\n  ) {\n    this.eventName = eventName;\n    this.viewTag = reactTag;\n    this.scrollViewContentOffset = contentOffset;\n    this.scrollViewContentInset = contentInset;\n    this.scrollViewContentSize = contentSize;\n    this.scrollViewFrame = scrollFrame;\n    this.scrollViewZoomScale = zoomScale;\n    this.userData = userData;\n    this.coalescingKey = coalescingKey;\n  }\n\n  get body() {\n    let body = {\n      contentOffset: {\n        ...this.scrollViewContentOffset\n      },\n      contentInset: {\n        ...this.scrollViewContentInset\n      },\n      contentSize: {\n        ...this.scrollViewContentSize\n      },\n      layoutMeasurement: {\n        width: this.scrollViewFrame.width,\n        height: this.scrollViewFrame.height\n      },\n      zoomScale: this.scrollViewZoomScale\n    };\n\n    const userData = this.userData;\n    if (userData) {\n      body = { ...body, ...userData };\n    }\n\n    return body;\n  }\n\n  canCoalesce(): boolean {\n    return true;\n  }\n\n  coalesceWithEvent(newEvent: RCTScrollEvent): RCTScrollEvent {\n    let updatedChildFrames = [];\n    if (this.userData && this.userData.updatedChildFrames)\n      updatedChildFrames = updatedChildFrames.concat(\n        this.userData.updatedChildFrames\n      );\n    if (newEvent.userData && newEvent.userData.updatedChildFrames)\n      updatedChildFrames = updatedChildFrames.concat(\n        newEvent.userData.updatedChildFrames\n      );\n\n    if (updatedChildFrames.length !== 0) {\n      newEvent.userData = {\n        updatedChildFrames\n      };\n    }\n\n    return newEvent;\n  }\n\n  moduleDotMethod(): string {\n    return \"RCTEventEmitter.receiveEvent\";\n  }\n  arguments(): Array<any> {\n    const args = [\n      this.viewTag,\n      normalizeInputEventName(this.eventName),\n      this.body\n    ];\n    return args;\n  }\n}\n\nclass RCTScrollContentView extends RCTView {\n  constructor(bridge: RCTBridge) {\n    super(bridge);\n    this.updateHostStyle({\n      position: \"relative\",\n      display: \"block\",\n      opacity: \"1\",\n      contain: \"layout style\"\n    });\n\n    // vastly improves scrolling performance (especially on Safari)\n    if (isSafari) {\n      this.addWillChange(\"transform\");\n    }\n  }\n\n  set frame(value: Frame) {\n    super.frame = value;\n\n    const superView = this.reactSuperview;\n    const subView = this.reactSubviews[0];\n\n    if (\n      subView &&\n      subView instanceof RCTView &&\n      superView &&\n      superView instanceof RCTScrollView\n    ) {\n      superView.boundsDidChange(subView);\n    }\n  }\n\n  get frame(): Frame {\n    return super.frame;\n  }\n}\n\ntype ChildFrame = {\n  index: number,\n  x: number,\n  y: number,\n  width: number,\n  height: number\n};\n\nfunction setScrollPadding(node: HTMLElement) {\n  const { scrollTop, offsetHeight, scrollHeight } = node;\n\n  if (scrollTop <= 0) {\n    node.scrollTop = 1;\n  }\n\n  if (scrollTop + offsetHeight >= scrollHeight) {\n    node.scrollTop = scrollHeight - offsetHeight - 1;\n  }\n}\n\ncustomElements.define(\"rct-scroll-content-view\", RCTScrollContentView);\n\nclass RCTScrollView extends RCTView {\n  manager: *;\n\n  isScrolling: boolean;\n  scrollEventThrottle: number;\n  _scrollLastTick: number;\n\n  _horizontal: boolean;\n  _overflow: string;\n  _scrollEnabled: boolean;\n\n  coalescingKey: number;\n  cachedChildFrames: Array<Frame>;\n\n  contentSize: Size = { width: 0, height: 0 };\n\n  constructor(bridge: RCTBridge) {\n    super(bridge);\n\n    this.manager = bridge.uiManager;\n\n    this.updateHostStyle(\"contain\", \"strict\");\n    this.updateChildContainerStyle(\"contain\", \"style size\");\n\n    if (!this.hasScrollParent()) {\n      this.updateHostStyle(\"overscrollBehavior\", \"contain\");\n    }\n\n    this.isScrolling = false;\n    this.scrollEventThrottle = 0;\n\n    this.coalescingKey = 0;\n    this.cachedChildFrames = [];\n\n    this._horizontal = false;\n    this._overflow = \"scroll\";\n    this._scrollEnabled = true;\n\n    if (isSafari) {\n      this.addWillChange(\"transform\");\n    }\n\n    this.addEventListener(\"scroll\", this.handleScroll, SCROLL_LISTENER_OPTIONS);\n\n    if (isIOS) {\n      this.addEventListener(\n        \"touchstart\",\n        this.onTouchStart,\n        detectIt.passiveEvents ? { passive: true } : false\n      );\n    }\n  }\n\n  onTouchStart = () => {\n    setScrollPadding(this);\n  };\n\n  hasScrollParent() {\n    let currentView = this;\n    while (currentView.reactSuperview) {\n      if (currentView instanceof RCTScrollView) {\n        return true;\n      }\n      currentView = currentView.reactSuperView;\n    }\n    return false;\n  }\n\n  set scrollEnabled(value: ?boolean) {\n    this._scrollEnabled = !!value;\n    this.updateScrollBehavior();\n  }\n\n  set horizontal(value: ?boolean) {\n    this._horizontal = !!value;\n    this.updateScrollBehavior();\n  }\n\n  set overflow(value: ?string) {\n    if (value != null) {\n      this._overflow = value;\n    } else {\n      this._overflow = \"hidden\";\n    }\n    this.updateScrollBehavior();\n  }\n\n  set scrollBehavior(value: \"auto\" | \"smooth\") {\n    this.updateHostStyle({\n      scrollBehavior: value\n    });\n  }\n\n  updateScrollBehavior() {\n    const styleUpdate = {};\n    if (this._overflow === \"scroll\" && this._scrollEnabled) {\n      styleUpdate.msOverflowStyle = \"-ms-autohiding-scrollbar\";\n      styleUpdate.webkitOverflowScrolling = \"touch\";\n\n      if (this._horizontal) {\n        styleUpdate.overflowX = \"auto\";\n        styleUpdate.overflowY = \"hidden\";\n        styleUpdate.touchAction = \"pan-x\";\n        this.setAttribute(\"touch-action\", \"pan-x\");\n      } else {\n        styleUpdate.overflowX = \"hidden\";\n        styleUpdate.overflowY = \"auto\";\n        styleUpdate.touchAction = \"pan-y\";\n        this.setAttribute(\"touch-action\", \"pan-y\");\n      }\n    } else {\n      styleUpdate.touchAction = undefined;\n      this.removeAttribute(\"touch-action\");\n\n      styleUpdate.msOverflowStyle = \"auto\";\n      styleUpdate.webkitOverflowScrolling = \"\";\n\n      styleUpdate.overflowX = \"hidden\";\n      styleUpdate.overflowY = \"hidden\";\n    }\n\n    this.updateHostStyle(styleUpdate);\n  }\n\n  calculateChildFramesData() {\n    const updatedChildFrames = [];\n\n    const contentView = this.reactSubviews[0];\n    invariant(\n      contentView && contentView instanceof RCTScrollContentView,\n      `RCTScrollView (of ID ${this.reactTag}) has no contentView`\n    );\n\n    contentView.reactSubviews.forEach((subview, idx) => {\n      const newFrame = subview.frame;\n\n      let frameChanged = false;\n      if (this.cachedChildFrames.length <= idx) {\n        frameChanged = true;\n        // this.cachedChildFrames.push(newFrame);\n      } else if (\n        JSON.stringify(newFrame) !== JSON.stringify(this.cachedChildFrames[idx])\n      ) {\n        frameChanged = true;\n        // this.cachedChildFrames[idx] = newFrame;\n      }\n\n      if (frameChanged) {\n        updatedChildFrames.push({\n          index: idx,\n          x: newFrame.left,\n          y: newFrame.top,\n          width: newFrame.width,\n          height: newFrame.height\n        });\n      }\n    });\n\n    return updatedChildFrames;\n  }\n\n  connectedCallback() {\n    this.correctScrollPosition();\n  }\n\n  boundsDidChange(contentView: RCTView) {\n    this.coalescingKey++;\n    const childFrames = this.calculateChildFramesData();\n\n    const contentOffset: Position = {\n      x: this.scrollLeft,\n      y: this.scrollTop\n    };\n\n    const contentInset: Inset = {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    };\n\n    const contentSize = {\n      width: this.scrollWidth,\n      height: this.scrollHeight\n    };\n\n    // const contentFrame = this.manager.measure(this.reactTag);\n    const shadowView = this.manager.shadowViewRegistry.get(this.reactTag);\n    invariant(shadowView, `No ShadowView for tag ${this.reactTag}`);\n    const contentFrame = shadowView.previousLayout;\n    invariant(\n      contentFrame,\n      `ShadowView with tag ${this.reactTag} has not been layed out`\n    );\n\n    this.contentSize = {\n      width: contentFrame.width,\n      height: contentFrame.height\n    };\n\n    const args = [\n      this.reactTag,\n      contentOffset,\n      contentInset,\n      contentSize,\n      contentFrame,\n      1,\n      this.coalescingKey\n    ];\n\n    this.bridge.eventDispatcher.sendEvent(\n      new RCTScrollEvent(\"onScroll\", ...args, {\n        updatedChildFrames: childFrames\n      })\n    );\n  }\n\n  scrollDidChange(x: number, y: number) {\n    setTimeout(() => {\n      const localData = new RCTScrollViewLocalData(x, y);\n      this.bridge.uiManager.setLocalDataForView(localData, this);\n    }, 0);\n  }\n\n  handleScroll = async (e: Event, userData: ?Object) => {\n    this.coalescingKey++;\n\n    const scrollLeft = this.scrollLeft;\n    const scrollTop = this.scrollTop;\n\n    const contentOffset: Position = {\n      x: scrollLeft,\n      y: scrollTop\n    };\n\n    this.scrollDidChange(scrollLeft, scrollTop);\n\n    const contentInset: Inset = {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    };\n\n    const contentSize = {\n      width: this.scrollWidth,\n      height: this.scrollHeight\n    };\n\n    const shadowView = this.manager.shadowViewRegistry.get(this.reactTag);\n    invariant(shadowView, `No ShadowView for tag ${this.reactTag}`);\n    const contentFrame = shadowView.previousLayout;\n    invariant(\n      contentFrame,\n      `ShadowView with tag ${this.reactTag} has not been layed out`\n    );\n\n    const args = [\n      this.reactTag,\n      contentOffset,\n      contentInset,\n      contentSize,\n      contentFrame,\n      1,\n      this.coalescingKey,\n      userData\n    ];\n\n    this.debouncedOnScrollEnd(...args);\n\n    if (this.isScrolling) {\n      this.handleScrollTick(...args);\n    } else {\n      this.handleScrollStart(...args);\n    }\n  };\n\n  debouncedOnScrollEnd = debounce(this.handleScrollEnd, 100);\n\n  handleScrollStart(...eventArgs: ScrollEventArgs) {\n    this.isScrolling = true;\n    this._scrollLastTick = Date.now();\n\n    const scrollEvent = new RCTScrollEvent(\"onScrollBeginDrag\", ...eventArgs);\n    this.bridge.eventDispatcher.sendEvent(scrollEvent);\n  }\n\n  handleScrollEnd(...eventArgs: ScrollEventArgs) {\n    this.isScrolling = false;\n\n    const scrollEvent = new RCTScrollEvent(\"onScrollEndDrag\", ...eventArgs);\n    this.bridge.eventDispatcher.sendEvent(scrollEvent);\n\n    const momentumScrollEvent = new RCTScrollEvent(\n      \"onMomentumScrollEnd\",\n      ...eventArgs\n    );\n    this.bridge.eventDispatcher.sendEvent(momentumScrollEvent);\n    this.correctScrollPosition();\n  }\n\n  correctScrollPosition() {\n    const scrollNudge = 1;\n\n    if (isIOS) {\n      if (!this._horizontal) {\n        const endTopPosition = this.scrollTop + this.contentSize.height;\n        if (this.scrollTop <= 0 && this.scrollTop >= -0.1) {\n          this.scrollTop = scrollNudge;\n        } else if (\n          endTopPosition >= this.scrollHeight &&\n          endTopPosition <= this.scrollHeight + 0.1\n        ) {\n          this.scrollTop = this.scrollTop - scrollNudge;\n        }\n      } else {\n        const endLeftPosition = this.scrollLeft + this.contentSize.width;\n        if (this.scrollLeft <= 0 && this.scrollLeft >= -0.1) {\n          this.scrollLeft = scrollNudge;\n        } else if (\n          endLeftPosition >= this.scrollWidth &&\n          endLeftPosition <= this.scrollWidth + 0.1\n        ) {\n          this.scrollLeft = this.scrollLeft - scrollNudge;\n        }\n      }\n    }\n  }\n\n  handleScrollTick(...eventArgs: ScrollEventArgs) {\n    const shouldEmitScrollEvent = this.shouldEmitScrollEvent(\n      this._scrollLastTick,\n      this.scrollEventThrottle\n    );\n\n    if (shouldEmitScrollEvent) {\n      this._scrollLastTick = Date.now();\n      const scrollEvent = new RCTScrollEvent(\"onScroll\", ...eventArgs);\n      this.bridge.eventDispatcher.sendEvent(scrollEvent);\n    }\n  }\n\n  shouldEmitScrollEvent(lastTick: number, eventThrottle: number): boolean {\n    const timeSinceLastTick = Date.now() - lastTick;\n    return eventThrottle > 0 && timeSinceLastTick >= eventThrottle;\n  }\n\n  get touchable(): boolean {\n    return super.touchable;\n  }\n\n  set touchable(value: boolean) {\n    // super.touchable = value;\n    this._touchable = value;\n    this.updateDerivedPointerEvents();\n    this.updateHostStyle(\"cursor\", \"auto\");\n  }\n}\n\ncustomElements.define(\"rct-scroll-view\", RCTScrollView);\n\nexport default RCTScrollView;\nexport { RCTScrollContentView };\n"],"file":"RCTScrollView.js"}