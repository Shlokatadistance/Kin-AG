{"version":3,"sources":["../../ReactDom/views/RCTComponentData.js"],"names":["moduleNameForClass","cls","name","moduleName","startsWith","substring","endsWith","length","RCTComponentData","managerClass","bridge","viewPropBlocks","shadowPropBlocks","rawPropConfig","reduce","propConfig","raw","type","setter","view","value","tag","manager","reactTag","shadowView","props","Object","keys","forEach","propName","hasOwnProperty","propValue","shadowPropConfig","_manager","moduleForClass","count","propTypes","bubblingEvents","directEvents","customBubblingEventTypes","events","event","push","propDescription","describeProps","viewProps","concat","shadowProps","nativeOnly","baseModuleName","_propConfig","generatePropConfig","_shadowPropConfig"],"mappings":"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","sourcesContent":["/** @flow */\n\nimport invariant from \"invariant\";\n\nimport RCTBridge, { getPropertyNames } from \"RCTBridge\";\nimport { bridgeModuleNameForClass } from \"RCTModule\";\nimport type RCTUIManager from \"RCTUIManager\";\nimport type { RCTComponent } from \"RCTComponent\";\nimport UIView from \"UIView\";\nimport { normalizeInputEventName } from \"RCTEventDispatcher\";\nimport RCTText from \"RCTText\";\nimport RCTRawText from \"RCTRawText\";\nimport type RCTView from \"RCTView\";\nimport RCTTextInput from \"RCTTextInput\";\nimport type RCTShadowView from \"RCTShadowView\";\nimport type RCTViewManager from \"RCTViewManager\";\nimport type { PropDefType } from \"RCTPropDescription\";\n\ntype Props = { [string]: any };\n\ntype ViewConfig = {\n  propTypes: Props,\n  bubblingEvents: Array<string>,\n  directEvents: Array<string>,\n  baseModuleName: ?string\n  // uiClassViewName: string\n};\n\ntype RCTPropBlock = (view: RCTComponent, { [string]: any }) => void;\ntype RCTPropBlockDictionary = { [string]: RCTPropBlock };\n\nfunction moduleNameForClass(cls: Class<RCTViewManager>) {\n  let name = cls.moduleName;\n  if (name != null) {\n    if (name.startsWith(\"RK\")) {\n      name = `RCT${name.substring(2)}`;\n    }\n    if (name.endsWith(\"Manager\")) {\n      name = name.substring(0, name.length - \"Manager\".length);\n    }\n    return name;\n  }\n  return \"\";\n}\n\nclass RCTComponentData {\n  managerClass: Class<RCTViewManager>;\n  name: string;\n  _manager: ?RCTViewManager;\n  bridge: RCTBridge;\n  _propConfig: ?Object;\n  _shadowPropConfig: ?Object;\n\n  viewPropBlocks: RCTPropBlockDictionary;\n  shadowPropBlocks: RCTPropBlockDictionary;\n\n  constructor(managerClass: Class<RCTViewManager>, bridge: RCTBridge) {\n    this.bridge = bridge;\n    this.managerClass = managerClass;\n    this.viewPropBlocks = {};\n    this.shadowPropBlocks = {};\n    this.name = moduleNameForClass(managerClass);\n  }\n\n  get manager(): RCTViewManager {\n    if (this._manager == null) {\n      this._manager = (this.bridge.moduleForClass(this.managerClass): any);\n    }\n    invariant(this._manager, \"RCTComponentData's view manager must be set\");\n    return this._manager;\n  }\n\n  get viewConfig(): ViewConfig {\n    const count = 0;\n    const propTypes = {};\n    const bubblingEvents = [];\n    const directEvents = [];\n\n    if (this.manager.customBubblingEventTypes) {\n      const events = this.manager.customBubblingEventTypes();\n      for (let event of events) {\n        bubblingEvents.push(normalizeInputEventName(event));\n      }\n    }\n\n    const propDescription = this.manager.describeProps();\n\n    propDescription.viewProps\n      .concat(propDescription.shadowProps)\n      .forEach(({ name, type, nativeOnly }) => {\n        if (!nativeOnly) {\n          if (type === \"RCTBubblingEventBlock\") {\n            bubblingEvents.push(normalizeInputEventName(name));\n            propTypes[name] = \"BOOL\";\n          } else if (type === \"RCTDirectEventBlock\") {\n            directEvents.push(normalizeInputEventName(name));\n            propTypes[name] = \"BOOL\";\n          } else {\n            propTypes[name] = type;\n          }\n        }\n      });\n\n    return {\n      propTypes,\n      bubblingEvents,\n      directEvents,\n      baseModuleName: null\n    };\n  }\n\n  generatePropConfig(\n    rawPropConfig: Array<PropDefType>\n  ): { [string]: { type: string, setter: Function } } {\n    return rawPropConfig.reduce(\n      (propConfig, raw) => ({\n        ...propConfig,\n        [raw.name]: {\n          type: raw.type,\n          setter: raw.setter\n            ? raw.setter\n            : (view, value) => {\n                view[raw.name] = value;\n              }\n        }\n      }),\n      {}\n    );\n  }\n\n  get propConfig(): { [string]: { type: string, setter: Function } } {\n    if (this._propConfig == null) {\n      this._propConfig = this.generatePropConfig(\n        this.manager.describeProps().viewProps\n      );\n    }\n\n    return this._propConfig;\n  }\n\n  get shadowPropConfig(): { [string]: { type: string, setter: Function } } {\n    if (this._shadowPropConfig == null) {\n      this._shadowPropConfig = this.generatePropConfig(\n        this.manager.describeProps().shadowProps\n      );\n    }\n\n    return this._shadowPropConfig;\n  }\n\n  createView(tag: number): UIView {\n    const view: UIView = (this.manager.view(): any);\n    view.reactTag = tag;\n    return view;\n  }\n\n  createShadowView(tag: number): RCTShadowView {\n    const shadowView: RCTShadowView = this.manager.shadowView();\n    shadowView.reactTag = tag;\n    return shadowView;\n  }\n\n  setPropsForView(props: Props, view: RCTComponent) {\n    if (props) {\n      Object.keys(props).forEach((propName) => {\n        if (this.propConfig.hasOwnProperty(propName)) {\n          const propConfig = this.propConfig[propName];\n          const propValue = props[propName];\n          const setter = propConfig.setter;\n\n          setter(view, propValue);\n        }\n      });\n    }\n  }\n\n  setPropsForShadowView(props: Props, shadowView: RCTShadowView) {\n    if (props) {\n      Object.keys(props).forEach((propName) => {\n        if (this.shadowPropConfig.hasOwnProperty(propName)) {\n          const propConfig = this.shadowPropConfig[propName];\n          const propValue = props[propName];\n          const setter = propConfig.setter;\n\n          setter(shadowView, propValue);\n        }\n      });\n    }\n  }\n}\n\nexport default RCTComponentData;\n"],"file":"RCTComponentData.js"}