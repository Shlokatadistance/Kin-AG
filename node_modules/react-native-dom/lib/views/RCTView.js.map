{"version":3,"sources":["../../ReactDom/views/RCTView.js"],"names":["RCTView","bridge","UIView","customElements","define"],"mappings":"qiBAEA,iEAEA,iG,GAEMA,CAAAA,O,2DAGJ,iBAAYC,MAAZ,CAA+B,sDAC7B,qGACA,MAAKA,MAAL,CAAcA,MAAd,CAF6B,aAG9B,C,iBANmBC,gB,EAiCtBC,cAAc,CAACC,MAAf,CAAsB,UAAtB,CAAkCJ,OAAlC,E,aAEeA,O","sourcesContent":["/** @flow */\nimport type { Frame } from \"InternalLib\";\nimport UIView from \"UIView\";\nimport type RCTBridge from \"RCTBridge\";\nimport RCTEventEmitter from \"RCTNativeEventEmitter\";\n\nclass RCTView extends UIView {\n  bridge: RCTBridge;\n\n  constructor(bridge: RCTBridge) {\n    super();\n    this.bridge = bridge;\n  }\n\n  // get frame(): Frame {\n  //   return super.frame;\n  // }\n\n  // set frame(value: Frame) {\n  //   super.frame = value;\n\n  //   if (this.onLayout) {\n  //     this.onLayout({\n  //       layout: {\n  //         x: value.left,\n  //         y: value.top,\n  //         width: value.width,\n  //         height: value.height\n  //       }\n  //     });\n  //   }\n  // }\n\n  // TODO: Renable when I have a plan for focus styling\n  // set accessible(value: boolean) {\n  //   this.tabIndex = 0;\n  // }\n}\n\ncustomElements.define(\"rct-view\", RCTView);\n\nexport default RCTView;\n"],"file":"RCTView.js"}