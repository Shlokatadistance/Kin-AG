{"version":3,"sources":["../../ReactDom/views/RCTRootShadowView.js"],"names":["RCTRootShadowView","bridge","yogaConfig","Yoga","Config","yogaNode","free","Node","createWithConfig","availableSize","width","Infinity","height","i18nModule","modulesByName","direction","NotificationCenter","addListener","DIRECTION_CHANGE_EVENT","size","ratio","setPointScaleFactor","calculateLayout","layoutChanges","getLayoutChanges","top","left","RCTShadowView"],"mappings":"ktBAEA,sDAKA,wFACA,2DAEA,uE,GAEMA,CAAAA,iB,mFAKJ,2BAAYC,MAAZ,CAA+B,gEAC7B,6GAAMA,MAAN,GAEA,MAAKC,UAAL,CAAkB,GAAI,OAAKD,MAAL,CAAYE,IAAZ,CAAiBC,MAArB,EAAlB,CAEA,MAAKC,QAAL,CAAcC,IAAd,GACA,MAAKD,QAAL,CAAgB,MAAKJ,MAAL,CAAYE,IAAZ,CAAiBI,IAAjB,CAAsBC,gBAAtB,CAAuC,MAAKN,UAA5C,CAAhB,CAEA,MAAKO,aAAL,CAAqB,CAAEC,KAAK,CAAEC,QAAT,CAAmBC,MAAM,CAAED,QAA3B,CAArB,CAEA,GAAME,CAAAA,UAA0B,CAAI,MAAKZ,MAAL,CAAYa,aAAZ,CAClC,aADkC,CAApC,CAIA,MAAKC,SAAL,CAAiBF,UAAU,CAACE,SAA5B,CACAC,4BAAmBC,WAAnB,CAA+BC,sCAA/B,CAAuD,cAAmB,IAAhBH,CAAAA,SAAgB,MAAhBA,SAAgB,CACxE,MAAKA,SAAL,CAAiBA,SAAjB,CACD,CAFD,EAf6B,aAkB9B,C,2GAEmBI,I,CAAY,CAC9B,KAAKV,aAAL,CAAqBU,IAArB,CACA,KAAKT,KAAL,CAAaS,IAAI,CAACT,KAAlB,CACA,KAAKE,MAAL,CAAcO,IAAI,CAACP,MAAnB,CACD,C,sEAEsBQ,K,CAAe,CACpC,KAAKlB,UAAL,CAAgBmB,mBAAhB,CAAoCD,KAApC,EACD,C,6DAEwC,yBACb,KAAKX,aADQ,CAC/BC,KAD+B,qBAC/BA,KAD+B,CACxBE,MADwB,qBACxBA,MADwB,CAEvC,KAAKP,QAAL,CAAciB,eAAd,CAA8BZ,KAA9B,CAAqCE,MAArC,CAA6C,KAAKG,SAAlD,EAEA,GAAMQ,CAAAA,aAAa,CAAG,KAAKC,gBAAL,CAAsB,CAC1CC,GAAG,CAAE,CADqC,CAE1CC,IAAI,CAAE,CAFoC,CAAtB,CAAtB,CAKA,MAAOH,CAAAA,aAAP,CACD,C,+BA7C6BI,uB,eAgDjB3B,iB","sourcesContent":["/** @flow */\n\nimport * as Yoga from \"yoga-dom\";\n\nimport type RCTBridge from \"RCTBridge\";\nimport type { Size } from \"InternalLib\";\nimport type { LayoutChange } from \"RCTShadowView\";\nimport NotificationCenter from \"NotificationCenter\";\nimport { DIRECTION_CHANGE_EVENT } from \"RCTI18nManager\";\nimport type RCTI18nManager from \"RCTI18nManager\";\nimport RCTShadowView from \"RCTShadowView\";\n\nclass RCTRootShadowView extends RCTShadowView {\n  availableSize: Size;\n  yogaConfig: Yoga.Config;\n  // YGDirection\n\n  constructor(bridge: RCTBridge) {\n    super(bridge);\n\n    this.yogaConfig = new this.bridge.Yoga.Config();\n\n    this.yogaNode.free();\n    this.yogaNode = this.bridge.Yoga.Node.createWithConfig(this.yogaConfig);\n\n    this.availableSize = { width: Infinity, height: Infinity };\n\n    const i18nModule: RCTI18nManager = (this.bridge.modulesByName[\n      \"I18nManager\"\n    ]: any);\n\n    this.direction = i18nModule.direction;\n    NotificationCenter.addListener(DIRECTION_CHANGE_EVENT, ({ direction }) => {\n      this.direction = direction;\n    });\n  }\n\n  updateAvailableSize(size: Size) {\n    this.availableSize = size;\n    this.width = size.width;\n    this.height = size.height;\n  }\n\n  updatePointScaleFactor(ratio: number) {\n    this.yogaConfig.setPointScaleFactor(ratio);\n  }\n\n  recalculateLayout(): Array<LayoutChange> {\n    const { width, height } = this.availableSize;\n    this.yogaNode.calculateLayout(width, height, this.direction);\n\n    const layoutChanges = this.getLayoutChanges({\n      top: 0,\n      left: 0\n    });\n\n    return layoutChanges;\n  }\n}\n\nexport default RCTRootShadowView;\n"],"file":"RCTRootShadowView.js"}