{"version":3,"sources":["../../ReactDom/views/RCTViewManager.js"],"names":["SHADOW_PROP_NAMES","eventSetter","view","propName","json","mutableEvent","target","reactTag","bridge","eventDispatcher","sendInputEvent","RCTViewManager","RCTView","RCTShadowView","propDescription","RCTPropDescription","reduce","desc","name","addShadowProp","addStringProp","value","borderStyle","BORDER_NUMBER_PROPS","addNumberProp","BORDER_COLOR_PROPS","addColorProp","setBackgroundColor","setOpacity","addArrayProp","setTransform","setAnimatedTransform","addBooleanProp","setTouchable","setDisabled","setPointerEvents","setBackfaceVisibility","setOverflow","setZIndex","setShadowColor","addObjectProp","setShadowOffset","setShadowOpacity","setShadowRadius","addProp","setHitSlop","setDirection","addMirroredProp","RCTPropTypes","bool","addDirectShadowEvent","backgroundColor","opacity","transform","animatedTransform","touchable","disabled","pointerEvents","hitSlop","undefined","backfaceVisibility","overflow","zIndex","shadowColor","shadowOffset","height","width","shadowOpacity","radius","shadowRadius","direction","RCTModule","moduleName","__isViewManager"],"mappings":"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","sourcesContent":["/** @flow */\n\nimport RCTModule from \"RCTModule\";\nimport type RCTBridge from \"RCTBridge\";\nimport UIView from \"UIView\";\nimport RCTPropTypes from \"RCTPropTypes\";\nimport RCTPropDescription from \"RCTPropDescription\";\nimport MatrixMath from \"NativeMatrixMath\";\nimport {\n  BORDER_NUMBER_PROPS,\n  BORDER_COLOR_PROPS,\n  BORDER_STYLE_PROPS\n} from \"UIBorderView\";\nimport RCTView from \"RCTView\";\nimport type { HitSlop } from \"UIHitSlopView\";\nimport RCTShadowView from \"RCTShadowView\";\n\ntype PropDef = {\n  name: string,\n  type: string,\n  setter: (view: RCTView, value: any) => void,\n  exported: boolean\n};\n\nconst SHADOW_PROP_NAMES = [\n  \"top\",\n  \"right\",\n  \"bottom\",\n  \"left\",\n  \"start\",\n  \"end\",\n  \"width\",\n  \"height\",\n  \"minWidth\",\n  \"maxWidth\",\n  \"minHeight\",\n  \"minWidth\",\n  \"borderTopWidth\",\n  \"borderRightWidth\",\n  \"borderBottomWidth\",\n  \"borderLeftWidth\",\n  \"borderStartWidth\",\n  \"borderEndWidth\",\n  \"borderWidth\",\n  \"marginTop\",\n  \"marginRight\",\n  \"marginBottom\",\n  \"marginLeft\",\n  \"marginVertical\",\n  \"marginHorizontal\",\n  \"marginStart\",\n  \"marginEnd\",\n  \"margin\",\n  \"paddingTop\",\n  \"paddingRight\",\n  \"paddingBottom\",\n  \"paddingLeft\",\n  \"paddingVertical\",\n  \"paddingHorizontal\",\n  \"paddingStart\",\n  \"paddingEnd\",\n  \"padding\",\n  \"flex\",\n  \"flexGrow\",\n  \"flexShrink\",\n  \"flexBasis\",\n  \"flexDirection\",\n  \"flexWrap\",\n  \"justifyContent\",\n  \"alignItems\",\n  \"alignSelf\",\n  \"alignContent\",\n  \"position\",\n  \"aspectRatio\",\n  \"overflow\",\n  \"display\",\n  \"direction\"\n];\n\nfunction eventSetter(view: RCTView, propName: string) {\n  return (json: Object) => {\n    const mutableEvent = { ...json };\n    mutableEvent.target = view.reactTag;\n    view.bridge.eventDispatcher.sendInputEvent(propName, mutableEvent);\n  };\n}\n\nclass RCTViewManager extends RCTModule {\n  static moduleName = \"RCTViewManager\";\n  static __isViewManager = true;\n\n  view(): UIView {\n    return new RCTView(this.bridge);\n  }\n\n  shadowView(): RCTShadowView {\n    return new RCTShadowView(this.bridge);\n  }\n\n  describeProps(): RCTPropDescription {\n    let propDescription = new RCTPropDescription();\n\n    // Add Shadow Props\n    propDescription = SHADOW_PROP_NAMES.reduce(\n      (desc, name) => desc.addShadowProp(name),\n      propDescription\n    );\n\n    // Add Border View Props\n    propDescription = propDescription.addStringProp(\n      \"borderStyle\",\n      (view: any, value) => {\n        view.borderStyle = value;\n      }\n    );\n\n    propDescription = BORDER_NUMBER_PROPS.reduce(\n      (desc, name) =>\n        desc.addNumberProp(name, (view: any, value) => {\n          view[name] = value;\n        }),\n      propDescription\n    );\n\n    propDescription = BORDER_COLOR_PROPS.reduce(\n      (desc, name) =>\n        desc.addColorProp(name, (view: any, value) => {\n          view[name] = value;\n        }),\n      propDescription\n    );\n\n    return propDescription\n      .addColorProp(\"backgroundColor\", this.setBackgroundColor)\n      .addNumberProp(\"opacity\", this.setOpacity)\n      .addArrayProp(\"transform\", this.setTransform)\n      .addArrayProp(\"animatedTransform\", this.setAnimatedTransform, true)\n      .addBooleanProp(\"onStartShouldSetResponder\", this.setTouchable)\n      .addBooleanProp(\"disabled\", this.setDisabled, true)\n      .addStringProp(\"pointerEvents\", this.setPointerEvents)\n      .addStringProp(\"backfaceVisibility\", this.setBackfaceVisibility)\n      .addStringProp(\"overflow\", this.setOverflow)\n      .addNumberProp(\"zIndex\", this.setZIndex)\n      .addNumberProp(\"shadowColor\", this.setShadowColor)\n      .addObjectProp(\"shadowOffset\", this.setShadowOffset)\n      .addNumberProp(\"shadowOpacity\", this.setShadowOpacity)\n      .addNumberProp(\"shadowRadius\", this.setShadowRadius)\n      .addProp(\"hitSlop\", \"EdgeInsetsProp\", this.setHitSlop, false)\n      .addStringProp(\"direction\", this.setDirection)\n      .addMirroredProp(\"collapsable\", RCTPropTypes.bool, () => {})\n      .addDirectShadowEvent(\"onLayout\");\n  }\n\n  customBubblingEventTypes(): Array<string> {\n    return [\n      // Generic events\n      \"press\",\n      \"change\",\n      \"focus\",\n      \"blur\",\n      \"submitEditing\",\n      \"endEditing\",\n      \"keyPress\",\n\n      // Touch events\n      \"touchStart\",\n      \"touchMove\",\n      \"touchCancel\",\n      \"touchEnd\"\n    ];\n  }\n\n  setBackgroundColor(view: RCTView, value: ?string) {\n    view.backgroundColor = value ?? \"transparent\";\n  }\n\n  setOpacity(view: RCTView, value: ?number) {\n    view.opacity = value ?? 1;\n  }\n\n  setTransform(view: RCTView, value: ?Array<number>) {\n    view.transform = value;\n  }\n\n  setAnimatedTransform(view: RCTView, value: ?Array<Object>) {\n    view.animatedTransform = value;\n  }\n\n  setTouchable(view: RCTView, value: ?boolean) {\n    view.touchable = value ?? false;\n  }\n\n  setDisabled(view: RCTView, value: ?boolean) {\n    view.disabled = value ?? false;\n  }\n\n  setPointerEvents(view: RCTView, value: ?string) {\n    view.pointerEvents = value ?? \"auto\";\n  }\n\n  setHitSlop(view: RCTView, value: ?HitSlop) {\n    view.hitSlop = value ?? undefined;\n  }\n\n  setBackfaceVisibility(view: RCTView, value: ?string) {\n    view.backfaceVisibility = value ?? \"visible\";\n  }\n\n  setOverflow(view: RCTView, value: ?string) {\n    view.overflow = value ?? \"visible\";\n  }\n\n  setZIndex(view: RCTView, value: ?number) {\n    view.zIndex = value ?? 0;\n  }\n\n  setShadowColor(view: RCTView, value: ?number) {\n    view.shadowColor = value ?? 0;\n  }\n\n  setShadowOffset(view: RCTView, value: ?Object) {\n    view.shadowOffset = value ?? { height: 0, width: 0 };\n  }\n\n  setShadowOpacity(view: RCTView, value: ?number) {\n    view.shadowOpacity = value ?? 0;\n  }\n\n  setShadowRadius(view: RCTView, radius: ?number) {\n    view.shadowRadius = radius ?? 1;\n  }\n\n  setDirection(view: RCTView, direction: ?string) {\n    view.direction = direction ?? \"auto\";\n  }\n}\n\nexport default RCTViewManager;\n"],"file":"RCTViewManager.js"}