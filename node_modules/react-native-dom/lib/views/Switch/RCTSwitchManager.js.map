{"version":3,"sources":["../../../ReactDom/views/Switch/RCTSwitchManager.js"],"names":["RCTSwitchManager","RCTSwitch","bridge","addBooleanProp","setValue","setDisabledSwitch","addBubblingEvent","addColorProp","setOnTintColor","setTintColor","setThumbTintColor","view","value","disabled","onTintColor","tintColor","thumbTintColor","RCTViewManager","moduleName"],"mappings":"qsBAGA,8DAEA,4E,GAEMA,CAAAA,gB,2WAGW,CACb,MAAO,IAAIC,mBAAJ,CAAc,KAAKC,MAAnB,CAAP,CACD,C,qDAEe,CACd,MAAO,4GAEJC,cAFI,CAEW,OAFX,CAEoB,KAAKC,QAFzB,EAGJD,cAHI,CAGW,UAHX,CAGuB,KAAKE,iBAH5B,EAIJC,gBAJI,CAIa,UAJb,EAKJC,YALI,CAKS,aALT,CAKwB,KAAKC,cAL7B,EAMJD,YANI,CAMS,WANT,CAMsB,KAAKE,YAN3B,EAOJF,YAPI,CAOS,gBAPT,CAO2B,KAAKG,iBAPhC,CAAP,CAQD,C,0CAEQC,I,CAAiBC,K,CAAiB,CACzCD,IAAI,CAACC,KAAL,CAAaA,KAAb,CACD,C,4DAEiBD,I,CAAiBC,K,CAAiB,CAClDD,IAAI,CAACE,QAAL,CAAgBD,KAAhB,CACD,C,sDAEcD,I,CAAiBC,K,CAAgB,CAC9CD,IAAI,CAACG,WAAL,CAAmBF,KAAnB,CACD,C,kDAEYD,I,CAAiBC,K,CAAgB,CAC5CD,IAAI,CAACI,SAAL,CAAiBH,KAAjB,CACD,C,4DAEiBD,I,CAAiBC,K,CAAgB,CACjDD,IAAI,CAACK,cAAL,CAAsBJ,KAAtB,CACD,C,8BApC4BK,wB,EAAzBjB,gB,CACGkB,U,CAAa,kB,cAsCPlB,gB","sourcesContent":["/** @flow */\n\nimport type RCTBridge from \"RCTBridge\";\nimport RCTSwitch from \"RCTSwitch\";\nimport type UIView from \"UIView\";\nimport RCTViewManager from \"RCTViewManager\";\n\nclass RCTSwitchManager extends RCTViewManager {\n  static moduleName = \"RCTSwitchManager\";\n\n  view(): UIView {\n    return new RCTSwitch(this.bridge);\n  }\n\n  describeProps() {\n    return super\n      .describeProps()\n      .addBooleanProp(\"value\", this.setValue)\n      .addBooleanProp(\"disabled\", this.setDisabledSwitch)\n      .addBubblingEvent(\"onChange\")\n      .addColorProp(\"onTintColor\", this.setOnTintColor)\n      .addColorProp(\"tintColor\", this.setTintColor)\n      .addColorProp(\"thumbTintColor\", this.setThumbTintColor);\n  }\n\n  setValue(view: RCTSwitch, value: ?boolean) {\n    view.value = value;\n  }\n\n  setDisabledSwitch(view: RCTSwitch, value: ?boolean) {\n    view.disabled = value;\n  }\n\n  setOnTintColor(view: RCTSwitch, value: ?string) {\n    view.onTintColor = value;\n  }\n\n  setTintColor(view: RCTSwitch, value: ?string) {\n    view.tintColor = value;\n  }\n\n  setThumbTintColor(view: RCTSwitch, value: ?string) {\n    view.thumbTintColor = value;\n  }\n}\n\nexport default RCTSwitchManager;\n"],"file":"RCTSwitchManager.js"}