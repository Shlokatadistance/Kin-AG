{"version":3,"sources":["../../../ReactDom/views/Switch/RCTSwitch.js"],"names":["RCTSwitch","bridge","style","contain","platformSwitch","Switch","addEventListener","handleChange","bind","childShadowRoot","childContainer","attachShadow","mode","appendChild","event","value","detail","preventDefault","onChange","width","height","disabled","tintColor","onTintColor","thumbTintColor","RCTView","customElements","define"],"mappings":"y3BAEA,iEAGA,8DAEA,kG,GAEMA,CAAAA,S,+DAMJ,mBAAYC,MAAZ,CAA+B,wDAC7B,qGAAMA,MAAN,GAEA,MAAKC,KAAL,CAAWC,OAAX,CAAqB,QAArB,CAEA,MAAKC,cAAL,CAAsB,GAAIC,qBAAJ,EAAtB,CACA,MAAKD,cAAL,CAAoBE,gBAApB,CACE,QADF,CAEE,MAAKC,YAAL,CAAkBC,IAAlB,iFAFF,EAKA,MAAKC,eAAL,CAAuB,MAAKC,cAAL,CAAoBC,YAApB,CAAiC,CAAEC,IAAI,CAAE,MAAR,CAAjC,CAAvB,CACA,MAAKH,eAAL,CAAqBI,WAArB,CAAiC,MAAKT,cAAtC,EAZ6B,aAa9B,C,qFAEYU,K,CAGV,IAEWC,CAAAA,KAFX,CAGGD,KAHH,CAECE,MAFD,CAEWD,KAFX,CAIDD,KAAK,CAACG,cAAN,GACA,GAAI,KAAKC,QAAT,CAAmB,CACjB,KAAKA,QAAL,CAAc,CAAEH,KAAK,CAALA,KAAF,CAAd,EACD,CACF,C,iCAEkB,CACjB,wFACD,C,kBAESA,K,CAAc,CACtB,4EAAcA,KAAd,YADsB,GAGdI,CAAAA,KAHc,CAGIJ,KAHJ,CAGdI,KAHc,CAGPC,MAHO,CAGIL,KAHJ,CAGPK,MAHO,CAItB,KAAKhB,cAAL,CAAoBe,KAApB,CAA4BA,KAA5B,CACA,KAAKf,cAAL,CAAoBgB,MAApB,CAA6BA,MAA7B,CACD,C,mCAEYL,K,CAAiB,CAC5B,+EAAiB,CAAC,CAACA,KAAnB,YACA,KAAKX,cAAL,CAAoBiB,QAApB,CAA+B,CAAC,CAACN,KAAjC,CACD,C,gCAESA,K,CAAiB,CACzB,KAAKX,cAAL,CAAoBW,KAApB,CAA4B,CAAC,CAACA,KAA9B,CACD,C,oCAEaA,K,CAAgB,CAC5B,KAAKX,cAAL,CAAoBkB,SAApB,CAAgCP,KAAhC,CACD,C,sCAEeA,K,CAAgB,CAC9B,KAAKX,cAAL,CAAoBmB,WAApB,CAAkCR,KAAlC,CACD,C,yCAEkBA,K,CAAgB,CACjC,KAAKX,cAAL,CAAoBoB,cAApB,CAAqCT,KAArC,CACD,C,uBAjEqBU,iB,EAoExBC,cAAc,CAACC,MAAf,CAAsB,YAAtB,CAAoC3B,SAApC,E,aAEeA,S","sourcesContent":["/** @flow */\n\nimport Switch from \"rndom-switch\";\n\nimport type { Frame } from \"InternalLib\";\nimport RCTView from \"RCTView\";\nimport type RCTBridge from \"RCTBridge\";\nimport ColorArrayFromHexARGB from \"ColorArrayFromHexARGB\";\n\nclass RCTSwitch extends RCTView {\n  bridge: RCTBridge;\n  onChange: ?(payload: { value: boolean }) => void;\n  childShadowRoot: ShadowRoot;\n  platformSwitch: Switch;\n\n  constructor(bridge: RCTBridge) {\n    super(bridge);\n\n    this.style.contain = \"strict\";\n\n    this.platformSwitch = new Switch();\n    this.platformSwitch.addEventListener(\n      \"change\",\n      this.handleChange.bind(this)\n    );\n\n    this.childShadowRoot = this.childContainer.attachShadow({ mode: \"open\" });\n    this.childShadowRoot.appendChild(this.platformSwitch);\n  }\n\n  handleChange(event: {\n    preventDefault: Function,\n    detail: { value: boolean }\n  }) {\n    const {\n      detail: { value }\n    } = event;\n    event.preventDefault();\n    if (this.onChange) {\n      this.onChange({ value });\n    }\n  }\n\n  get frame(): Frame {\n    return super.frame;\n  }\n\n  set frame(value: Frame) {\n    super.frame = value;\n\n    const { width, height } = value;\n    this.platformSwitch.width = width;\n    this.platformSwitch.height = height;\n  }\n\n  set disabled(value: ?boolean) {\n    super.disabled = !!value;\n    this.platformSwitch.disabled = !!value;\n  }\n\n  set value(value: ?boolean) {\n    this.platformSwitch.value = !!value;\n  }\n\n  set tintColor(value: ?string) {\n    this.platformSwitch.tintColor = value;\n  }\n\n  set onTintColor(value: ?string) {\n    this.platformSwitch.onTintColor = value;\n  }\n\n  set thumbTintColor(value: ?string) {\n    this.platformSwitch.thumbTintColor = value;\n  }\n}\n\ncustomElements.define(\"rct-switch\", RCTSwitch);\n\nexport default RCTSwitch;\n"],"file":"RCTSwitch.js"}