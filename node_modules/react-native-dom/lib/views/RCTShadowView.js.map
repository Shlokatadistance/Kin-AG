{"version":3,"sources":["../../ReactDom/views/RCTShadowView.js"],"names":["LAYOUT_PROPS","LAYOUT_ONLY_PROPS","RCTShadowView","bridge","reactSubviews","isLayoutOnly","totalNativeChildren","yogaNode","Yoga","Node","previousLayout","undefined","measurement","globalX","globalY","currentView","layout","left","top","hasOwnProperty","scrollOffset","reactSuperview","previousPosition","hasNewLayout","layoutChanges","newLayout","getComputedLayout","currentPosition","previousMeasurement","nextMeasurement","width","height","JSON","stringify","push","reactTag","onLayout","x","y","forEach","subView","concat","getLayoutChanges","prevMeasurement","subview","index","splice","insertChild","increase","updateNativeChildrenCountInParent","filter","s","removeChild","decrease","nativeChildren","child","nativeParent","c","purge","free","changedProps","frame","point","shadowView","prevLayout","frameContainsPoint","relativePoint","origin","reactTagAtPoint","delta","parent","found","i","length","current","Error","value","constants","Constants","yogaValue","direction","ltr","rtl","inherit","_direction","isDirty","_backgroundColor","propAlias","convertToYogaValue","setEnumProp","bindEnumProps","bindUnitProps","bindNumberProps","bindEdgeProps","instance","propDefs","bindingFunc","propName","call","EDGES","map","edge","Object","defineProperty","configurable","get","set","undefinedValue","unit","enumMap","enumValue","__DEV__","console","warn","input","units","auto","parseFloat","endsWith","percent","target","targetProp","sourceProp","require","prototype","flexDirection","justify","align","position","wrap","overflow","display"],"mappings":"6sBAEA,oDACA,4DAQA,GAAMA,CAAAA,YAAY,CAAG,CAAC,KAAD,CAAQ,MAAR,CAAgB,OAAhB,CAAyB,QAAzB,CAArB,CASO,GAAMC,CAAAA,iBAAiB,CAAG,CAC/B,WAD+B,CAE/B,YAF+B,CAG/B,aAH+B,CAI/B,MAJ+B,CAK/B,WAL+B,CAM/B,eAN+B,CAO/B,UAP+B,CAQ/B,YAR+B,CAS/B,UAT+B,CAU/B,gBAV+B,CAW/B,cAX+B,CAY/B,SAZ+B,CAe/B,OAf+B,CAgB/B,KAhB+B,CAiB/B,QAjB+B,CAkB/B,MAlB+B,CAmB/B,OAnB+B,CAoB/B,KApB+B,CAuB/B,OAvB+B,CAwB/B,QAxB+B,CAyB/B,UAzB+B,CA0B/B,UA1B+B,CA2B/B,WA3B+B,CA4B/B,WA5B+B,CA+B/B,QA/B+B,CAgC/B,gBAhC+B,CAiC/B,kBAjC+B,CAkC/B,YAlC+B,CAmC/B,aAnC+B,CAoC/B,WApC+B,CAqC/B,cArC+B,CAsC/B,YAtC+B,CAuC/B,WAvC+B,CA0C/B,SA1C+B,CA2C/B,iBA3C+B,CA4C/B,mBA5C+B,CA6C/B,aA7C+B,CA8C/B,cA9C+B,CA+C/B,YA/C+B,CAgD/B,eAhD+B,CAiD/B,cAjD+B,CAkD/B,YAlD+B,CAA1B,C,+CAqDDC,CAAAA,a,YAgCJ,uBAAYC,MAAZ,CAA+B,uDAjB/BC,aAiB+B,CAjBO,EAiBP,MAb/BC,YAa+B,CAbP,KAaO,MAZ/BC,mBAY+B,CAZD,CAYC,CAC7B,KAAKH,MAAL,CAAcA,MAAd,CACA,KAAKI,QAAL,CAAgB,GAAIJ,CAAAA,MAAM,CAACK,IAAP,CAAYC,IAAhB,EAAhB,CAEA,KAAKC,cAAL,CAAsBC,SAAtB,CACA,KAAKC,WAAL,CAAmBD,SAAnB,CACD,C,oFAEW,CACV,MAAO,MAAP,CACD,C,qDA4Ce,CACd,GAAIE,CAAAA,OAAO,CAAG,CAAd,CACEC,OAAO,CAAG,CADZ,CAGA,GAAIC,CAAAA,WAAW,CAAG,IAAlB,CACA,MAAOA,WAAP,CAAoB,CAClB,GAAMC,CAAAA,MAAM,CAAGD,WAAW,CAACL,cAA3B,CACA,GAAIM,MAAJ,CAAY,CACVH,OAAO,EAAIG,MAAM,CAACC,IAAlB,CACAH,OAAO,EAAIE,MAAM,CAACE,GAAlB,CAEA,GAAIH,WAAW,CAACI,cAAZ,CAA2B,cAA3B,CAAJ,CAAgD,CAC9CN,OAAO,EAAKE,WAAD,CAAmBK,YAAnB,CAAgCH,IAA3C,CACAH,OAAO,EAAKC,WAAD,CAAmBK,YAAnB,CAAgCF,GAA3C,CACD,CAEDH,WAAW,CAAGA,WAAW,CAACM,cAA1B,CACD,CAVD,IAUO,CACLN,WAAW,CAAG,IAAd,CACD,CACF,CAED,MAAO,CAAEF,OAAO,CAAPA,OAAF,CAAWC,OAAO,CAAPA,OAAX,CAAP,CACD,C,0DAEgBQ,gB,CAGO,CACtB,GAAI,CAAC,KAAKf,QAAL,CAAcgB,YAAf,EAA+B,CAAC,CAAC,KAAKb,cAA1C,CAA0D,MAAO,EAAP,CAC1D,KAAKH,QAAL,CAAcgB,YAAd,CAA6B,KAA7B,CAEA,GAAIC,CAAAA,aAAa,CAAG,EAApB,CAEA,GAAMC,CAAAA,SAAS,CAAG,KAAKlB,QAAL,CAAcmB,iBAAd,EAAlB,CAEA,GAAMC,CAAAA,eAAe,CAAG,CACtBT,GAAG,CAAEI,gBAAgB,CAACJ,GAAjB,CAAuBO,SAAS,CAACP,GADhB,CAEtBD,IAAI,CAAEK,gBAAgB,CAACL,IAAjB,CAAwBQ,SAAS,CAACR,IAFlB,CAAxB,CAKA,GAAMW,CAAAA,mBAAmB,CAAG,KAAKhB,WAAL,+BACnB,KAAKA,WADc,EAExB,IAFJ,CAIA,GAAMiB,CAAAA,eAAe,+BAChBF,eADgB,EAEnBG,KAAK,CAAEL,SAAS,CAACK,KAFE,CAGnBC,MAAM,CAAEN,SAAS,CAACM,MAHC,EAArB,CAMA,GAAIC,IAAI,CAACC,SAAL,CAAeR,SAAf,IAA8BO,IAAI,CAACC,SAAL,CAAe,KAAKvB,cAApB,CAAlC,CAAuE,CACrEc,aAAa,CAACU,IAAd,CAAmB,CACjBC,QAAQ,CAAE,KAAKA,QADE,CAEjBnB,MAAM,CAAES,SAFS,CAGjBG,mBAAmB,CAAnBA,mBAHiB,CAIjBC,eAAe,CAAfA,eAJiB,CAAnB,EAOA,GAAI,KAAKO,QAAT,CAAmB,CACjB,KAAKA,QAAL,CAAc,CACZpB,MAAM,CAAE,CACNqB,CAAC,CAAEZ,SAAS,CAACR,IADP,CAENqB,CAAC,CAAEb,SAAS,CAACP,GAFP,CAGNY,KAAK,CAAEL,SAAS,CAACK,KAHX,CAINC,MAAM,CAAEN,SAAS,CAACM,MAJZ,CADI,CAAd,EAQD,CAED,KAAKrB,cAAL,CAAsBe,SAAtB,CACD,CAED,KAAKrB,aAAL,CAAmBmC,OAAnB,CAA2B,SAACC,OAAD,CAAa,CACtChB,aAAa,CAAGA,aAAa,CAACiB,MAAd,CACdD,OAAO,CAACE,gBAAR,CAAyBf,eAAzB,CADc,CAAhB,CAGD,CAJD,EAMA,KAAKgB,eAAL,CAAuBf,mBAAvB,CACA,KAAKhB,WAAL,+BAAwBiB,eAAxB,EACA,MAAOL,CAAAA,aAAP,CACD,C,4EAEyBoB,O,CAAwBC,K,CAAe,CAC/DD,OAAO,CAACvB,cAAR,CAAyB,IAAzB,CACA,KAAKjB,aAAL,CAAmB0C,MAAnB,CAA0BD,KAA1B,CAAiC,CAAjC,CAAoCD,OAApC,EACA,KAAKrC,QAAL,CAAcwC,WAAd,CAA0BH,OAAO,CAACrC,QAAlC,CAA4CsC,KAA5C,EAEA,GAAMG,CAAAA,QAAQ,CAAGJ,OAAO,CAACvC,YAAR,CAAuBuC,OAAO,CAACtC,mBAA/B,CAAqD,CAAtE,CACA,KAAKA,mBAAL,EAA4B0C,QAA5B,CAEA,KAAKC,iCAAL,CAAuCD,QAAvC,EACD,C,8DAEkBJ,O,CAAwB,CACzCA,OAAO,CAACvB,cAAR,CAAyBV,SAAzB,CACA,KAAKP,aAAL,CAAqB,KAAKA,aAAL,CAAmB8C,MAAnB,CAA0B,SAACC,CAAD,QAAOA,CAAAA,CAAC,GAAKP,OAAb,EAA1B,CAArB,CACA,KAAKrC,QAAL,CAAc6C,WAAd,CAA0BR,OAAO,CAACrC,QAAlC,EAEA,GAAM8C,CAAAA,QAAQ,CAAGT,OAAO,CAACvC,YAAR,CAAuBuC,OAAO,CAACtC,mBAA/B,CAAqD,CAAtE,CACA,KAAKA,mBAAL,EAA4B+C,QAA5B,CACA,KAAKJ,iCAAL,CAAuC,CAACI,QAAxC,EACD,C,yEAEyB,CACxB,KAAKC,cAAL,CAAsB,IAAtB,CACA,KAAKhD,mBAAL,CAA2B,CAA3B,CACD,C,0DAEgBiD,K,CAAsBV,K,CAAe,CACpD,uBAAU,CAAC,KAAKxC,YAAhB,CAA8B,4CAA9B,EACA,uBACE,CAACkD,KAAK,CAAClD,YADT,CAEE,gDAFF,EAKA,GAAI,KAAKiD,cAAL,EAAuB,IAA3B,CAAiC,CAC/B,KAAKA,cAAL,CAAsB,EAAtB,CACD,CAED,KAAKA,cAAL,CAAoBR,MAApB,CAA2BD,KAA3B,CAAkC,CAAlC,CAAqCU,KAArC,EACAA,KAAK,CAACC,YAAN,CAAqB,IAArB,CACD,C,4DAEiBD,K,CAAsB,CACtC,uBACE,KAAKD,cADP,CAEE,mEAFF,EAIA,KAAKA,cAAL,CAAsB,KAAKA,cAAL,CAAoBJ,MAApB,CAA2B,SAACO,CAAD,QAAOA,CAAAA,CAAC,GAAKF,KAAb,EAA3B,CAAtB,CACAA,KAAK,CAACC,YAAN,CAAqB,IAArB,CACD,C,qCAEO,CACN,KAAKpD,aAAL,CAAmBmC,OAAnB,CAA2B,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACkB,KAAR,EAAb,EAA3B,EACA,KAAKnD,QAAL,CAAcoD,IAAd,GACD,C,gDAGWC,Y,CAA6B,CAAE,C,uEAClB,CAAE,C,8DAERC,K,CAAcC,K,CAAiC,CAChE,MACED,CAAAA,KAAK,CAAC5C,IAAN,EAAc6C,KAAK,CAACzB,CAApB,EACAyB,KAAK,CAACzB,CAAN,EAAWwB,KAAK,CAAC5C,IAAN,CAAa4C,KAAK,CAAC/B,KAD9B,EAEA+B,KAAK,CAAC3C,GAAN,EAAa4C,KAAK,CAACxB,CAFnB,EAGAwB,KAAK,CAACxB,CAAN,EAAWuB,KAAK,CAAC3C,GAAN,CAAY2C,KAAK,CAAC9B,MAJ/B,CAMD,C,wDAEe+B,K,CAAyC,CACvD,kBAAyB,KAAK1D,aAA9B,4IAA6C,uIAAlC2D,CAAAA,WAAkC,MAC3C,GAAMC,CAAAA,UAAU,CAAGD,WAAU,CAACrD,cAA9B,CACA,GAAIsD,UAAU,EAAI,KAAKC,kBAAL,CAAwBD,UAAxB,CAAoCF,KAApC,CAAlB,CAA8D,CAC5D,GAAII,CAAAA,aAAa,+BAAQJ,KAAR,CAAjB,CACA,GAAMK,CAAAA,MAAM,CAAG,CAAE9B,CAAC,CAAE2B,UAAU,CAAC/C,IAAhB,CAAsBqB,CAAC,CAAE0B,UAAU,CAAC9C,GAApC,CAAf,CACAgD,aAAa,CAAC7B,CAAd,EAAmB8B,MAAM,CAAC9B,CAA1B,CACA6B,aAAa,CAAC5B,CAAd,EAAmB6B,MAAM,CAAC7B,CAA1B,CACA,MAAOyB,CAAAA,WAAU,CAACK,eAAX,CAA2BF,aAA3B,CAAP,CACD,CACF,CACD,MAAO,MAAK/B,QAAZ,CACD,C,4FAEiCkC,K,CAAe,CAC/C,GAAI,KAAKhE,YAAT,CAAuB,CACrB,GAAIiE,CAAAA,MAAM,CAAG,KAAKjD,cAAlB,CACA,MAAOiD,MAAM,EAAI,IAAjB,CAAuB,CACrBA,MAAM,CAAChE,mBAAP,EAA8B+D,KAA9B,CACA,GAAI,CAACC,MAAM,CAACjE,YAAZ,CAA0B,CACxB,MACD,CACDiE,MAAM,CAAGA,MAAM,CAACjD,cAAhB,CACD,CACF,CACF,C,wEAEuBkC,K,CAA8B,CACpD,GAAIV,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAI0B,CAAAA,KAAK,CAAG,KAAZ,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKpE,aAAL,CAAmBqE,MAAvC,CAA+CD,CAAC,EAAhD,CAAoD,CAClD,GAAME,CAAAA,OAAO,CAAG,KAAKtE,aAAL,CAAmBoE,CAAnB,CAAhB,CACA,GAAIjB,KAAK,GAAKmB,OAAd,CAAuB,CACrBH,KAAK,CAAG,IAAR,CACA,MACD,CACD1B,KAAK,EAAI6B,OAAO,CAACrE,YAAR,CAAuBqE,OAAO,CAACpE,mBAA/B,CAAqD,CAA9D,CACD,CACD,GAAI,CAACiE,KAAL,CAAY,CACV,KAAM,IAAII,CAAAA,KAAJ,UACKpB,KAAK,CAACpB,QADX,wBAC0C,KAAKA,QAD/C,CAAN,CAGD,CACD,MAAOU,CAAAA,KAAP,CACD,C,oCA/Oa+B,K,CAAY,CAAE,C,oCAEdA,K,CAAe,CAC3B,GAAMC,CAAAA,SAAS,CAAG,KAAK1E,MAAL,CAAYK,IAAZ,CAAiBsE,SAAnC,CAEA,GAAIC,CAAAA,SAAJ,CACA,OAAQH,KAAR,EACE,IAAK,KAAL,CACEG,SAAS,CAAGF,SAAS,CAACG,SAAV,CAAoBC,GAAhC,CACA,MACF,IAAK,KAAL,CACEF,SAAS,CAAGF,SAAS,CAACG,SAAV,CAAoBE,GAAhC,CACA,MACF,QACEH,SAAS,CAAGF,SAAS,CAACG,SAAV,CAAoBG,OAAhC,CACA,MATJ,CAYA,KAAKC,UAAL,CAAkBL,SAAlB,CACA,KAAKxE,QAAL,CAAc,WAAd,EAA6BwE,SAA7B,CACD,C,mBAEe,CACd,MAAO,MAAKK,UAAZ,CACD,C,wCAE2B,CAC1B,MAAO,MAAK7E,QAAL,CAAcgB,YAArB,CACD,C,mCAEsB,CACrB,MAAO,MAAKhB,QAAL,CAAc8E,OAAd,EAAP,CACD,C,2CAE6B,CAC5B,MAAO,MAAKC,gBAAZ,CACD,C,kBAEmBV,K,CAAe,CACjC,KAAKU,gBAAL,CAAwBV,KAAxB,CACD,C,6BA4MH,CAAC,4BAGUW,SAHV,CAmBUC,kBAnBV,CAqCUC,WArCV,CAuDUC,aAvDV,CAwEUC,aAxEV,CA4FUC,eA5FV,OAyHUC,aAzHV,mHAyHUA,aAzHV,iBA0HGC,QA1HH,CA2HGC,QA3HH,CA4HGC,WA5HH,CAgIG,CACAD,QAAQ,CAACxD,OAAT,CAAiB,SAAC0D,QAAD,CAAc,CAC7BD,WAAW,CAACE,IAAZ,CACE,IADF,CAEEJ,QAFF,CAGEK,KAAK,CAACC,GAAN,CAAU,SAACC,IAAD,WAAaJ,QAAb,CAAwBI,IAAxB,EAAV,EAA0C5D,MAA1C,CAAiD,CAACwD,QAAD,CAAjD,CAHF,EAKD,CAND,EAOD,CAxIF,CA4FUL,eA5FV,gBA6FGE,QA7FH,CA8FGC,QA9FH,CA+FG,CACAA,QAAQ,CAACxD,OAAT,CAAiB,SAAC0D,QAAD,CAAc,CAC7BK,MAAM,CAACC,cAAP,CAAsBT,QAAtB,CAAgCG,QAAhC,CAA0C,CACxCO,YAAY,CAAE,IAD0B,CAExCC,GAAG,CAAE,cAAW,CACd,MAAO,MAAKlG,QAAL,CAAc0F,QAAd,CAAP,CACD,CAJuC,CAKxCS,GAAG,CAAE,aAAS9B,KAAT,CAAyB,CAC5B,GAAIA,KAAK,EAAI,IAAb,CAAmBA,KAAK,CAAGpE,IAAI,CAACsE,SAAL,CAAe6B,cAAvB,CACnB,KAAKpG,QAAL,CAAc0F,QAAd,EAA0BrB,KAA1B,CACD,CARuC,CAA1C,EAUD,CAXD,EAYD,CA5GF,CAwEUe,aAxEV,gBAyEGG,QAzEH,CA0EGC,QA1EH,CA2EG,CACAA,QAAQ,CAACxD,OAAT,CAAiB,SAAC0D,QAAD,CAAc,CAC7BK,MAAM,CAACC,cAAP,CAAsBT,QAAtB,CAAgCG,QAAhC,CAA0C,CACxCO,YAAY,CAAE,IAD0B,CAExCC,GAFwC,eAElC,CACJ,MAAO,MAAKlG,QAAL,CAAc0F,QAAd,CAAP,CACD,CAJuC,CAKxCS,GALwC,cAKpC9B,KALoC,CAKZ,CAC1B,KAAKrE,QAAL,CAAc0F,QAAd,EAA0BT,kBAAkB,CAC1CZ,KAD0C,CAE1CpE,IAAI,CAACsE,SAAL,CAAe8B,IAF2B,CAA5C,CAID,CAVuC,CAA1C,EAYD,CAbD,EAcD,CA1FF,CAuDUlB,aAvDV,gBAwDGI,QAxDH,CAyDGC,QAzDH,CA0DG,CACAA,QAAQ,CAACxD,OAAT,CAAiB,eAAyB,gDAAvB0D,QAAuB,UAAbY,OAAa,UACxCP,MAAM,CAACC,cAAP,CAAsBT,QAAtB,CAAgCG,QAAhC,CAA0C,CACxCO,YAAY,CAAE,IAD0B,CAExCC,GAAG,CAAE,cAAW,CACd,MAAO,MAAKlG,QAAL,CAAc0F,QAAd,CAAP,CACD,CAJuC,CAKxCS,GAAG,CAAE,aAAS9B,KAAT,CAAwB,CAC3Ba,WAAW,CAAC,KAAKlF,QAAN,CAAgB0F,QAAhB,CAA0BY,OAA1B,CAAmCjC,KAAnC,CAAX,CACD,CAPuC,CAA1C,EASD,CAVD,EAWD,CAtEF,CAqCUa,WArCV,gBAsCGlF,QAtCH,CAuCG0F,QAvCH,CAwCGY,OAxCH,CAyCGjC,KAzCH,CA0CG,CACA,GAAIA,KAAK,EAAI,IAAb,CAAmB,CACjBrE,QAAQ,CAAC0F,QAAD,CAAR,CAAqBzF,IAAI,CAACsE,SAAL,CAAe6B,cAApC,CACD,CAFD,IAEO,CACL,GAAMG,CAAAA,SAAS,CAAGD,OAAO,CAACjC,KAAD,CAAzB,CACA,GAAIkC,SAAS,EAAI,IAAjB,CAAuB,CACrBvG,QAAQ,CAAC0F,QAAD,CAAR,CAAqBa,SAArB,CACD,CAFD,IAEO,IAAIC,OAAJ,CAAa,CAClBC,OAAO,CAACC,IAAR,mBAA+BrC,KAA/B,sBAAyDqB,QAAzD,MACD,CACF,CACF,CArDF,CAmBUT,kBAnBV,gBAoBG0B,KApBH,CAqBGC,KArBH,CAsBa,CACV,GAAI,MAAOD,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7B,MAAO,CAAEtC,KAAK,CAAEsC,KAAT,CAAgBN,IAAI,CAAEO,KAAK,CAACrD,KAA5B,CAAP,CACD,CAFD,IAEO,IAAIoD,KAAK,EAAI,IAAb,CAAmB,CACxB,MAAO,CAAEtC,KAAK,CAAEpE,IAAI,CAACsE,SAAL,CAAe6B,cAAxB,CAAwCC,IAAI,CAAEO,KAAK,CAACrD,KAApD,CAAP,CACD,CACD,GAAIoD,KAAK,GAAK,MAAd,CAAsB,CACpB,MAAO,CAAEtC,KAAK,CAAEpE,IAAI,CAACsE,SAAL,CAAe6B,cAAxB,CAAwCC,IAAI,CAAEO,KAAK,CAACC,IAApD,CAAP,CACD,CACD,MAAO,CACLxC,KAAK,CAAEyC,UAAU,CAACH,KAAD,CADZ,CAELN,IAAI,CAAEM,KAAK,CAACI,QAAN,CAAe,GAAf,EAAsBH,KAAK,CAACI,OAA5B,CAAsCJ,KAAK,CAACrD,KAF7C,CAAP,CAID,CAnCF,CAGUyB,SAHV,gBAIGiC,MAJH,CAKGC,UALH,CAMGC,UANH,CAOG,CACApB,MAAM,CAACC,cAAP,CAAsBiB,MAAtB,CAA8BC,UAA9B,CAA0C,CACxCjB,YAAY,CAAE,IAD0B,CAExCC,GAFwC,eAElC,CACJ,MAAO,MAAKiB,UAAL,CAAP,CACD,CAJuC,CAKxChB,GALwC,cAKpC9B,KALoC,CAKxB,CACd,KAAK8C,UAAL,EAAmB9C,KAAnB,CACD,CAPuC,CAA1C,EASD,CAjBF,mDACgC+C,OAAO,CAAC,UAAD,CADvC,SACOnH,IADP,eA8GO2F,KA9GP,CA8Ge,CACZ,MADY,CAEZ,OAFY,CAGZ,KAHY,CAIZ,QAJY,CAKZ,OALY,CAMZ,KANY,CAOZ,YAPY,CAQZ,UARY,CA9Gf,CA0ICT,aAAa,CAACxF,aAAa,CAAC0H,SAAf,CAA0B,CACrC,CAAC,WAAD,CAAcpH,IAAI,CAACsE,SAAL,CAAeE,SAA7B,CADqC,CAErC,CAAC,eAAD,CAAkBxE,IAAI,CAACsE,SAAL,CAAe+C,aAAjC,CAFqC,CAGrC,CAAC,gBAAD,CAAmBrH,IAAI,CAACsE,SAAL,CAAegD,OAAlC,CAHqC,CAIrC,CAAC,cAAD,CAAiBtH,IAAI,CAACsE,SAAL,CAAeiD,KAAhC,CAJqC,CAKrC,CAAC,YAAD,CAAevH,IAAI,CAACsE,SAAL,CAAeiD,KAA9B,CALqC,CAMrC,CAAC,WAAD,CAAcvH,IAAI,CAACsE,SAAL,CAAeiD,KAA7B,CANqC,CAOrC,CAAC,UAAD,CAAavH,IAAI,CAACsE,SAAL,CAAekD,QAA5B,CAPqC,CAQrC,CAAC,UAAD,CAAaxH,IAAI,CAACsE,SAAL,CAAemD,IAA5B,CARqC,CASrC,CAAC,UAAD,CAAazH,IAAI,CAACsE,SAAL,CAAeoD,QAA5B,CATqC,CAUrC,CAAC,SAAD,CAAY1H,IAAI,CAACsE,SAAL,CAAeqD,OAA3B,CAVqC,CAA1B,CAAb,CAYAxC,aAAa,CAACzF,aAAa,CAAC0H,SAAf,CAA0B,CACrC,OADqC,CAErC,QAFqC,CAGrC,UAHqC,CAIrC,WAJqC,CAKrC,UALqC,CAMrC,WANqC,CAOrC,MAPqC,CAQrC,OARqC,CASrC,KATqC,CAUrC,QAVqC,CAWrC,OAXqC,CAYrC,KAZqC,CAarC,YAbqC,CAcrC,UAdqC,CAerC,WAfqC,CAA1B,CAAb,CAiBAhC,eAAe,CAAC1F,aAAa,CAAC0H,SAAf,CAA0B,CACvC,MADuC,CAEvC,UAFuC,CAGvC,YAHuC,CAIvC,aAJuC,CAA1B,CAAf,CAMA/B,aAAa,CAAC3F,aAAa,CAAC0H,SAAf,CAA0B,CAAC,QAAD,CAAW,SAAX,CAA1B,CAAiDjC,aAAjD,CAAb,CACAE,aAAa,CAAC3F,aAAa,CAAC0H,SAAf,CAA0B,CAAC,QAAD,CAA1B,CAAsChC,eAAtC,CAAb,CAEA,CACE,WADF,CAEE,YAFF,CAGE,aAHF,CAIE,cAJF,CAKE,aALF,CAME,WANF,EAOErD,OAPF,CAOU,SAAC0D,QAAD,CAAc,CACtBV,SAAS,CAACrF,aAAa,CAAC0H,SAAf,CAA0B3B,QAAQ,CAAG,OAArC,CAA8CA,QAA9C,CAAT,CACD,CATD,EAhLD,yDAAD,I,aA4Le/F,a","sourcesContent":["/** @flow */\n\nimport * as YG from \"yoga-dom\";\nimport invariant from \"invariant\";\n\nimport type RCTBridge from \"RCTBridge\";\nimport type { Frame } from \"InternalLib\";\nimport type { RCTComponent } from \"RCTComponent\";\n\ndeclare var __DEV__: boolean;\n\nconst LAYOUT_PROPS = [\"top\", \"left\", \"width\", \"height\"];\n\nexport type LayoutChange = {\n  reactTag: number,\n  layout: Frame,\n  previousMeasurement: ?Frame,\n  nextMeasurement: Frame\n};\n\nexport const LAYOUT_ONLY_PROPS = [\n  \"alignSelf\",\n  \"alignItems\",\n  \"collapsable\",\n  \"flex\",\n  \"flexBasis\",\n  \"flexDirection\",\n  \"flexGrow\",\n  \"flexShrink\",\n  \"flexWrap\",\n  \"justifyContent\",\n  \"alignContent\",\n  \"display\",\n\n  /* position */\n  \"right\",\n  \"top\",\n  \"bottom\",\n  \"left\",\n  \"start\",\n  \"end\",\n\n  /* dimensions */\n  \"width\",\n  \"height\",\n  \"minWidth\",\n  \"maxWidth\",\n  \"minHeight\",\n  \"maxHeight\",\n\n  /* margins */\n  \"margin\",\n  \"marginVertical\",\n  \"marginHorizontal\",\n  \"marginLeft\",\n  \"marginRight\",\n  \"marginTop\",\n  \"marginBottom\",\n  \"marginStop\",\n  \"marginEnd\",\n\n  /* paddings */\n  \"padding\",\n  \"paddingVertical\",\n  \"paddingHorizontal\",\n  \"paddingLeft\",\n  \"paddingRight\",\n  \"paddingTop\",\n  \"paddingBottom\",\n  \"paddingStart\",\n  \"paddingEnd\"\n];\n\nclass RCTShadowView implements RCTComponent {\n  _backgroundColor: string;\n  _transform: Array<number>;\n  _direction: any;\n\n  viewName: string;\n  rootTag: number;\n  bridge: RCTBridge;\n\n  yogaNode: YG.Node;\n  previousLayout: ?Frame;\n  isNewView: boolean;\n  isHidden: boolean;\n\n  reactTag: number;\n  reactSubviews: Array<RCTShadowView> = [];\n  reactSuperview: ?RCTShadowView;\n\n  // layout-only nodes\n  isLayoutOnly: boolean = false;\n  totalNativeChildren: number = 0;\n  nativeParent: ?RCTShadowView;\n  nativeChildren: ?(RCTShadowView[]);\n\n  measurement: ?Frame;\n  prevMeasurement: ?Frame;\n\n  width: number;\n  height: number;\n\n  onLayout: ?Function;\n\n  constructor(bridge: RCTBridge) {\n    this.bridge = bridge;\n    this.yogaNode = new bridge.Yoga.Node();\n\n    this.previousLayout = undefined;\n    this.measurement = undefined;\n  }\n\n  isVirtual() {\n    return false;\n  }\n\n  set localData(value: any) {}\n\n  set direction(value: string) {\n    const constants = this.bridge.Yoga.Constants;\n\n    let yogaValue;\n    switch (value) {\n      case \"ltr\":\n        yogaValue = constants.direction.ltr;\n        break;\n      case \"rtl\":\n        yogaValue = constants.direction.rtl;\n        break;\n      default:\n        yogaValue = constants.direction.inherit;\n        break;\n    }\n\n    this._direction = yogaValue;\n    this.yogaNode[\"direction\"] = yogaValue;\n  }\n\n  get direction() {\n    return this._direction;\n  }\n\n  get hasNewLayout(): boolean {\n    return this.yogaNode.hasNewLayout;\n  }\n\n  get isDirty(): boolean {\n    return this.yogaNode.isDirty();\n  }\n\n  get backgroundColor(): string {\n    return this._backgroundColor;\n  }\n\n  set backgroundColor(value: string) {\n    this._backgroundColor = value;\n  }\n\n  measureGlobal() {\n    let globalX = 0,\n      globalY = 0;\n\n    let currentView = this;\n    while (currentView) {\n      const layout = currentView.previousLayout;\n      if (layout) {\n        globalX += layout.left;\n        globalY += layout.top;\n\n        if (currentView.hasOwnProperty(\"scrollOffset\")) {\n          globalX -= (currentView: any).scrollOffset.left;\n          globalY -= (currentView: any).scrollOffset.top;\n        }\n\n        currentView = currentView.reactSuperview;\n      } else {\n        currentView = null;\n      }\n    }\n\n    return { globalX, globalY };\n  }\n\n  getLayoutChanges(previousPosition: {\n    top: number,\n    left: number\n  }): Array<LayoutChange> {\n    if (!this.yogaNode.hasNewLayout && !!this.previousLayout) return [];\n    this.yogaNode.hasNewLayout = false;\n\n    let layoutChanges = [];\n\n    const newLayout = this.yogaNode.getComputedLayout();\n\n    const currentPosition = {\n      top: previousPosition.top + newLayout.top,\n      left: previousPosition.left + newLayout.left\n    };\n\n    const previousMeasurement = this.measurement\n      ? { ...this.measurement }\n      : null;\n\n    const nextMeasurement = {\n      ...currentPosition,\n      width: newLayout.width,\n      height: newLayout.height\n    };\n\n    if (JSON.stringify(newLayout) !== JSON.stringify(this.previousLayout)) {\n      layoutChanges.push({\n        reactTag: this.reactTag,\n        layout: newLayout,\n        previousMeasurement,\n        nextMeasurement\n      });\n\n      if (this.onLayout) {\n        this.onLayout({\n          layout: {\n            x: newLayout.left,\n            y: newLayout.top,\n            width: newLayout.width,\n            height: newLayout.height\n          }\n        });\n      }\n\n      this.previousLayout = newLayout;\n    }\n\n    this.reactSubviews.forEach((subView) => {\n      layoutChanges = layoutChanges.concat(\n        subView.getLayoutChanges(currentPosition)\n      );\n    });\n\n    this.prevMeasurement = previousMeasurement;\n    this.measurement = { ...nextMeasurement };\n    return layoutChanges;\n  }\n\n  insertReactSubviewAtIndex(subview: RCTShadowView, index: number) {\n    subview.reactSuperview = this;\n    this.reactSubviews.splice(index, 0, subview);\n    this.yogaNode.insertChild(subview.yogaNode, index);\n\n    const increase = subview.isLayoutOnly ? subview.totalNativeChildren : 1;\n    this.totalNativeChildren += increase;\n\n    this.updateNativeChildrenCountInParent(increase);\n  }\n\n  removeReactSubview(subview: RCTShadowView) {\n    subview.reactSuperview = undefined;\n    this.reactSubviews = this.reactSubviews.filter((s) => s !== subview);\n    this.yogaNode.removeChild(subview.yogaNode);\n\n    const decrease = subview.isLayoutOnly ? subview.totalNativeChildren : 1;\n    this.totalNativeChildren -= decrease;\n    this.updateNativeChildrenCountInParent(-decrease);\n  }\n\n  removeAllNativeChildren() {\n    this.nativeChildren = null;\n    this.totalNativeChildren = 0;\n  }\n\n  addNativeChildAt(child: RCTShadowView, index: number) {\n    invariant(!this.isLayoutOnly, \"Cannot add native child to layoutOnly node\");\n    invariant(\n      !child.isLayoutOnly,\n      \"Cannot add layout only child as a native child\"\n    );\n\n    if (this.nativeChildren == null) {\n      this.nativeChildren = [];\n    }\n\n    this.nativeChildren.splice(index, 0, child);\n    child.nativeParent = this;\n  }\n\n  removeNativeChild(child: RCTShadowView) {\n    invariant(\n      this.nativeChildren,\n      \"Cannot remove native child from node which has no native children\"\n    );\n    this.nativeChildren = this.nativeChildren.filter((c) => c !== child);\n    child.nativeParent = null;\n  }\n\n  purge() {\n    this.reactSubviews.forEach((subView) => subView.purge());\n    this.yogaNode.free();\n  }\n\n  // TODO: Implement ===========================================\n  didSetProps(changedProps: Array<string>) {}\n  didUpdateReactSubviews() {}\n\n  frameContainsPoint(frame: Frame, point: { x: number, y: number }) {\n    return (\n      frame.left <= point.x &&\n      point.x <= frame.left + frame.width &&\n      frame.top <= point.y &&\n      point.y <= frame.top + frame.height\n    );\n  }\n\n  reactTagAtPoint(point: { x: number, y: number }): number {\n    for (const shadowView of this.reactSubviews) {\n      const prevLayout = shadowView.previousLayout;\n      if (prevLayout && this.frameContainsPoint(prevLayout, point)) {\n        let relativePoint = { ...point };\n        const origin = { x: prevLayout.left, y: prevLayout.top };\n        relativePoint.x -= origin.x;\n        relativePoint.y -= origin.y;\n        return shadowView.reactTagAtPoint(relativePoint);\n      }\n    }\n    return this.reactTag;\n  }\n\n  updateNativeChildrenCountInParent(delta: number) {\n    if (this.isLayoutOnly) {\n      let parent = this.reactSuperview;\n      while (parent != null) {\n        parent.totalNativeChildren += delta;\n        if (!parent.isLayoutOnly) {\n          break;\n        }\n        parent = parent.reactSuperview;\n      }\n    }\n  }\n\n  getNativeOffsetForChild(child: RCTShadowView): number {\n    let index = 0;\n    let found = false;\n\n    for (let i = 0; i < this.reactSubviews.length; i++) {\n      const current = this.reactSubviews[i];\n      if (child === current) {\n        found = true;\n        break;\n      }\n      index += current.isLayoutOnly ? current.totalNativeChildren : 1;\n    }\n    if (!found) {\n      throw new Error(\n        `Child ${child.reactTag} was not a child of ${this.reactTag}`\n      );\n    }\n    return index;\n  }\n}\n\n// this is SUUUUPER hacky but I'm faily confident that this\n// should be run before any shadow views are created/used\n(async () => {\n  const Yoga: YG.Module = (await require(\"yoga-dom\"): any);\n\n  function propAlias(\n    target: typeof RCTShadowView.prototype,\n    targetProp: string,\n    sourceProp: string\n  ) {\n    Object.defineProperty(target, targetProp, {\n      configurable: true,\n      get() {\n        return this[sourceProp];\n      },\n      set(value: any) {\n        this[sourceProp] = value;\n      }\n    });\n  }\n\n  function convertToYogaValue(\n    input: ?(number | string),\n    units: $PropertyType<YG.Constants, \"unit\">\n  ): YG.Value {\n    if (typeof input === \"number\") {\n      return { value: input, unit: units.point };\n    } else if (input == null) {\n      return { value: Yoga.Constants.undefinedValue, unit: units.point };\n    }\n    if (input === \"auto\") {\n      return { value: Yoga.Constants.undefinedValue, unit: units.auto };\n    }\n    return {\n      value: parseFloat(input),\n      unit: input.endsWith(\"%\") ? units.percent : units.point\n    };\n  }\n\n  function setEnumProp<T: YG.PropEnumMap>(\n    yogaNode: YG.Node,\n    propName: string,\n    enumMap: T,\n    value: ?string\n  ) {\n    if (value == null) {\n      yogaNode[propName] = Yoga.Constants.undefinedValue;\n    } else {\n      const enumValue = enumMap[value];\n      if (enumValue != null) {\n        yogaNode[propName] = enumValue;\n      } else if (__DEV__) {\n        console.warn(`No such value '${value}' found for prop '${propName}'`);\n      }\n    }\n  }\n\n  function bindEnumProps(\n    instance: typeof RCTShadowView.prototype,\n    propDefs: [string, YG.PropEnumMap][]\n  ) {\n    propDefs.forEach(([propName, enumMap]) => {\n      Object.defineProperty(instance, propName, {\n        configurable: true,\n        get: function() {\n          return this.yogaNode[propName];\n        },\n        set: function(value: string) {\n          setEnumProp(this.yogaNode, propName, enumMap, value);\n        }\n      });\n    });\n  }\n\n  function bindUnitProps(\n    instance: typeof RCTShadowView.prototype,\n    propDefs: string[]\n  ) {\n    propDefs.forEach((propName) => {\n      Object.defineProperty(instance, propName, {\n        configurable: true,\n        get() {\n          return this.yogaNode[propName];\n        },\n        set(value: string | number) {\n          this.yogaNode[propName] = convertToYogaValue(\n            value,\n            Yoga.Constants.unit\n          );\n        }\n      });\n    });\n  }\n\n  function bindNumberProps(\n    instance: typeof RCTShadowView.prototype,\n    propDefs: string[]\n  ) {\n    propDefs.forEach((propName) => {\n      Object.defineProperty(instance, propName, {\n        configurable: true,\n        get: function() {\n          return this.yogaNode[propName];\n        },\n        set: function(value: ?number) {\n          if (value == null) value = Yoga.Constants.undefinedValue;\n          this.yogaNode[propName] = value;\n        }\n      });\n    });\n  }\n\n  const EDGES = [\n    \"Left\",\n    \"Right\",\n    \"Top\",\n    \"Bottom\",\n    \"Start\",\n    \"End\",\n    \"Horizontal\",\n    \"Vertical\"\n  ];\n\n  function bindEdgeProps(\n    instance: typeof RCTShadowView.prototype,\n    propDefs: string[],\n    bindingFunc: (\n      instance: typeof RCTShadowView.prototype,\n      propDefs: string[]\n    ) => void\n  ) {\n    propDefs.forEach((propName) => {\n      bindingFunc.call(\n        null,\n        instance,\n        EDGES.map((edge) => `${propName}${edge}`).concat([propName])\n      );\n    });\n  }\n\n  bindEnumProps(RCTShadowView.prototype, [\n    [\"direction\", Yoga.Constants.direction],\n    [\"flexDirection\", Yoga.Constants.flexDirection],\n    [\"justifyContent\", Yoga.Constants.justify],\n    [\"alignContent\", Yoga.Constants.align],\n    [\"alignItems\", Yoga.Constants.align],\n    [\"alignSelf\", Yoga.Constants.align],\n    [\"position\", Yoga.Constants.position],\n    [\"flexWrap\", Yoga.Constants.wrap],\n    [\"overflow\", Yoga.Constants.overflow],\n    [\"display\", Yoga.Constants.display]\n  ]);\n  bindUnitProps(RCTShadowView.prototype, [\n    \"width\",\n    \"height\",\n    \"minWidth\",\n    \"minHeight\",\n    \"maxWidth\",\n    \"maxHeight\",\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"start\",\n    \"end\",\n    \"horizontal\",\n    \"vertical\",\n    \"flexBasis\"\n  ]);\n  bindNumberProps(RCTShadowView.prototype, [\n    \"flex\",\n    \"flexGrow\",\n    \"flexShrink\",\n    \"aspectRatio\"\n  ]);\n  bindEdgeProps(RCTShadowView.prototype, [\"margin\", \"padding\"], bindUnitProps);\n  bindEdgeProps(RCTShadowView.prototype, [\"border\"], bindNumberProps);\n\n  [\n    \"borderTop\",\n    \"borderLeft\",\n    \"borderRight\",\n    \"borderBottom\",\n    \"borderStart\",\n    \"borderEnd\"\n  ].forEach((propName) => {\n    propAlias(RCTShadowView.prototype, propName + \"Width\", propName);\n  });\n})();\n\nexport default RCTShadowView;\n"],"file":"RCTShadowView.js"}