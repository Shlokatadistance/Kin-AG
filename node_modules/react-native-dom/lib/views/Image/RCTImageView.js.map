{"version":3,"sources":["../../../ReactDom/views/Image/RCTImageView.js"],"names":["tintColorSVG","color","id","onLoadParamsForSource","source","width","size","height","url","request","idCounter","RCTImageView","bridge","onLoadStart","onLoad","onLoadEnd","_needsReload","style","overflow","_imageSources","svgFilter","document","createElement","childContainer","appendChild","filterId","imageElement","Image","imageElementAlt","setAttribute","resizeMode","undefined","addEventListener","forceRasterization","filterStrings","_tintColor","push","_blurRadius","webkitFilter","join","filter","_tile","frameSize","frameWidth","frameHeight","src","_src","imageWidth","_imageWidth","imageHeight","_imageHeight","scaleDownFactor","Math","min","backgroundImage","encodeURI","backgroundSize","backgroundRepeat","backgroundPosition","objectPosition","mountedImage","requestAnimationFrame","willChange","length","hasMultipleSources","scale","imageScale","targetImagePixels","bestSource","bestFit","Infinity","imgSize","imagePixels","fit","abs","imageSourceForSize","enqueueJSCall","reactTag","imageLoader","loadImageWithURLRequest","then","image","pendingImage","startsWith","decode","updateTile","remove","sourceLoaded","imageSourceWithSizeAndScale","catch","err","error","updateFilter","value","reloadImage","outputValue","objectFit","innerHTML","deviceInfo","getDevicePixelRatio","prevWidth","prevHeight","frame","RCTView","customElements","define"],"mappings":"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","sourcesContent":["/** @flow */\n\nimport type { Frame, Size } from \"InternalLib\";\nimport type RCTBridge from \"RCTBridge\";\nimport RCTView from \"RCTView\";\nimport RCTImageSource from \"RCTImageSource\";\nimport ColorArrayFromHexARGB from \"ColorArrayFromHexARGB\";\nimport prefixInlineStyles from \"prefixInlineStyles\";\nimport isIOS from \"isIOS\";\n\nconst tintColorSVG = (color: string, id: number) => {\n  return `\n    <svg>\n      <defs>\n        <filter id=\"tint-${id}\">\n          <feFlood flood-color=\"${color}\"></feFlood>\n          <feComposite in2=\"SourceAlpha\" operator=\"atop\"></feComposite>\n        </filter>\n      </defs>\n    </svg>`;\n};\n\nconst onLoadParamsForSource = (source: RCTImageSource) => ({\n  source: {\n    width: source.size.width,\n    height: source.size.height,\n    url: source.request\n  }\n});\n\nlet idCounter = 0;\n\nclass RCTImageView extends RCTView {\n  _imageSources: RCTImageSource[];\n  imageElement: HTMLImageElement;\n  imageElementAlt: HTMLImageElement;\n  mountedImage: ?HTMLImageElement;\n  imageContainer: HTMLDivElement;\n  childShadowRoot: ShadowRoot;\n  imgStyle: HTMLStyleElement;\n\n  onLoadStart: boolean = false;\n  onLoad: boolean = false;\n  onLoadEnd: boolean = false;\n\n  filterId: number;\n  svgFilter: HTMLElement;\n  _blurRadius: ?number;\n  _tintColor: ?string;\n\n  _tile: ?boolean; // resizeMode === \"repeat\"\n  _src: ?string; // Used to set the tile image\n  _imageWidth: ?number; // Used to calculate the tile image's scale factor\n  _imageHeight: ?number; // Used to calculate the tile image's scale factor\n  _needsReload: boolean = false; // Whether the latest change of props requires the image to be reloaded\n\n  constructor(bridge: RCTBridge) {\n    super(bridge);\n\n    Object.assign(this.style, {\n      overflow: \"hidden\"\n    });\n\n    this._imageSources = [];\n\n    // TODO: Using a shadow root breaks the tintColor functionality on safari,\n    //       figure out why and re-enable\n    // this.childShadowRoot = this.childContainer.attachShadow({ mode: \"open\" });\n\n    this.svgFilter = document.createElement(\"div\");\n    this.svgFilter.style.height = \"0\";\n    this.childContainer.appendChild(this.svgFilter);\n    this.filterId = idCounter;\n    idCounter++;\n\n    this.imageElement = new Image();\n    this.imageElementAlt = new Image();\n    this.imageElement.setAttribute(\"draggable\", \"false\");\n    this.imageElementAlt.setAttribute(\"draggable\", \"false\");\n    // this.imageElement.setAttribute(\"decoding\", \"async\");\n    // this.childContainer.appendChild(this.imageElement);\n\n    this.resizeMode = undefined;\n\n    this.imageElement.addEventListener(\"load\", () => {\n      this.forceRasterization();\n    });\n  }\n\n  updateFilter() {\n    const filterStrings: string[] = [];\n    if (this._tintColor) {\n      filterStrings.push(`url(#tint-${this.filterId})`);\n    }\n    if (this._blurRadius) {\n      filterStrings.push(`blur(${this._blurRadius}px)`);\n    }\n\n    // $FlowFixMe\n    this.imageElement.style.webkitFilter = filterStrings.join(\" \");\n    this.imageElement.style.filter = filterStrings.join(\" \");\n\n    // $FlowFixMe\n    this.imageElementAlt.style.webkitFilter = filterStrings.join(\" \");\n    this.imageElementAlt.style.filter = filterStrings.join(\" \");\n  }\n\n  updateTile() {\n    let style;\n\n    if (this._tile) {\n      const {\n        frameSize: { width: frameWidth, height: frameHeight },\n        _src: src,\n        _imageWidth: imageWidth,\n        _imageHeight: imageHeight\n      } = this;\n\n      if (!frameWidth || !frameHeight || !imageWidth || !imageHeight || !src) {\n        return;\n      }\n\n      const scaleDownFactor = Math.min(\n        1,\n        frameWidth / imageWidth,\n        frameHeight / imageHeight\n      );\n\n      style = {\n        backgroundImage: `url(${encodeURI(src)})`,\n        backgroundSize: `\n          ${scaleDownFactor * imageWidth}px\n          ${scaleDownFactor * imageHeight}px\n        `,\n        backgroundRepeat: \"repeat\",\n        backgroundPosition: \"0 0\",\n        objectPosition: `${-imageWidth - 1}px ${-imageHeight - 1}px`\n      };\n    } else {\n      style = {\n        backgroundImage: \"\",\n        backgroundSize: \"\",\n        backgroundRepeat: \"\",\n        backgroundPosition: \"\",\n        objectPosition: \"\"\n      };\n    }\n    Object.assign(this.imageElement.style, style);\n    Object.assign(this.imageElementAlt.style, style);\n  }\n\n  forceRasterization() {\n    const mountedImage = this.mountedImage;\n    if (this._tintColor != null && mountedImage != null) {\n      requestAnimationFrame(() => {\n        mountedImage.style.willChange = \"transform\";\n        requestAnimationFrame(() => {\n          mountedImage.style.willChange = \"auto\";\n        });\n      });\n    }\n  }\n\n  set imageSources(value: RCTImageSource[]) {\n    this._imageSources = value;\n    this.reloadImage();\n  }\n\n  set resizeMode(value: ?string) {\n    value = value || \"stretch\";\n\n    let outputValue: string = \"\";\n    switch (value) {\n      case \"contain\":\n      case \"cover\":\n        outputValue = value;\n        break;\n      case \"repeat\":\n      case \"center\":\n        outputValue = \"scale-down\";\n        break;\n      case \"stretch\":\n        outputValue = \"fill\";\n        break;\n      case \"none\":\n        outputValue = `none`;\n        break;\n    }\n    Object.assign(this.imageElement.style, {\n      objectFit: outputValue\n    });\n\n    Object.assign(this.imageElementAlt.style, {\n      objectFit: outputValue\n    });\n\n    this._tile = value === \"repeat\";\n    this.updateTile();\n  }\n\n  set blurRadius(value: ?number) {\n    this._blurRadius = value;\n    this.updateFilter();\n  }\n\n  set tintColor(value: ?string) {\n    this._tintColor = value;\n    this.svgFilter.innerHTML = this._tintColor\n      ? tintColorSVG(this._tintColor, this.filterId)\n      : \"\";\n    this.updateFilter();\n    this.forceRasterization();\n  }\n\n  get imageScale(): number {\n    return this.bridge.deviceInfo.getDevicePixelRatio();\n  }\n\n  get frame(): Frame {\n    return super.frame;\n  }\n\n  set frame(value: Frame) {\n    const prevWidth = this.width;\n    const prevHeight = this.height;\n\n    super.frame = value;\n\n    const { width, height } = value;\n    Object.assign(this.imageElement.style, {\n      width: `${width}px`,\n      height: `${height}px`\n    });\n\n    Object.assign(this.imageElementAlt.style, {\n      width: `${width}px`,\n      height: `${height}px`\n    });\n\n    if (prevWidth !== width || prevHeight !== height) {\n      this.reloadImage();\n    }\n  }\n\n  hasMultipleSources(): boolean {\n    return this._imageSources.length > 1;\n  }\n\n  imageSourceForSize(size: Size): ?RCTImageSource {\n    if (!this.hasMultipleSources()) {\n      return this._imageSources[0];\n    }\n\n    // need to wait for layout pass before deciding\n    if (size.width === 0 && size.height === 0) {\n      return null;\n    }\n\n    const scale = this.imageScale;\n    const targetImagePixels = size.width * size.height * scale * scale;\n\n    let bestSource: ?RCTImageSource = null;\n    let bestFit: number = Infinity;\n\n    for (let source of this._imageSources) {\n      const imgSize = source.size;\n      const imagePixels =\n        imgSize.width * imgSize.height * source.scale * source.scale;\n      const fit = Math.abs(1 - imagePixels / targetImagePixels);\n\n      if (fit < bestFit) {\n        bestFit = fit;\n        bestSource = source;\n      }\n    }\n\n    return bestSource;\n  }\n\n  get frameSize(): Size {\n    const { width, height } = this.frame;\n    return { width, height };\n  }\n\n  reloadImage() {\n    const source = this.imageSourceForSize(this.frameSize);\n    if (source && this.frameSize.width > 0 && this.frameSize.height > 0) {\n      if (this.onLoadStart) {\n        this.bridge.enqueueJSCall(\"RCTEventEmitter\", \"receiveEvent\", [\n          this.reactTag,\n          \"topLoadStart\",\n          null\n        ]);\n      }\n\n      this.bridge.imageLoader\n        .loadImageWithURLRequest(source.request)\n        .then((image: Image) => {\n          let pendingImage =\n            this.mountedImage === this.imageElement\n              ? this.imageElementAlt\n              : this.imageElement;\n          pendingImage.src = image.src;\n\n          this._src = pendingImage.src;\n          // We call updateTile() below so can skip it here\n\n          if (\n            !pendingImage.src.startsWith(\"data:\") &&\n            // $FlowFixMe\n            typeof pendingImage.decode === \"function\"\n          ) {\n            return pendingImage.decode().then(() => pendingImage);\n          }\n          return pendingImage;\n        })\n        .then((image: HTMLImageElement) => {\n          this._imageWidth = image.width;\n          this._imageHeight = image.height;\n\n          this.updateTile();\n\n          this.mountedImage && this.mountedImage.remove();\n\n          this.childContainer.appendChild(image);\n          this.mountedImage = image;\n\n          if (this.onLoad) {\n            const sourceLoaded = source.imageSourceWithSizeAndScale(\n              {\n                width: image.width,\n                height: image.height\n              },\n              source.scale\n            );\n            this.bridge.enqueueJSCall(\"RCTEventEmitter\", \"receiveEvent\", [\n              this.reactTag,\n              \"topLoad\",\n              onLoadParamsForSource(sourceLoaded)\n            ]);\n          }\n        })\n        .catch((err) => {\n          this.bridge.enqueueJSCall(\"RCTEventEmitter\", \"receiveEvent\", [\n            this.reactTag,\n            \"topError\",\n            {\n              error: err\n            }\n          ]);\n        })\n        .then(() => {\n          if (this.onLoadEnd) {\n            this.bridge.enqueueJSCall(\"RCTEventEmitter\", \"receiveEvent\", [\n              this.reactTag,\n              \"topLoadEnd\",\n              null\n            ]);\n          }\n          this.updateFilter();\n        });\n    }\n  }\n}\n\ncustomElements.define(\"rct-image-view\", RCTImageView);\n\nexport default RCTImageView;\n"],"file":"RCTImageView.js"}