{"version":3,"sources":["../../../ReactDom/views/WebView/RCTWebView.js"],"names":["RCTWebView","bridge","handleLoad","loadFinish","handleError","loadError","iframeElement","initializeIframe","element","document","createElement","style","position","top","left","border","childContainer","appendChild","value","width","height","source","removeAttribute","uri","setAttribute","html","loadStart","scrolling","overflow","RCTView","customElements","define"],"mappings":"61BAGA,8DAEA,4F,GAOMA,CAAAA,U,gEAOJ,oBAAYC,MAAZ,CAA+B,yDAC7B,sGAAMA,MAAN,GAD6B,MAsB/BC,UAtB+B,CAsBlB,UAAM,CACjB,MAAKC,UAAL,EAAmB,MAAKA,UAAL,CAAgB,EAAhB,CAAnB,CACD,CAxB8B,OA0B/BC,WA1B+B,CA0BjB,UAAM,CAClB,MAAKC,SAAL,EAAkB,MAAKA,SAAL,CAAe,EAAf,CAAlB,CACD,CA5B8B,CAG7B,MAAKC,aAAL,CAAqB,MAAKC,gBAAL,EAArB,CAH6B,aAI9B,C,+FAEkB,CACjB,GAAMC,CAAAA,OAAO,CAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAhB,CACA,sBACEF,OAAO,CAACG,KADV,CAEE,gCAAmB,CACjBC,QAAQ,CAAE,UADO,CAEjBC,GAAG,CAAE,GAFY,CAGjBC,IAAI,CAAE,GAHW,CAIjBC,MAAM,CAAE,MAJS,CAAnB,CAFF,EASA,KAAKC,cAAL,CAAoBC,WAApB,CAAgCT,OAAhC,EAEA,MAAOA,CAAAA,OAAP,CACD,C,iCAUkB,CACjB,yFACD,C,kBAESU,K,CAAc,CACtB,6EAAcA,KAAd,YAEA,KAAKZ,aAAL,CAAmBa,KAAnB,CAA8BD,KAAK,CAACC,KAApC,MACA,KAAKb,aAAL,CAAmBc,MAAnB,CAA+BF,KAAK,CAACE,MAArC,MACD,C,iCAEUC,M,CAAuB,CAChC,KAAKf,aAAL,CAAmBgB,eAAnB,CAAmC,QAAnC,EACA,KAAKhB,aAAL,CAAmBgB,eAAnB,CAAmC,KAAnC,EAEA,GAAID,MAAM,CAACE,GAAP,EAAc,IAAlB,CAAwB,CACtB,KAAKjB,aAAL,CAAmBkB,YAAnB,CAAgC,KAAhC,CAAuCH,MAAM,CAACE,GAA9C,EACD,CAFD,IAEO,IAAIF,MAAM,CAACI,IAAX,CAAiB,CACtB,KAAKnB,aAAL,CAAmBkB,YAAnB,CAAgC,QAAhC,CAA0CH,MAAM,CAACI,IAAjD,EACD,CAED,KAAKC,SAAL,EAAkB,KAAKA,SAAL,EAAlB,CACD,C,wCAEiBR,K,CAAgB,CAChC,GAAIA,KAAJ,CAAW,CACT,KAAKZ,aAAL,CAAmBqB,SAAnB,CAA+B,MAA/B,CACA,KAAKrB,aAAL,CAAmBK,KAAnB,CAAyBiB,QAAzB,CAAoC,SAApC,CACD,CAHD,IAGO,CACL,KAAKtB,aAAL,CAAmBqB,SAAnB,CAA+B,IAA/B,CACA,KAAKrB,aAAL,CAAmBK,KAAnB,CAAyBiB,QAAzB,CAAoC,QAApC,CACD,CACF,C,wBArEsBC,iB,EAwEzBC,cAAc,CAACC,MAAf,CAAsB,cAAtB,CAAsC/B,UAAtC,E,aAEeA,U","sourcesContent":["/** @flow */\n\nimport type { Frame } from \"InternalLib\";\nimport RCTView from \"RCTView\";\nimport type RCTBridge from \"RCTBridge\";\nimport prefixInlineStyles from \"prefixInlineStyles\";\n\nexport type WebViewSource = {\n  uri?: string,\n  html?: string\n};\n\nclass RCTWebView extends RCTView {\n  iframeElement: HTMLIFrameElement;\n\n  loadStart: ?Function;\n  loadFinish: ?Function;\n  loadError: ?Function;\n\n  constructor(bridge: RCTBridge) {\n    super(bridge);\n\n    this.iframeElement = this.initializeIframe();\n  }\n\n  initializeIframe() {\n    const element = document.createElement(\"iframe\");\n    Object.assign(\n      element.style,\n      prefixInlineStyles({\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        border: \"none\"\n      })\n    );\n    this.childContainer.appendChild(element);\n\n    return element;\n  }\n\n  handleLoad = () => {\n    this.loadFinish && this.loadFinish({});\n  };\n\n  handleError = () => {\n    this.loadError && this.loadError({});\n  };\n\n  get frame(): Frame {\n    return super.frame;\n  }\n\n  set frame(value: Frame) {\n    super.frame = value;\n\n    this.iframeElement.width = `${value.width}px`;\n    this.iframeElement.height = `${value.height}px`;\n  }\n\n  set source(source: WebViewSource) {\n    this.iframeElement.removeAttribute(\"srcdoc\");\n    this.iframeElement.removeAttribute(\"src\");\n\n    if (source.uri != null) {\n      this.iframeElement.setAttribute(\"src\", source.uri);\n    } else if (source.html) {\n      this.iframeElement.setAttribute(\"srcdoc\", source.html);\n    }\n\n    this.loadStart && this.loadStart();\n  }\n\n  set scrollEnabled(value: boolean) {\n    if (value) {\n      this.iframeElement.scrolling = \"auto\";\n      this.iframeElement.style.overflow = \"visible\";\n    } else {\n      this.iframeElement.scrolling = \"no\";\n      this.iframeElement.style.overflow = \"hidden\";\n    }\n  }\n}\n\ncustomElements.define(\"rct-web-view\", RCTWebView);\n\nexport default RCTWebView;\n"],"file":"RCTWebView.js"}