var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.TextMetrics=void 0;var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _TextStyle=require("./TextStyle");var TextMetrics=function(){function TextMetrics(text,style,width,height,lines,lineWidths,lineHeight,maxLineWidth,fontProperties){(0,_classCallCheck2.default)(this,TextMetrics);this.text=text;this.style=style;this.width=width;this.height=height;this.lines=lines;this.lineWidths=lineWidths;this.lineHeight=lineHeight;this.maxLineWidth=maxLineWidth;this.fontProperties=fontProperties;}(0,_createClass2.default)(TextMetrics,null,[{key:"measureText",value:function measureText(text,style){var numberOfLines=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Infinity;var wordWrap=arguments.length>3?arguments[3]:undefined;var canvas=arguments.length>4&&arguments[4]!==undefined?arguments[4]:TextMetrics._canvas;wordWrap=wordWrap?wordWrap:style.wordWrap;var font=style.toFontString();var fontProperties=TextMetrics.measureFont(font);var context=canvas.getContext("2d");context.font=font;var outputText=wordWrap?TextMetrics.wordWrap(text,style,canvas):text;var lines=outputText.split(/(?:\r\n|\r|\n)/);var lineWidths=new Array(lines.length);var maxLineWidth=0;for(var i=0;i<lines.length;i++){var lineWidth=context.measureText(lines[i]).width+(lines[i].length-1)*style.letterSpacing;lineWidths[i]=lineWidth;maxLineWidth=Math.max(maxLineWidth,lineWidth);}var width=maxLineWidth;var lineHeight=style.lineHeight;var height=Math.max(lineHeight,fontProperties.fontSize)+Math.min(numberOfLines-1,lines.length-1)*lineHeight;return new TextMetrics(text,style,width,height,lines,lineWidths,lineHeight,maxLineWidth,fontProperties);}},{key:"wordWrap",value:function wordWrap(text,style){var canvas=arguments.length>2&&arguments[2]!==undefined?arguments[2]:TextMetrics._canvas;var context=canvas.getContext("2d");var width=0;var line="";var lines="";var cache={};var letterSpacing=style.letterSpacing,whiteSpace=style.whiteSpace;var collapseSpaces=TextMetrics.collapseSpaces(whiteSpace);var collapseNewlines=TextMetrics.collapseNewlines(whiteSpace);var canPrependSpaces=!collapseSpaces;var wordWrapWidth=style.wordWrapWidth+letterSpacing;var tokens=TextMetrics.tokenize(text);for(var i=0;i<tokens.length;i++){var token=tokens[i];if(TextMetrics.isNewline(token)){if(!collapseNewlines){lines+=TextMetrics.addLine(line);canPrependSpaces=!collapseSpaces;line="";width=0;continue;}token=" ";}if(collapseSpaces){var currIsBreakingSpace=TextMetrics.isBreakingSpace(token);var lastIsBreakingSpace=TextMetrics.isBreakingSpace(line[line.length-1]);if(currIsBreakingSpace&&lastIsBreakingSpace){continue;}}var tokenWidth=TextMetrics.getFromCache(token,letterSpacing,cache,context);if(tokenWidth>wordWrapWidth){if(line!==""){lines+=TextMetrics.addLine(line);line="";width=0;}if(TextMetrics.canBreakWords(token,style.breakWords)){var characters=token.split("");for(var j=0;j<characters.length;j++){var char=characters[j];var k=1;while(characters[j+k]){var nextChar=characters[j+k];var lastChar=char[char.length-1];if(!TextMetrics.canBreakChars(lastChar,nextChar,token,j,style.breakWords)){char+=nextChar;}else{break;}k++;}j+=char.length-1;var characterWidth=TextMetrics.getFromCache(char,letterSpacing,cache,context);if(characterWidth+width>wordWrapWidth){lines+=TextMetrics.addLine(line);canPrependSpaces=false;line="";width=0;}line+=char;width+=characterWidth;}}else{if(line.length>0){lines+=TextMetrics.addLine(line);line="";width=0;}var isLastToken=i===tokens.length-1;lines+=TextMetrics.addLine(token,!isLastToken);canPrependSpaces=false;line="";width=0;}}else{if(tokenWidth+width>wordWrapWidth){canPrependSpaces=false;lines+=TextMetrics.addLine(line);line="";width=0;}if(line.length>0||!TextMetrics.isBreakingSpace(token)||canPrependSpaces){line+=token;width+=tokenWidth;}}}lines+=TextMetrics.addLine(line,false);return lines;}},{key:"addLine",value:function addLine(line){var newLine=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;line=newLine?line+"\n":line;return line;}},{key:"getFromCache",value:function getFromCache(key,letterSpacing,cache,context){var width=cache[key];if(width===undefined){var spacing=key.length*letterSpacing;width=context.measureText(key).width+spacing;cache[key]=width;}return width;}},{key:"collapseSpaces",value:function collapseSpaces(whiteSpace){return whiteSpace==="normal"||whiteSpace==="pre-line";}},{key:"collapseNewlines",value:function collapseNewlines(whiteSpace){return whiteSpace==="normal";}},{key:"trimRight",value:function trimRight(text){if(typeof text!=="string"){return"";}for(var i=text.length-1;i>=0;i--){var char=text[i];if(!TextMetrics.isBreakingSpace(char)){break;}text=text.slice(0,-1);}return text;}},{key:"isNewline",value:function isNewline(char){if(typeof char!=="string"){return false;}return TextMetrics._newlines.indexOf(char.charCodeAt(0))>=0;}},{key:"isBreakingSpace",value:function isBreakingSpace(char){if(typeof char!=="string"){return false;}return TextMetrics._breakingSpaces.indexOf(char.charCodeAt(0))>=0;}},{key:"tokenize",value:function tokenize(text){var tokens=[];var token="";if(typeof text!=="string"){return tokens;}for(var i=0;i<text.length;i++){var char=text[i];if(TextMetrics.isBreakingSpace(char)||TextMetrics.isNewline(char)){if(token!==""){tokens.push(token);token="";}tokens.push(char);continue;}token+=char;}if(token!==""){tokens.push(token);}return tokens;}},{key:"canBreakWords",value:function canBreakWords(token,breakWords){return breakWords;}},{key:"canBreakChars",value:function canBreakChars(char,nextChar,token,index,breakWords){return true;}},{key:"measureFont",value:function measureFont(font){if(TextMetrics._fonts[font]){return TextMetrics._fonts[font];}var ascent;var descent;var fontSize;var canvas=TextMetrics._canvas;var context=TextMetrics._context;var metricsString=TextMetrics.METRICS_STRING+TextMetrics.BASELINE_SYMBOL;var width=Math.ceil(context.measureText(metricsString).width);var baseline=Math.ceil(context.measureText(TextMetrics.BASELINE_SYMBOL).width);var height=2*baseline;baseline=baseline*TextMetrics.BASELINE_MULTIPLIER|0;canvas.width=width;canvas.height=height;context.fillStyle="#f00";context.fillRect(0,0,width,height);context.font=font;context.textBaseline="alphabetic";context.fillStyle="#000";context.fillText(metricsString,0,baseline);var imagedata=context.getImageData(0,0,width,height).data;var pixels=imagedata.length;var line=width*4;var i=0;var idx=0;var stop=false;for(i=0;i<baseline;++i){for(var j=0;j<line;j+=4){if(imagedata[idx+j]!==255){stop=true;break;}}if(!stop){idx+=line;}else{break;}}ascent=baseline-i;idx=pixels-line;stop=false;for(i=height;i>baseline;--i){for(var _j=0;_j<line;_j+=4){if(imagedata[idx+_j]!==255){stop=true;break;}}if(!stop){idx-=line;}else{break;}}descent=i-baseline;fontSize=ascent+descent;var properties={ascent:ascent,descent:descent,fontSize:fontSize};TextMetrics._fonts[font]=properties;return properties;}}]);return TextMetrics;}();exports.TextMetrics=TextMetrics;TextMetrics._fonts={};TextMetrics.METRICS_STRING="|Ã‰q";TextMetrics.BASELINE_SYMBOL="M";TextMetrics.BASELINE_MULTIPLIER=1.4;TextMetrics._newlines=[0x000a,0x000d];TextMetrics._breakingSpaces=[0x0009,0x0020,0x2000,0x2001,0x2002,0x2003,0x2004,0x2005,0x2006,0x2008,0x2009,0x200a,0x205f,0x3000];
//# sourceMappingURL=TextMetrics.js.map