{"version":3,"sources":["../../../ReactDom/views/Text/RCTTextManager.js"],"names":["RCTTextManager","RCTText","bridge","RCTShadowText","addMirroredProp","RCTPropTypes","string","setFontFamily","number","setFontSize","addBooleanProp","setSelectable","addColorProp","setColor","setTextAlign","addNumberProp","setPadding","setPaddingHorizontal","setPaddingVertical","setFontWeight","setFontStyle","setLetterSpacing","addStringProp","setTextDecorationLine","setTextDecorationStyle","setTextDecorationColor","setLineHeight","setIsHighlighted","setNumberOfLines","view","value","fontFamily","fontSize","selectable","color","textAlign","style","padding","stringValue","paddingLeft","paddingRight","paddingTop","paddingBottom","fontWeight","fontStyle","letterSpacing","textDecorationLine","textDecorationStyle","textDecorationColor","lineHeight","isHighlighted","numberOfLines","RCTViewManager","moduleName"],"mappings":"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","sourcesContent":["/** @flow */\n\nimport type RCTBridge from \"RCTBridge\";\nimport RCTPropTypes from \"RCTPropTypes\";\nimport RCTText from \"RCTText\";\nimport RCTViewManager from \"RCTViewManager\";\nimport RCTShadowText from \"RCTShadowText\";\nimport { defaults } from \"RCTSharedTextValues\";\n\nclass RCTTextManager extends RCTViewManager {\n  static moduleName = \"RCTTextManager\";\n\n  view(): RCTText {\n    return new RCTText(this.bridge);\n  }\n\n  shadowView(): RCTShadowText {\n    return new RCTShadowText(this.bridge);\n  }\n\n  describeProps() {\n    return super\n      .describeProps()\n      .addMirroredProp(\"fontFamily\", RCTPropTypes.string, this.setFontFamily)\n      .addMirroredProp(\"fontSize\", RCTPropTypes.number, this.setFontSize)\n      .addBooleanProp(\"selectable\", this.setSelectable)\n      .addColorProp(\"color\", this.setColor)\n      .addMirroredProp(\"textAlign\", RCTPropTypes.string, this.setTextAlign)\n      .addNumberProp(\"padding\", this.setPadding)\n      .addNumberProp(\"paddingHorizontal\", this.setPaddingHorizontal)\n      .addNumberProp(\"paddingVertical\", this.setPaddingVertical)\n      .addMirroredProp(\"fontWeight\", RCTPropTypes.number, this.setFontWeight)\n      .addMirroredProp(\"fontStyle\", RCTPropTypes.string, this.setFontStyle)\n      .addMirroredProp(\n        \"letterSpacing\",\n        RCTPropTypes.number,\n        this.setLetterSpacing\n      )\n      .addStringProp(\"textDecorationLine\", this.setTextDecorationLine)\n      .addStringProp(\"textDecorationStyle\", this.setTextDecorationStyle)\n      .addColorProp(\"textDecorationColor\", this.setTextDecorationColor)\n      .addMirroredProp(\"lineHeight\", RCTPropTypes.number, this.setLineHeight)\n      .addBooleanProp(\"isHighlighted\", this.setIsHighlighted)\n      .addMirroredProp(\n        \"numberOfLines\",\n        RCTPropTypes.number,\n        this.setNumberOfLines\n      );\n  }\n\n  setFontFamily(view: RCTText, value: ?string) {\n    view.fontFamily = value;\n  }\n\n  setFontSize(view: any, value: ?number) {\n    view.fontSize = value;\n  }\n\n  setSelectable(view: RCTText, value: ?boolean) {\n    view.selectable = value ?? false;\n  }\n\n  setColor(view: RCTText, value: ?string) {\n    view.color = value ?? \"black\";\n  }\n\n  setTextAlign(view: RCTText, value: ?string) {\n    view.textAlign = value;\n  }\n\n  setPadding(view: RCTText, value: ?number) {\n    view.style.padding = value != null ? `${value}px` : `0`;\n  }\n\n  setPaddingHorizontal(view: RCTText, value: ?number) {\n    const stringValue = value != null ? `${value}px` : `0`;\n    view.style.paddingLeft = stringValue;\n    view.style.paddingRight = stringValue;\n  }\n\n  setPaddingVertical(view: RCTText, value: ?number) {\n    const stringValue = value != null ? `${value}px` : `0`;\n    view.style.paddingTop = stringValue;\n    view.style.paddingBottom = stringValue;\n  }\n\n  setFontWeight(view: RCTText, value: ?string) {\n    view.fontWeight = value;\n  }\n\n  setFontStyle(view: RCTText, value: ?string) {\n    view.fontStyle = value;\n  }\n\n  setLetterSpacing(view: RCTText, value: ?number) {\n    view.letterSpacing = value;\n  }\n\n  setTextDecorationLine(view: RCTText, value: ?string) {\n    view.textDecorationLine = value;\n  }\n\n  setTextDecorationStyle(view: RCTText, value: ?string) {\n    view.textDecorationStyle = value;\n  }\n\n  setTextDecorationColor(view: RCTText, value: ?string) {\n    view.textDecorationColor = value;\n  }\n\n  setLineHeight(view: RCTText, value: ?number) {\n    view.lineHeight = value;\n  }\n\n  setIsHighlighted(view: RCTText, value: ?boolean) {\n    view.isHighlighted = value;\n  }\n\n  setNumberOfLines(view: RCTText, value: ?number) {\n    view.numberOfLines = value;\n  }\n}\n\nexport default RCTTextManager;\n"],"file":"RCTTextManager.js"}