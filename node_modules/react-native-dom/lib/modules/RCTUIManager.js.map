{"version":3,"sources":["../../ReactDom/modules/RCTUIManager.js"],"names":["rootTagCounter","RCTUIManager","bridge","pendingUIBlocks","didUpdateDimensions","window","width","height","scale","rootViewTag","rootView","viewRegistry","get","RCTRootView","addUIBlock","setAvailableSize","rootViewTags","requestTick","shadowViewRegistry","Map","Set","componentDataByName","moduleClasses","forEach","moduleClass","__isViewManager","componentData","RCTComponentData","set","name","layoutAnimationManager","RCTLayoutAnimationManager","observerCoordinator","RCTUIManagerObserverCoordinator","nativeViewHierarchyOptimizer","RCTNativeViewHierarchyOptimizer","deviceInfoModule","modulesByName","addListener","reactTag","availableSize","shadowView","RCTRootShadowView","viewName","constructor","isLayoutOnly","pixelRatio","deviceInfo","getDevicePixelRatio","updatePointScaleFactor","add","size","rootShadowView","updateAvailableSize","localData","view","tag","console","warn","rootTag","isPending","reactSuperview","removeReactSubview","queueRemovedNode","uiManager","delete","purge","uiManagerWillPerformLayout","isDirty","layoutChanges","recalculateLayout","applyLayoutChanges","uiManagerDidPerformLayout","uiManagerWillFlushBlocks","length","uiBlocks","block","call","layoutChange","layout","handleUpdateLayout","onBatchComplete","measurement","addLayoutChange","previousMeasurement","prevMeasurement","nextMeasurement","frame","$measure","callbackId","Promise","resolve","reject","measureGlobal","globalX","globalY","previousLayout","left","top","callbackFromId","getBoundingClientRect","jsResponder","error","config","onAnimationDidEnd","CanUse","matchMedia","matches","configureNext","containerTag","reactTags","RCTSetChildren","nodeToManage","isVirtual","handleSetChildren","props","createShadowView","setPropsForShadowView","queueAddedNode","handleCreateView","createView","setPropsForView","updatedProps","handleUpdateView","newReactTag","superShadowView","indexOfView","reactSubviews","indexOf","removeAtIndices","addTags","$manageChildren","atPoint","x","y","targetReactTag","reactTagAtPoint","measure","moveFrom","moveTo","addChildTags","addAtIndices","removeFrom","shadowViewToManage","numToMove","viewsToAdd","indicesToRemove","tagsToRemove","tagsToDelete","i","moveFromIndex","tagToMove","index","viewTagToAdd","indexToAddAt","indexToRemove","tagToRemove","sort","a","b","childIndex","shadowSubView","undefined","RCTShadowText","textChildren","tagToAdd","indexToAdd","insertReactSubviewAtIndex","handleManageChildren","manageChildren","viewToManage","viewToRemove","viewAtIndex","viewToAdd","tagToDelete","purgeView","commandID","commandArgs","managerClass","module","moduleForClass","methodName","functionMap","args","manager","apply","viewToFocus","focus","viewToBlur","blur","constants","bubblingEvents","directEvents","moduleConstants","bubblingEventTypes","directEventTypes","Manager","viewConfig","NativeProps","propTypes","baseModuleName","eventName","registrationName","substring","bubbleName","phasedRegistrationNames","bubbled","captured","registry","container","RCTModule","moduleName"],"mappings":"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","sourcesContent":["/** @flow */\n\nimport invariant from \"invariant\";\n\nimport RCTUIManagerObserverCoordinator from \"RCTUIManagerObserverCoordinator\";\nimport RCTModule, { bridgeModuleNameForClass } from \"RCTModule\";\nimport type RCTBridge from \"RCTBridge\";\nimport { type Frame } from \"InternalLib\";\nimport UIView from \"UIView\";\nimport RCTView from \"RCTView\";\nimport RCTRootView from \"RCTRootView\";\nimport RCTDeviceInfo from \"RCTDeviceInfo\";\nimport RCTLayoutAnimationManager from \"RCTLayoutAnimationManager\";\nimport RCTComponentData from \"RCTComponentData\";\nimport CanUse from \"CanUse\";\nimport instrument from \"Instrument\";\nimport type { RCTComponent } from \"RCTComponent\";\nimport type { LayoutChange } from \"RCTShadowView\";\nimport type { LayoutAnimationConfig } from \"RCTLayoutAnimationManager\";\nimport RCTShadowView from \"RCTShadowView\";\nimport RCTRootShadowView from \"RCTRootShadowView\";\nimport RCTShadowText from \"RCTShadowText\";\nimport RCTNativeViewHierarchyOptimizer from \"RCTNativeViewHierarchyOptimizer\";\n\n// type ShadowView = any;\ntype Size = { width: number, height: number };\n\nlet rootTagCounter = 0;\n\ntype UIBlock = (RCTUIManager, Map<number, UIView>) => void;\n\nclass RCTUIManager extends RCTModule {\n  static moduleName = \"RCTUIManager\";\n\n  rootViewTags: Set<number>;\n  shadowViewRegistry: Map<number, RCTShadowView>;\n  viewRegistry: Map<number, UIView>;\n  componentDataByName: Map<string, RCTComponentData>;\n  jsResponder: ?UIView;\n  layoutAnimationManager: RCTLayoutAnimationManager;\n  observerCoordinator: RCTUIManagerObserverCoordinator;\n  nativeViewHierarchyOptimizer: RCTNativeViewHierarchyOptimizer;\n\n  pendingUIBlocks: Array<UIBlock> = [];\n\n  constructor(bridge: RCTBridge) {\n    super(bridge);\n\n    this.shadowViewRegistry = new Map();\n    this.viewRegistry = new Map();\n\n    // Internal resources\n    this.rootViewTags = new Set();\n\n    // Get view managers from bridge\n    this.componentDataByName = new Map();\n    this.bridge.moduleClasses.forEach((moduleClass: any) => {\n      if (moduleClass.__isViewManager) {\n        const componentData = new RCTComponentData(moduleClass, this.bridge);\n        this.componentDataByName.set(componentData.name, componentData);\n      }\n    });\n\n    this.layoutAnimationManager = new RCTLayoutAnimationManager(this);\n    this.observerCoordinator = new RCTUIManagerObserverCoordinator();\n    this.nativeViewHierarchyOptimizer = new RCTNativeViewHierarchyOptimizer(\n      this\n    );\n\n    invariant(this.bridge, \"Bridge must be set\");\n    const deviceInfoModule: RCTDeviceInfo = (this.bridge.modulesByName[\n      \"DeviceInfo\"\n    ]: any);\n\n    deviceInfoModule.addListener(\n      \"didUpdateDimensions\",\n      this.didUpdateDimensions\n    );\n  }\n\n  didUpdateDimensions = ({ window: { width, height, scale } }: any) => {\n    // this.bridge.GlobalYogaConfig.setPointScaleFactor(scale);\n\n    for (let rootViewTag of this.rootViewTags) {\n      const rootView = this.viewRegistry.get(rootViewTag);\n\n      invariant(rootView, \"Root view must exist\");\n      invariant(rootView instanceof RCTRootView, \"View must be an RCTRootView\");\n      this.addUIBlock(() => {\n        this.setAvailableSize({ width, height }, scale, rootView);\n      });\n    }\n\n    this.requestTick();\n  };\n\n  get allocateRootTag(): number {\n    const tag = rootTagCounter;\n    rootTagCounter++;\n    return tag * 10 + 1;\n  }\n\n  /**\n   * Register a root view with the RCTUIManager.\n   */\n  registerRootView(rootView: RCTRootView) {\n    const reactTag = rootView.reactTag;\n    const availableSize = rootView.availableSize;\n\n    // register view\n    this.viewRegistry.set(reactTag, rootView);\n\n    // register shadow view\n    const shadowView = new RCTRootShadowView(this.bridge);\n    shadowView.availableSize = availableSize;\n    shadowView.reactTag = reactTag;\n    shadowView.viewName = rootView.constructor.name;\n    shadowView.isLayoutOnly = false;\n\n    const pixelRatio = this.bridge.deviceInfo.getDevicePixelRatio();\n    shadowView.updatePointScaleFactor(pixelRatio);\n\n    this.shadowViewRegistry.set(reactTag, shadowView);\n    this.rootViewTags.add(reactTag);\n  }\n\n  setAvailableSize(size: Size, scale: number, rootView: RCTRootView): void {\n    rootView.width = size.width;\n    rootView.height = size.height;\n\n    const reactTag = rootView.reactTag;\n    const rootShadowView = this.shadowViewRegistry.get(reactTag);\n    if (rootShadowView && rootShadowView instanceof RCTRootShadowView)\n      rootShadowView.updateAvailableSize(size) &&\n        rootShadowView.updatePointScaleFactor(scale);\n  }\n\n  setLocalDataForView(localData: any, view: UIView) {\n    const tag = view.reactTag;\n    const shadowView = this.shadowViewRegistry.get(tag);\n    if (shadowView == null) {\n      console.warn(\n        `Could not locate shadow view with tag ${tag}, this is probably caused by a temporary inconsistency between native views and shadow views.`\n      );\n      return;\n    }\n    shadowView.localData = localData;\n    this.requestTick();\n  }\n\n  rootTagForReactTag(reactTag: number): number {\n    let view: ?RCTShadowView = this.shadowViewRegistry.get(reactTag);\n    invariant(view, `No shadow view found with tag ${reactTag}`);\n    return view.rootTag;\n  }\n\n  viewNameForReactTag(reactTag: number): string {\n    const shadowView = this.shadowViewRegistry.get(reactTag);\n    invariant(shadowView, `No such shadowView with id ${reactTag}`);\n    return shadowView.viewName;\n  }\n\n  purgeView(reactTag: number) {\n    if (this.layoutAnimationManager.isPending()) {\n      const view = this.viewRegistry.get(reactTag);\n      if (view && view.reactSuperview) {\n        view.reactSuperview.removeReactSubview(view);\n      }\n      this.layoutAnimationManager.queueRemovedNode(reactTag);\n    } else {\n      this.addUIBlock((uiManager, viewRegistry) => {\n        const view = viewRegistry.get(reactTag);\n        viewRegistry.delete(reactTag);\n        if (view) {\n          view.purge();\n        }\n      });\n    }\n  }\n\n  async frame() {\n    this.observerCoordinator.uiManagerWillPerformLayout(this);\n\n    this.rootViewTags.forEach((rootTag) => {\n      const rootShadowView = this.shadowViewRegistry.get(rootTag);\n\n      if (rootShadowView != null && rootShadowView.isDirty) {\n        invariant(\n          rootShadowView instanceof RCTRootShadowView,\n          \"attempting to recalculate from shadowView that isn't root\"\n        );\n\n        const layoutChanges = instrument(\"⚛️ Layout\", () =>\n          rootShadowView.recalculateLayout()\n        );\n\n        this.applyLayoutChanges(layoutChanges);\n      }\n    });\n\n    this.observerCoordinator.uiManagerDidPerformLayout(this);\n\n    if (this.layoutAnimationManager.isPending()) {\n      instrument(\"⚛️ LayoutAnimation Construction\", () => {\n        this.layoutAnimationManager.applyLayoutChanges();\n      });\n    }\n\n    this.observerCoordinator.uiManagerWillFlushBlocks(this);\n\n    instrument(\"⚛️ Style\", () => {\n      if (this.pendingUIBlocks.length > 0) {\n        const uiBlocks = [...this.pendingUIBlocks];\n        this.pendingUIBlocks = [];\n\n        uiBlocks.forEach((block) => {\n          block.call(null, this, this.viewRegistry);\n        });\n\n        this.requestTick();\n      }\n    });\n  }\n\n  shouldContinue(): boolean {\n    return this.pendingUIBlocks.length !== 0;\n  }\n\n  requestTick() {\n    this.rootViewTags.forEach((rootViewTag) => {\n      const rootView = this.viewRegistry.get(rootViewTag);\n      invariant(\n        rootView && rootView instanceof RCTRootView,\n        `RootView (with ID ${rootViewTag}) does not exist`\n      );\n      rootView.requestTick();\n    });\n  }\n\n  applyLayoutChanges(layoutChanges: LayoutChange[]) {\n    layoutChanges.forEach((layoutChange) => {\n      const { reactTag, layout } = layoutChange;\n      const shadowView = this.shadowViewRegistry.get(reactTag);\n      invariant(shadowView, `View with reactTag ${reactTag} does not exist`);\n      this.nativeViewHierarchyOptimizer.handleUpdateLayout(shadowView);\n    });\n    this.nativeViewHierarchyOptimizer.onBatchComplete();\n  }\n\n  updateLayout(reactTag: number, layout: Frame) {\n    if (this.layoutAnimationManager.isPending()) {\n      const shadowView = this.shadowViewRegistry.get(reactTag);\n      invariant(\n        shadowView,\n        `Shadow View with reactTag ${reactTag} does not exist`\n      );\n      invariant(\n        shadowView.measurement,\n        `Shadow View with tag ${reactTag} has no measurement calculated`\n      );\n      this.layoutAnimationManager.addLayoutChange({\n        reactTag,\n        layout,\n        previousMeasurement: shadowView.prevMeasurement,\n        nextMeasurement: shadowView.measurement\n      });\n    } else {\n      const view = this.viewRegistry.get(reactTag);\n      invariant(view, `View with reactTag ${reactTag} does not exist`);\n      view.frame = layout;\n    }\n  }\n\n  measure(reactTag: number) {\n    return this.$measure(reactTag);\n  }\n\n  $measure(reactTag: number, callbackId: ?number): Promise<*> {\n    return new Promise((resolve, reject) => {\n      this.addUIBlock(() => {\n        let shadowView = this.shadowViewRegistry.get(reactTag);\n        let view = this.viewRegistry.get(reactTag);\n\n        if (!shadowView || !shadowView.measurement) {\n          return resolve();\n        }\n\n        const { globalX, globalY } = shadowView.measureGlobal();\n\n        invariant(\n          shadowView.previousLayout,\n          \"Shadow view has no previous layout\"\n        );\n        let { left, top, width, height } = shadowView.previousLayout;\n\n        if (callbackId != null) {\n          this.bridge.callbackFromId(callbackId)(\n            left,\n            top,\n            width,\n            height,\n            globalX,\n            globalY\n          );\n        }\n\n        resolve({\n          left,\n          top,\n          width,\n          height,\n          globalX,\n          globalY\n        });\n      });\n    });\n  }\n\n  async $measureInWindow(reactTag: number, callbackId: number) {\n    // const result = await this.measure(reactTag);\n    // invariant(result, `No measurement available for view ${reactTag}`);\n\n    // TODO: Replace with calculation from shadowView tree\n    const view = this.viewRegistry.get(reactTag);\n    invariant(view, `No such view with tag: ${reactTag}`);\n\n    const { left, top, width, height } = view.getBoundingClientRect();\n\n    // const { globalX, globalY, width, height } = result;\n    this.bridge.callbackFromId(callbackId)(left, top, width, height);\n  }\n\n  $setJSResponder(reactTag: number) {\n    this.jsResponder = this.viewRegistry.get(reactTag);\n    if (!this.jsResponder) {\n      console.error(\n        `Invalid view set to be the JS responder - tag ${reactTag}`\n      );\n    }\n  }\n\n  $clearJSResponder() {\n    this.jsResponder = null;\n  }\n\n  $configureNextLayoutAnimation(\n    config: LayoutAnimationConfig,\n    onAnimationDidEnd: number\n  ) {\n    if (\n      !CanUse.matchMedia ||\n      !window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches\n    ) {\n      this.layoutAnimationManager.configureNext(\n        config,\n        this.bridge.callbackFromId(onAnimationDidEnd)\n      );\n    }\n  }\n\n  addUIBlock(block: ?UIBlock) {\n    if (block == null || this.viewRegistry == null) {\n      return;\n    }\n    // TODO: Determine why defering the UI blocks causes flatlist to crash\n    block.call(null, this, this.viewRegistry);\n    // this.pendingUIBlocks.push(block);\n  }\n\n  prependUIBlock(block: ?UIBlock) {\n    if (!block) {\n      return;\n    }\n    block.call(null, this, this.viewRegistry);\n    // this.pendingUIBlocks.unshift(block);\n  }\n\n  $setChildren(containerTag: number, reactTags: Array<number>) {\n    RCTUIManager.RCTSetChildren(\n      containerTag,\n      reactTags,\n      this.shadowViewRegistry\n    );\n\n    const nodeToManage = this.shadowViewRegistry.get(containerTag);\n    invariant(nodeToManage, `No such ShadowView with tag ${containerTag}`);\n\n    if (!nodeToManage.isVirtual()) {\n      this.nativeViewHierarchyOptimizer.handleSetChildren(\n        nodeToManage,\n        reactTags\n      );\n    } else {\n      RCTUIManager.RCTSetChildren(containerTag, reactTags, this.viewRegistry);\n    }\n\n    // TODO: Remove\n    // this.addUIBlock(\n    //   (uiManager: RCTUIManager, viewRegistry: Map<number, UIView>) => {\n    //     RCTUIManager.RCTSetChildren(containerTag, reactTags, viewRegistry);\n    //   }\n    // );\n  }\n\n  setChildren(containerTag: number, reactTags: Array<number>) {\n    RCTUIManager.RCTSetChildren(containerTag, reactTags, this.viewRegistry);\n  }\n\n  static RCTSetChildren(\n    containerTag: number,\n    reactTags: Array<number>,\n    registry: Map<number, $Subtype<RCTComponent>>\n  ) {\n    const container = registry.get(containerTag);\n    let index = 0;\n    reactTags.forEach((reactTag) => {\n      const view = registry.get(reactTag);\n      invariant(container, `No container view found with id: ${containerTag}`);\n      invariant(view, `No view found with id: ${reactTag}`);\n      container.insertReactSubviewAtIndex(view, index++);\n    });\n  }\n\n  $createView(\n    reactTag: number,\n    viewName: string,\n    rootTag: number,\n    props: Object\n  ) {\n    const componentData = this.componentDataByName.get(viewName);\n    invariant(\n      componentData,\n      `No component found for view with name ${viewName}`\n    );\n\n    // register shadow view\n    const shadowView = componentData.createShadowView(reactTag);\n    if (shadowView != null) {\n      shadowView.rootTag = rootTag;\n      shadowView.viewName = viewName;\n      componentData.setPropsForShadowView(props, shadowView);\n      this.shadowViewRegistry.set(reactTag, shadowView);\n    }\n\n    if (this.layoutAnimationManager.isPending())\n      this.layoutAnimationManager.queueAddedNode(reactTag);\n\n    if (!shadowView.isVirtual()) {\n      this.nativeViewHierarchyOptimizer.handleCreateView(shadowView, props);\n    } else {\n      this.createView(reactTag, viewName, props);\n    }\n\n    // Shadow view is the source of truth for background color this is a little\n    // bit counter-intuitive if people try to set background color when setting up\n    // the view, but it's the only way that makes sense given our threading model\n    // TODO: remove\n    // const backgroundColor = shadowView.backgroundColor;\n\n    // TODO: move to createView\n    // Dispatch view creation directly to the main thread instead of adding to\n    // UIBlocks array. This way, it doesn't get deferred until after layout.\n    // const view = componentData.createView(reactTag);\n    // if (view != null) {\n    //   componentData.setPropsForView(props, view);\n\n    // if (typeof view.setBackgroundColor === \"function\") {\n    //   view.setBackgroundColor(backgroundColor);\n    // }\n\n    // this.viewRegistry.set(reactTag, view);\n    // }\n  }\n\n  createView(reactTag: number, viewName: string, props: ?Object) {\n    const componentData = this.componentDataByName.get(viewName);\n    invariant(\n      componentData,\n      `No component found for view with name ${viewName}`\n    );\n\n    const view = componentData.createView(reactTag);\n    if (view != null) {\n      props && componentData.setPropsForView(props, view);\n      this.viewRegistry.set(reactTag, view);\n    }\n  }\n\n  $updateView(reactTag: number, viewName: string, updatedProps: Object) {\n    const componentData = this.componentDataByName.get(viewName);\n    invariant(\n      componentData,\n      `No component found for view with name ${viewName}`\n    );\n\n    const shadowView = this.shadowViewRegistry.get(reactTag);\n    if (shadowView) {\n      componentData.setPropsForShadowView(updatedProps, shadowView);\n      this.nativeViewHierarchyOptimizer.handleUpdateView(\n        shadowView,\n        viewName,\n        updatedProps\n      );\n    }\n  }\n\n  updateView(reactTag: number, viewName: string, updatedProps: Object) {\n    const componentData = this.componentDataByName.get(viewName);\n    invariant(\n      componentData,\n      `No component found for view with name ${viewName}`\n    );\n\n    const view = this.viewRegistry.get(reactTag);\n    if (view) {\n      componentData.setPropsForView(updatedProps, view);\n    }\n  }\n\n  synchronouslyUpdateView(reactTag: number, viewName: string, props: Object) {\n    const componentData = this.componentDataByName.get(viewName);\n    invariant(\n      componentData,\n      `No component found for view with name ${viewName}`\n    );\n\n    const view = this.viewRegistry.get(reactTag);\n    if (view) {\n      // console.log(\"animating view\", view, props);\n      componentData.setPropsForView(props, view);\n    }\n  }\n\n  $replaceExistingNonRootView(reactTag: number, newReactTag: number) {\n    const shadowView = this.shadowViewRegistry.get(reactTag);\n    invariant(shadowView, `shadowView (for ID ${reactTag}) not found`);\n\n    const superShadowView = shadowView.reactSuperview;\n    invariant(\n      superShadowView,\n      `shadowView super (of ID ${reactTag}) not found`\n    );\n\n    const indexOfView = superShadowView.reactSubviews.indexOf(shadowView);\n    invariant(\n      indexOfView !== -1,\n      \"View's superview does't claim it as subview\"\n    );\n\n    const removeAtIndices = [indexOfView];\n    const addTags = [newReactTag];\n\n    this.$manageChildren(\n      superShadowView.reactTag,\n      null,\n      null,\n      addTags,\n      removeAtIndices,\n      removeAtIndices\n    );\n  }\n\n  async $findSubviewIn(\n    reactTag: number,\n    atPoint: [number, number],\n    callbackId: number\n  ) {\n    const [x, y] = atPoint;\n    const shadowView = this.shadowViewRegistry.get(reactTag);\n\n    invariant(shadowView, `No such view with tag ${reactTag}`);\n\n    const targetReactTag = shadowView.reactTagAtPoint({ x, y });\n\n    const measurement = await this.measure(targetReactTag);\n\n    invariant(\n      measurement,\n      `View with tag ${targetReactTag} has no measurement`\n    );\n    const { globalX, globalY, width, height } = measurement;\n\n    this.bridge.callbackFromId(callbackId)(\n      targetReactTag,\n      globalX,\n      globalY,\n      width,\n      height\n    );\n  }\n\n  $manageChildren(\n    tag: number,\n    moveFrom: ?Array<number>,\n    moveTo: ?Array<number>,\n    addChildTags: Array<number>,\n    addAtIndices: Array<number>,\n    removeFrom: Array<number>\n  ) {\n    const shadowViewToManage = this.shadowViewRegistry.get(tag);\n\n    if (!shadowViewToManage) return;\n\n    // determine counts with checks for null\n    const numToMove = !moveFrom ? 0 : moveFrom.length;\n\n    // We treat moves as an add and a delete\n    const viewsToAdd = [];\n    const indicesToRemove = [];\n    const tagsToRemove = [];\n    const tagsToDelete = [];\n\n    // moves are based on a series of adds after removes\n    if (moveFrom && moveTo) {\n      for (let i = 0; i < moveFrom.length; i++) {\n        const moveFromIndex = moveFrom[i];\n        const tagToMove =\n          shadowViewToManage.reactSubviews[moveFromIndex].reactTag;\n        viewsToAdd[i] = {\n          tag: tagToMove,\n          index: moveTo[i]\n        };\n        indicesToRemove[i] = moveFromIndex;\n        tagsToRemove[i] = tagToMove;\n      }\n    }\n\n    // add the rest of the adds\n    if (addChildTags) {\n      for (let i = 0; i < addChildTags.length; i++) {\n        const viewTagToAdd = addChildTags[i];\n        const indexToAddAt = addAtIndices[i];\n        viewsToAdd[numToMove + i] = {\n          tag: viewTagToAdd,\n          index: indexToAddAt\n        };\n      }\n    }\n\n    // now add the required removes\n    if (removeFrom) {\n      for (let i = 0; i < removeFrom.length; i++) {\n        const indexToRemove = removeFrom[i];\n        if (shadowViewToManage.reactSubviews[indexToRemove]) {\n          const tagToRemove =\n            shadowViewToManage.reactSubviews[indexToRemove].reactTag;\n          indicesToRemove[numToMove + i] = indexToRemove;\n          tagsToRemove[numToMove + i] = tagToRemove;\n          tagsToDelete[i] = tagToRemove;\n        }\n      }\n    }\n\n    // NB: moveFrom and removeFrom are both relative to the starting state of the View's children.\n    // moveTo and addAt are both relative to the final state of the View's children.\n    //\n    // 1) Sort the views to add and indices to remove by index\n    // 2) Iterate the indices being removed from high to low and remove them. Going high to low\n    //    makes sure we remove the correct index when there are multiple to remove.\n    // 3) Iterate the views being added by index low to high and add them. Like the view removal,\n    //    iteration direction is important to preserve the correct index.\n\n    viewsToAdd.sort(function(a, b) {\n      return a.index - b.index;\n    });\n    indicesToRemove.sort(function(a, b) {\n      return a - b;\n    });\n\n    // Apply changes to node hierarchy\n    // removing in the order last index to first index\n    for (let i = indicesToRemove.length - 1; i >= 0; i--) {\n      const childIndex = indicesToRemove[i];\n\n      let shadowSubView = undefined;\n      if (shadowViewToManage instanceof RCTShadowText) {\n        shadowSubView = shadowViewToManage.textChildren[childIndex];\n      } else {\n        shadowSubView = shadowViewToManage.reactSubviews[childIndex];\n      }\n\n      if (shadowSubView) {\n        shadowViewToManage.removeReactSubview(shadowSubView);\n        if (this.layoutAnimationManager.isPending()) {\n          shadowSubView.reactSuperview = shadowViewToManage;\n        }\n      }\n\n      // TODO: Remove\n      // if (!this.layoutAnimationManager.isPending()) {\n      //   this.addUIBlock((uiManager, viewRegistry) => {\n      //     const subView = viewToManage.reactSubviews[childIndex];\n      //     viewToManage.removeReactSubview(subView);\n      //   });\n      // }\n    }\n\n    // add the new children\n    for (let i = 0; i < viewsToAdd.length; i++) {\n      const { tag: tagToAdd, index: indexToAdd } = viewsToAdd[i];\n\n      const shadowSubView = this.shadowViewRegistry.get(tagToAdd);\n      if (shadowSubView) {\n        shadowViewToManage.insertReactSubviewAtIndex(shadowSubView, indexToAdd);\n      }\n\n      // TODO: Remove\n      // this.addUIBlock((uiManager, viewRegistry) => {\n      //   const subView = viewRegistry.get(tagToAdd);\n      //   invariant(\n      //     subView,\n      //     `Attempted to insert subview with tag ${tagToAdd} that does not exist`\n      //   );\n      //   viewToManage.insertReactSubviewAtIndex(subView, indexToAdd);\n      // });\n    }\n\n    if (!shadowViewToManage.isVirtual()) {\n      this.nativeViewHierarchyOptimizer.handleManageChildren(\n        shadowViewToManage,\n        indicesToRemove,\n        tagsToRemove,\n        viewsToAdd,\n        tagsToDelete\n      );\n    } else {\n      this.manageChildren(tag, indicesToRemove, viewsToAdd, tagsToDelete);\n    }\n\n    for (let i = 0; i < tagsToDelete.length; i++) {\n      const reactTag = tagsToDelete[i];\n      const shadowView = this.shadowViewRegistry.get(tagsToDelete[i]);\n      if (shadowView) {\n        !this.layoutAnimationManager.isPending() &&\n          this.shadowViewRegistry.delete(reactTag);\n        shadowView.purge();\n      }\n    }\n  }\n\n  manageChildren(\n    tag: number,\n    indicesToRemove: ?(number[]),\n    viewsToAdd: ?({ tag: number, index: number }[]),\n    tagsToDelete: ?(number[])\n  ) {\n    const viewToManage = this.viewRegistry.get(tag);\n    invariant(viewToManage, `No such view found with tag ${tag}`);\n\n    if (indicesToRemove != null) {\n      for (let i = indicesToRemove.length - 1; i >= 0; i--) {\n        const indexToRemove = indicesToRemove[i];\n        const viewToRemove = viewToManage.reactSubviews[indexToRemove];\n        if (viewToRemove) {\n          viewToManage.removeReactSubview(viewToRemove);\n        }\n      }\n    }\n\n    if (viewsToAdd != null) {\n      for (let i = 0; i < viewsToAdd.length; i++) {\n        const viewAtIndex = viewsToAdd[i];\n        const viewToAdd = this.viewRegistry.get(viewAtIndex.tag);\n        if (viewToAdd != null) {\n          viewToManage.insertReactSubviewAtIndex(viewToAdd, viewAtIndex.index);\n        }\n      }\n    }\n\n    if (tagsToDelete != null) {\n      for (let i = 0; i < tagsToDelete.length; i++) {\n        const tagToDelete = tagsToDelete[i];\n        this.purgeView(tagToDelete);\n      }\n    }\n  }\n\n  $dispatchViewManagerCommand(\n    reactTag: number,\n    commandID: number,\n    commandArgs: any[]\n  ) {\n    const shadowView = this.shadowViewRegistry.get(reactTag);\n    invariant(shadowView, `No such shadow view with tag ${reactTag}`);\n\n    const componentData = this.componentDataByName.get(shadowView.viewName);\n    invariant(\n      componentData,\n      `No such componentData for name ${shadowView.viewName}`\n    );\n\n    const managerClass = componentData.managerClass;\n    const module = this.bridge.moduleForClass(managerClass);\n\n    const methodName = module.functionMap[commandID];\n    const args = [reactTag, ...commandArgs];\n\n    const manager = this.bridge.moduleForClass(managerClass);\n    manager.functionMap[commandID].apply(manager, args);\n  }\n\n  $focus(reactTag: number) {\n    const viewToFocus = this.viewRegistry.get(reactTag);\n    invariant(viewToFocus, `No view found with react tag: ${reactTag}`);\n\n    if (typeof viewToFocus.focus === \"function\") {\n      viewToFocus.focus();\n    } else {\n      console.warn(`View with tag '${reactTag}' cannot be focused`);\n    }\n  }\n\n  $blur(reactTag: number) {\n    const viewToBlur = this.viewRegistry.get(reactTag);\n    invariant(viewToBlur, `No view found with react tag: ${reactTag}`);\n\n    if (typeof viewToBlur.blur === \"function\") {\n      viewToBlur.blur();\n    } else {\n      console.warn(`View with tag '${reactTag}' cannot be blurred`);\n    }\n  }\n\n  constantsToExport() {\n    const constants = {};\n    const bubblingEvents = {};\n    const directEvents = {};\n\n    for (const [name, componentData] of this.componentDataByName) {\n      const moduleConstants = {};\n\n      // Register which event-types this view dispatches.\n      // React needs this for the event plugin.\n      const bubblingEventTypes = {};\n      const directEventTypes = {};\n\n      // Add manager class\n      moduleConstants.Manager = bridgeModuleNameForClass(\n        componentData.managerClass\n      );\n\n      // Add native props\n      const viewConfig = componentData.viewConfig;\n      moduleConstants.NativeProps = viewConfig.propTypes;\n      moduleConstants.baseModuleName = viewConfig.baseModuleName;\n\n      // Add direct events\n      for (let eventName of viewConfig.directEvents) {\n        if (!directEvents[eventName]) {\n          directEvents[eventName] = {\n            registrationName: `on${eventName.substring(3)}`\n          };\n        }\n        directEventTypes[eventName] = directEvents[eventName];\n      }\n      moduleConstants.directEventTypes = directEventTypes;\n\n      // Add bubbling events\n      for (let eventName of viewConfig.bubblingEvents) {\n        if (!bubblingEvents[eventName]) {\n          const bubbleName = `on${eventName.substring(3)}`;\n          bubblingEvents[eventName] = {\n            phasedRegistrationNames: {\n              bubbled: bubbleName,\n              captured: `${bubbleName}Capture`\n            }\n          };\n        }\n        bubblingEventTypes[eventName] = bubblingEvents[eventName];\n      }\n      moduleConstants.bubblingEventTypes = bubblingEventTypes;\n\n      constants[name] = moduleConstants;\n    }\n\n    return constants;\n  }\n}\n\nexport default RCTUIManager;\n"],"file":"RCTUIManager.js"}