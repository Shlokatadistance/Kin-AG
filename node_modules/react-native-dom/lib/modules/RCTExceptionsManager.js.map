{"version":3,"sources":["../../ReactDom/modules/RCTExceptionsManager.js"],"names":["RCTExceptionsManager","message","stack","exceptionId","bridge","redBox","showErrorMessage","updateError","$reportFatalException","RCTModule","moduleName"],"mappings":"6nBAEA,yE,GAUMA,CAAAA,oB,oZAIFC,O,CACAC,K,CACAC,W,CACA,CACA,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,gBAAnB,CAAoCL,OAApC,CAA6CC,KAA7C,EACD,C,oEAGCD,O,CACAC,K,CACAC,W,CACA,CACA,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,gBAAnB,CAAoCL,OAApC,CAA6CC,KAA7C,EACD,C,wEAGCD,O,CACAC,K,CACAC,W,CACA,CACA,KAAKC,MAAL,CAAYC,MAAZ,CAAmBE,WAAnB,CAA+BN,OAA/B,CAAwCC,KAAxC,EACD,C,4EAEyBD,O,CAAiBC,K,CAAqB,CAC9D,KAAKM,qBAAL,CAA2BP,OAA3B,CAAoCC,KAApC,CAA2C,CAAC,CAA5C,EACD,C,kCA7BgCO,mB,EAA7BT,oB,CACGU,U,CAAa,sB,cA+BPV,oB","sourcesContent":["/** @flow */\n\nimport RCTModule from \"RCTModule\";\nimport type RCTBridge from \"RCTBridge\";\n\nexport type StackEntry = {\n  file: string,\n  methodName: string,\n  lineNumber: number,\n  column: number\n};\n\nclass RCTExceptionsManager extends RCTModule {\n  static moduleName = \"RCTExceptionsManager\";\n\n  $reportSoftException(\n    message: string,\n    stack: StackEntry[],\n    exceptionId: number\n  ) {\n    this.bridge.redBox.showErrorMessage(message, stack);\n  }\n\n  $reportFatalException(\n    message: string,\n    stack: StackEntry[],\n    exceptionId: number\n  ) {\n    this.bridge.redBox.showErrorMessage(message, stack);\n  }\n\n  $updateExceptionMessage(\n    message: string,\n    stack: StackEntry[],\n    exceptionId: number\n  ) {\n    this.bridge.redBox.updateError(message, stack);\n  }\n\n  $reportUnhandledException(message: string, stack: StackEntry[]) {\n    this.$reportFatalException(message, stack, -1);\n  }\n}\n\nexport default RCTExceptionsManager;\n"],"file":"RCTExceptionsManager.js"}