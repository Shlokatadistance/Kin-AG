{"version":3,"sources":["../../../ReactDom/modules/LayoutAnimation/RCTKeyframeGenerator.js"],"names":["timestepCoefficient","staticEasingFunctions","linear","x","easeIn","easeOut","easeInEaseOut","springFactor","springTimestep","generateStaticKeyframes","ease","duration","delay","numSteps","timestep","keyframes","currentX","i","push","epsilon","maxDamping","minDamping","Number","MIN_VALUE","approximateRoot","func","derivative","initialGuess","times","result","angularFrequency","undampedFrequency","dampingRatio","Math","sqrt","pow","computeDerivedSpringCurveOptions","velocity","mass","max","min","envelope","exponentialDecay","currentDisplacement","a","b","c","exp","d","e","f","g","factor","tension","friction","isNaN","Integrator","accelerationForState","state","dt","evaluateState","evaluateStateWithDerivative","dxdt","dx","dvdt","dv","v","initialState","output","createSpringInterpolator","tolerance","stopSpring","time","value","integrator","finished","next","delta","stateBefore","stateAfter","integrateState","finalVelocity","netFloat","net1DVelocity","netValueIsLow","abs","netVelocityIsLow","generateSpringKeyframes","springDamping","initialVelocity","interpolator","length","generateKeyframes","config","type","resolvedDelay","resolvedDuration","easingFunction"],"mappings":"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","sourcesContent":["/** @flow */\n\nimport BezierEasing from \"bezier-easing\";\nimport memoize from \"fast-memoize\";\nimport invariant from \"invariant\";\n\nimport type { LayoutAnim } from \"RCTLayoutAnimationManager\";\n\nconst timestepCoefficient = 1;\n\nconst staticEasingFunctions = {\n  linear: (x) => x,\n  easeIn: BezierEasing(0.42, 0, 1, 1),\n  easeOut: BezierEasing(0, 0, 0.58, 1),\n  easeInEaseOut: BezierEasing(0.42, 0, 0.58, 1)\n};\n\nexport type KeyframeResult = {\n  keyframes: number[],\n  duration: number,\n  delay: number\n};\n\nconst springFactor = 0.5;\nconst springTimestep = 16.667 * timestepCoefficient;\n\nfunction generateStaticKeyframes(\n  ease: (x: number) => number,\n  duration: number,\n  delay: number\n): KeyframeResult {\n  const numSteps = duration / springTimestep;\n  const timestep = 1.0 / numSteps;\n\n  const keyframes = [];\n\n  let currentX = 0;\n  for (let i = 0; i < numSteps; i++) {\n    keyframes.push(ease(currentX));\n    currentX += timestep;\n  }\n\n  keyframes.push(1);\n\n  return { keyframes, duration, delay };\n}\n\n// Spring Curve Approximation & Generation adapted from https://github.com/koenbok/Framer\n\nconst epsilon = 0.001;\nconst maxDamping = 1;\nconst minDamping = Number.MIN_VALUE;\n\ntype ApproxFunc = (number) => number;\n\nconst approximateRoot = (\n  func: ApproxFunc,\n  derivative: ApproxFunc,\n  initialGuess: number,\n  times = 24\n) => {\n  let result = initialGuess;\n  for (let i = 0; i < times; i++) {\n    result = result = func(result) / derivative(result);\n  }\n  return result;\n};\n\nconst angularFrequency = (undampedFrequency, dampingRatio) =>\n  undampedFrequency * Math.sqrt(1 - Math.pow(dampingRatio, 2));\n\nfunction computeDerivedSpringCurveOptions(\n  dampingRatio: number,\n  duration: number,\n  velocity: number = 0,\n  mass: number = 1\n) {\n  dampingRatio = Math.max(Math.min(dampingRatio, maxDamping), minDamping);\n\n  let envelope: (number) => number;\n  let derivative: (number) => number;\n  if (dampingRatio < 1) {\n    envelope = (undampedFrequency: number) => {\n      const exponentialDecay = undampedFrequency * dampingRatio;\n      const currentDisplacement = exponentialDecay * duration;\n      const a = exponentialDecay - velocity;\n      const b = angularFrequency(undampedFrequency, dampingRatio);\n      const c = Math.exp(-currentDisplacement);\n      return epsilon - (a / b) * c;\n    };\n    derivative = (undampedFrequency: number) => {\n      const exponentialDecay = undampedFrequency * dampingRatio;\n      const currentDisplacement = exponentialDecay * duration;\n      const d = currentDisplacement * velocity + velocity;\n      const e =\n        Math.pow(dampingRatio, 2) * Math.pow(undampedFrequency, 2) * duration;\n      const f = Math.exp(-currentDisplacement);\n      const g = angularFrequency(Math.pow(undampedFrequency, 2), dampingRatio);\n      const factor = -envelope(undampedFrequency) + epsilon > 0 ? -1 : 1;\n      return (factor * ((d - e) * f)) / g;\n    };\n  } else {\n    envelope = (undampedFrequency: number) => {\n      const a = Math.exp(-undampedFrequency * duration);\n      const b = (undampedFrequency - velocity) * duration + 1;\n      return -epsilon + a * b;\n    };\n    derivative = (undampedFrequency: number) => {\n      const a = Math.exp(-undampedFrequency * duration);\n      const b = (velocity - undampedFrequency) * Math.pow(duration, 2);\n      return a * b;\n    };\n  }\n\n  const result = {\n    tension: 100,\n    friction: 10,\n    velocity\n  };\n\n  const initialGuess = 5 / duration;\n  const undampedFrequency = approximateRoot(envelope, derivative, initialGuess);\n  if (!isNaN(undampedFrequency)) {\n    result.tension = Math.pow(undampedFrequency, 2) * mass;\n    result.friction = dampingRatio * 2 * Math.sqrt(mass * result.tension);\n  }\n\n  return result;\n}\n\nclass Integrator {\n  accelerationForState: ({ x: number, v: number }) => number;\n\n  constructor(accelerationForState: *) {\n    this.accelerationForState = accelerationForState;\n  }\n\n  integrateState(state: { x: number, v: number }, dt: number) {\n    const a = this.evaluateState(state);\n    const b = this.evaluateStateWithDerivative(state, dt * 0.5, a);\n    const c = this.evaluateStateWithDerivative(state, dt * 0.5, b);\n    const d = this.evaluateStateWithDerivative(state, dt, c);\n\n    const dxdt = (1.0 / 6.0) * (a.dx + 2.0 * (b.dx + c.dx) + d.dx);\n    const dvdt = (1.0 / 6.0) * (a.dv + 2.0 * (b.dv + c.dv) + d.dv);\n\n    state.x = state.x + dxdt * dt;\n    state.v = state.v + dvdt * dt;\n\n    return state;\n  }\n\n  evaluateState(initialState: { x: number, v: number }) {\n    return {\n      dx: initialState.v,\n      dv: this.accelerationForState(initialState)\n    };\n  }\n\n  evaluateStateWithDerivative(initialState, dt, derivative) {\n    const state = {};\n    state.x = initialState.x + derivative.dx * dt;\n    state.v = initialState.v + derivative.dv * dt;\n\n    const output = {};\n    output.dx = state.v;\n    output.dv = this.accelerationForState(state);\n\n    return output;\n  }\n}\n\nfunction createSpringInterpolator(\n  tension: number,\n  friction: number,\n  velocity: number,\n  tolerance: number = 1 / 1000\n) {\n  let stopSpring = false;\n  let time = 0;\n  let value = 0;\n  const integrator = new Integrator(\n    (state: *) => -tension * state.x - friction * state.v\n  );\n\n  const finished = () => stopSpring;\n\n  return {\n    finished,\n    next: (delta: number) => {\n      if (finished()) {\n        return 1;\n      }\n\n      time += delta;\n\n      const stateBefore = {\n        x: value - 1,\n        v: velocity\n      };\n\n      const stateAfter = integrator.integrateState(stateBefore, delta);\n      value = 1 + stateAfter.x;\n      const finalVelocity = stateAfter.v;\n      const netFloat = stateAfter.x;\n      const net1DVelocity = stateAfter.v;\n\n      // See if we reached the end state\n      const netValueIsLow = Math.abs(netFloat) < tolerance;\n      const netVelocityIsLow = Math.abs(net1DVelocity) < tolerance;\n\n      stopSpring = netValueIsLow && netValueIsLow;\n      velocity = finalVelocity;\n\n      return value;\n    }\n  };\n}\n\nfunction generateSpringKeyframes(\n  springDamping: number = springFactor,\n  initialVelocity: number = 0,\n  duration: number,\n  delay: number\n): KeyframeResult {\n  const numSteps = duration / springTimestep;\n\n  const { friction, tension, velocity } = computeDerivedSpringCurveOptions(\n    springDamping,\n    duration / 6000,\n    initialVelocity\n  );\n\n  const interpolator = createSpringInterpolator(tension, friction, velocity);\n\n  const keyframes = [];\n  while (!interpolator.finished()) {\n    keyframes.push(interpolator.next(1 / 60));\n  }\n\n  keyframes.push(1);\n\n  return { keyframes, duration: keyframes.length * springTimestep, delay };\n}\n\nconst generateKeyframes: (\n  config: LayoutAnim,\n  duration: number\n) => ?KeyframeResult = memoize((config: LayoutAnim = {}, duration: number) => {\n  const {\n    type = \"easeInEaseOut\",\n    springDamping,\n    initialVelocity,\n    delay\n  } = config;\n\n  const resolvedDelay = delay != null ? delay : 0;\n\n  const resolvedDuration = config.duration != null ? config.duration : duration;\n\n  if (resolvedDuration === 0) {\n    return null;\n  }\n\n  if (type && type !== \"spring\") {\n    const easingFunction = staticEasingFunctions[type];\n\n    return generateStaticKeyframes(\n      easingFunction,\n      resolvedDuration,\n      resolvedDelay\n    );\n  }\n\n  if (type && type === \"spring\" && springDamping) {\n    return generateSpringKeyframes(\n      springDamping,\n      initialVelocity,\n      resolvedDuration,\n      resolvedDelay\n    );\n  }\n\n  invariant(false, \"Invalid layoutAnimation configuration provided\");\n});\n\nexport default generateKeyframes;\n"],"file":"RCTKeyframeGenerator.js"}