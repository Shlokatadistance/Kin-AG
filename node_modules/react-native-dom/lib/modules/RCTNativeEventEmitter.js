var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _invariant=_interopRequireDefault(require("invariant"));var _RCTModule2=_interopRequireDefault(require("./../bridge/RCTModule"));var _NotificationCenter=_interopRequireDefault(require("./../base/NotificationCenter"));var RCTNativeEventEmitter=function(_RCTModule){(0,_inherits2.default)(RCTNativeEventEmitter,_RCTModule);function RCTNativeEventEmitter(bridge){var _this;(0,_classCallCheck2.default)(this,RCTNativeEventEmitter);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(RCTNativeEventEmitter).call(this,bridge));_this._listenerCount=0;return _this;}(0,_createClass2.default)(RCTNativeEventEmitter,[{key:"supportedMethods",value:function supportedMethods(){return[];}},{key:"sendEventWithName",value:function sendEventWithName(eventName,body){(0,_invariant.default)(this.bridge,"bridge is not set. This is probably because you've"+("explicitly synthesized the bridge in "+this.constructor.name+", even though it's inherited ")+"from RCTNativeEventEmitter.");if(this._listenerCount>0){this.bridge.enqueueJSCall("RCTDeviceEventEmitter","emit",body?[eventName,body]:[eventName]);_NotificationCenter.default.emitEvent(eventName,[body]);}else{console.warn("Sending "+eventName+" with no listeners registered");}}},{key:"startObserving",value:function startObserving(){}},{key:"stopObserving",value:function stopObserving(){}},{key:"$addListener",value:function $addListener(eventName){this.addListener(eventName);}},{key:"addListener",value:function addListener(eventName,callback){if(callback!=null){_NotificationCenter.default.addListener(eventName,callback);}this._listenerCount++;if(this._listenerCount===1){this.startObserving();}}},{key:"removeListener",value:function removeListener(eventName,callback){if(callback!=null){_NotificationCenter.default.removeListener(eventName,callback);}this.$removeListeners(1);}},{key:"$removeListeners",value:function $removeListeners(count){this._listenerCount=Math.max(this._listenerCount-count,0);if(this._listenerCount===0){this.stopObserving();}}}]);return RCTNativeEventEmitter;}(_RCTModule2.default);var _default=RCTNativeEventEmitter;exports.default=_default;
//# sourceMappingURL=RCTNativeEventEmitter.js.map