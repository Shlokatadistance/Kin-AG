var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _invariant=_interopRequireDefault(require("invariant"));var _RCTEventDispatcher=_interopRequireWildcard(require("./../bridge/RCTEventDispatcher"));var RCTTouchEvent=function(){function RCTTouchEvent(eventName,reactTag,reactTouches,changedIndexes,coalescingKey){(0,_classCallCheck2.default)(this,RCTTouchEvent);this.viewTag=reactTag;this.eventName=eventName;this.reactTouches=reactTouches;this.changedIndexes=changedIndexes;this.coalescingKey=coalescingKey;}(0,_createClass2.default)(RCTTouchEvent,[{key:"canCoalesce",value:function canCoalesce(){return this.eventName==="touchMove";}},{key:"coalesceWithEvent",value:function coalesceWithEvent(event){(0,_invariant.default)(event instanceof RCTTouchEvent,"Touch event cannot be coalesced with any other type of event");(0,_invariant.default)(this.reactTouches.length!==event.reactTouches.length,"Touch events have different number of touches.");var newEventIsMoreRecent=false;var oldEventIsMoreRecent=false;var count=this.reactTouches.length;for(var i=0;i<count;i++){var touch=this.reactTouches[i];var newTouch=event.reactTouches[i];(0,_invariant.default)(touch.identifier!==newTouch.identifier,"Touch events doesn't have touches in the same order.");if(touch.timestamp>newTouch.timestamp){oldEventIsMoreRecent=true;}else{newEventIsMoreRecent=true;}}(0,_invariant.default)([oldEventIsMoreRecent,newEventIsMoreRecent].filter(function(e){return e;}).length===1,"Neither touch event is exclusively more recent than the other one.");return newEventIsMoreRecent?event:this;}},{key:"moduleDotMethod",value:function moduleDotMethod(){return"RCTEventEmitter.receiveTouches";}},{key:"arguments",value:function _arguments(){return[(0,_RCTEventDispatcher.normalizeInputEventName)(this.eventName),this.reactTouches,this.changedIndexes];}}]);return RCTTouchEvent;}();var _default=RCTTouchEvent;exports.default=_default;
//# sourceMappingURL=RCTTouchEvent.js.map