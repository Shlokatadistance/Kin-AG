var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _invariant=_interopRequireDefault(require("invariant"));var _RCTShadowView=require("./../views/RCTShadowView");var ENABLED=true;var RCTNativeViewHierarchyOptimizer=function(){function RCTNativeViewHierarchyOptimizer(manager){(0,_classCallCheck2.default)(this,RCTNativeViewHierarchyOptimizer);this.manager=manager;this.tagsWithLayoutVisited=new Set();}(0,_createClass2.default)(RCTNativeViewHierarchyOptimizer,[{key:"handleCreateView",value:function handleCreateView(node,initialProps){if(!ENABLED){this.manager.createView(node.reactTag,node.viewName,initialProps);return;}var isLayoutOnly=node.viewName==="RCTView"&&this.isLayoutOnlyAndCollapsable(initialProps);node.isLayoutOnly=isLayoutOnly;if(!isLayoutOnly){this.manager.createView(node.reactTag,node.viewName,initialProps);}}},{key:"handleRemoveNode",value:function handleRemoveNode(node){node.removeAllNativeChildren();}},{key:"handleUpdateView",value:function handleUpdateView(node,viewName,props){if(!ENABLED){this.manager.updateView(node.reactTag,viewName,props);return;}var needsToLeaveLayoutOnly=node.isLayoutOnly&&!this.isLayoutOnlyAndCollapsable(props);if(needsToLeaveLayoutOnly){this.transitionLayoutOnlyViewToNativeView(node,props);}else if(!node.isLayoutOnly){this.manager.updateView(node.reactTag,viewName,props);}}},{key:"handleManageChildren",value:function handleManageChildren(nodeToManage,indicesToRemove,tagsToRemove,viewsToAdd,tagsToDelete){if(!ENABLED){this.manager.manageChildren(nodeToManage.reactTag,indicesToRemove,viewsToAdd,tagsToDelete);return;}for(var i=0;i<tagsToRemove.length;i++){var tagToRemove=tagsToRemove[i];var shouldDelete=false;for(var j=0;j<tagsToDelete.length;j++){if(tagsToDelete[j]===tagToRemove){shouldDelete=true;break;}}var nodeToRemove=this.shadowViewRegistry.get(tagToRemove);(0,_invariant.default)(nodeToRemove,"No such shadow view found with tag "+tagToRemove);this.removeNodeFromParent(nodeToRemove,shouldDelete);}for(var _i=0;_i<viewsToAdd.length;_i++){var view=viewsToAdd[_i];var nodeToAdd=this.shadowViewRegistry.get(view.tag);(0,_invariant.default)(nodeToAdd,"No such shadow view found with tag "+view.tag);this.addNodeToNode(nodeToManage,nodeToAdd,view.index);}}},{key:"handleSetChildren",value:function handleSetChildren(nodeToManage,childrenTags){if(!ENABLED){this.manager.setChildren(nodeToManage.reactTag,childrenTags);}for(var i=0;i<childrenTags.length;i++){var nodeToAdd=this.shadowViewRegistry.get(childrenTags[i]);(0,_invariant.default)(nodeToAdd,"No such shadow view with tag "+childrenTags[i]);this.addNodeToNode(nodeToManage,nodeToAdd,i);}}},{key:"handleUpdateLayout",value:function handleUpdateLayout(node){if(!ENABLED){var layout=node.previousLayout;if(layout)this.manager.updateLayout(node.reactTag,layout);return;}this.applyLayoutBase(node);}},{key:"onBatchComplete",value:function onBatchComplete(){this.tagsWithLayoutVisited.clear();}},{key:"walkUpUntilNonLayoutOnly",value:function walkUpUntilNonLayoutOnly(node,indexInNativeChildren){while(node.isLayoutOnly){var parent=node.reactSuperview;if(parent==null){return null;}indexInNativeChildren=indexInNativeChildren+parent.getNativeOffsetForChild(node);node=parent;}return{node:node,index:indexInNativeChildren};}},{key:"addNodeToNode",value:function addNodeToNode(parent,child,index){var indexInNativeChildren=parent.getNativeOffsetForChild(parent.reactSubviews[index]);if(parent.isLayoutOnly){var result=this.walkUpUntilNonLayoutOnly(parent,indexInNativeChildren);if(result==null){return;}parent=result.node;indexInNativeChildren=result.index;}if(!child.isLayoutOnly){this.addNonLayoutNode(parent,child,indexInNativeChildren);}else{this.addLayoutOnlyNode(parent,child,indexInNativeChildren);}}},{key:"removeNodeFromParent",value:function removeNodeFromParent(nodeToRemove,shouldDelete){var nativeNodeToRemoveFrom=nodeToRemove.nativeParent;if(nativeNodeToRemoveFrom!=null){var index=nativeNodeToRemoveFrom.reactSubviews.indexOf(nodeToRemove);nativeNodeToRemoveFrom.removeNativeChild(nodeToRemove);this.manager.manageChildren(nativeNodeToRemoveFrom.reactTag,[index],null,shouldDelete?[nodeToRemove.reactTag]:null);}else{for(var i=nodeToRemove.reactSubviews.length-1;i>=0;i--){this.removeNodeFromParent(nodeToRemove.reactSubviews[i],shouldDelete);}}}},{key:"addLayoutOnlyNode",value:function addLayoutOnlyNode(nonLayoutOnlyNode,layoutOnlyNode,index){this.addGrandchildren(nonLayoutOnlyNode,layoutOnlyNode,index);}},{key:"addNonLayoutNode",value:function addNonLayoutNode(parent,child,index){parent.addNativeChildAt(child,index);this.manager.manageChildren(parent.reactTag,null,[{tag:child.reactTag,index:index}],null);}},{key:"addGrandchildren",value:function addGrandchildren(nativeParent,child,index){(0,_invariant.default)(!nativeParent.isLayoutOnly,"Native parent cannot be a layoutOnly node");var currentIndex=index;for(var i=0;i<child.reactSubviews.length;i++){var grandchild=child.reactSubviews[i];(0,_invariant.default)(grandchild.nativeParent==null,"Grandchild must not have native parent");if(grandchild.isLayoutOnly){var grandchildCountBefore=nativeParent.totalNativeChildren;this.addLayoutOnlyNode(nativeParent,grandchild,currentIndex);var grandchildCountAfter=nativeParent.totalNativeChildren;currentIndex+=grandchildCountAfter-grandchildCountBefore;}else{this.addNonLayoutNode(nativeParent,grandchild,currentIndex);currentIndex++;}}}},{key:"applyLayoutBase",value:function applyLayoutBase(node){var tag=node.reactTag;if(this.tagsWithLayoutVisited.has(tag)){return;}this.tagsWithLayoutVisited.add(tag);if(node.previousLayout==null){return;}var x=node.previousLayout.left;var y=node.previousLayout.top;var parent=node.reactSuperview;if(parent){while(parent!=null&&parent.isLayoutOnly){var prevLayout=parent.previousLayout;(0,_invariant.default)(prevLayout,"node has no layout calculated");x+=prevLayout.left;y+=prevLayout.top;parent=parent.reactSuperview;}}this.applyLayoutRecursive(node,x,y);}},{key:"applyLayoutRecursive",value:function applyLayoutRecursive(toUpdate,x,y){if(!toUpdate.isLayoutOnly&&toUpdate.nativeParent!=null){var tag=toUpdate.reactTag;var layout=toUpdate.previousLayout;(0,_invariant.default)(layout,"Node "+tag+" has no layout calculated");this.manager.updateLayout(tag,{left:x,top:y,width:layout.width,height:layout.height});return;}for(var i=0;i<toUpdate.reactSubviews.length;i++){var child=toUpdate.reactSubviews[i];var childTag=child.reactTag;if(this.tagsWithLayoutVisited.has(childTag)){continue;}this.tagsWithLayoutVisited.add(childTag);var childLayout=child.previousLayout;(0,_invariant.default)(childLayout,"Node "+childTag+" has no layout calculated");var childX=childLayout.left+x;var childY=childLayout.top+y;this.applyLayoutRecursive(child,childX,childY);}}},{key:"transitionLayoutOnlyViewToNativeView",value:function transitionLayoutOnlyViewToNativeView(node,props){var parent=node.reactSuperview;if(parent==null){node.isLayoutOnly=false;return;}var childIndex=parent.reactSubviews.indexOf(node);parent.removeReactSubview(node);this.removeNodeFromParent(node,false);node.isLayoutOnly=false;this.manager.createView(node.reactTag,node.viewName,props);parent.insertReactSubviewAtIndex(node,childIndex);this.addNodeToNode(parent,node,childIndex);for(var i=0;i<node.reactSubviews.length;i++){this.addNodeToNode(node,node.reactSubviews[i],i);}(0,_invariant.default)(this.tagsWithLayoutVisited.size==0,"Tried to calculate layout with nodes already visited");this.applyLayoutBase(node);for(var _i2=0;_i2<node.reactSubviews.length;_i2++){this.applyLayoutBase(node.reactSubviews[_i2]);}this.tagsWithLayoutVisited.clear();}},{key:"isPropLayoutOnly",value:function isPropLayoutOnly(map,prop){if(_RCTShadowView.LAYOUT_ONLY_PROPS.includes(prop)){return true;}else if(prop==="pointerEvents"){var value=map[prop];return value==="auto"||value==="box-none";}switch(prop){case"opacity":return map.opacity==null||map[prop]===1;case"onLayout":return true;case"overflow":return map.overflow!=="hidden";default:return false;}}},{key:"isLayoutOnlyAndCollapsable",value:function isLayoutOnlyAndCollapsable(props){if(props==null)return true;if(props.collapsable!=null&&!props.collapsable)return false;var _arr=Object.keys(props);for(var _i3=0;_i3<_arr.length;_i3++){var propName=_arr[_i3];if(!this.isPropLayoutOnly(props,propName)){return false;}}return true;}},{key:"shadowViewRegistry",get:function get(){return this.manager.shadowViewRegistry;}}]);return RCTNativeViewHierarchyOptimizer;}();var _default=RCTNativeViewHierarchyOptimizer;exports.default=_default;
//# sourceMappingURL=RCTNativeViewHierarchyOptimizer.js.map