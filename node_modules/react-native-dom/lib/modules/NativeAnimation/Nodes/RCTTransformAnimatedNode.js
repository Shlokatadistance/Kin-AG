var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _get2=_interopRequireDefault(require("@babel/runtime/helpers/get"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _RCTValueAnimatedNode=_interopRequireDefault(require("./RCTValueAnimatedNode"));var _RCTAnimatedNode2=_interopRequireDefault(require("./RCTAnimatedNode"));var RCTTransformAnimatedNode=function(_RCTAnimatedNode){(0,_inherits2.default)(RCTTransformAnimatedNode,_RCTAnimatedNode);function RCTTransformAnimatedNode(tag,config){var _this;(0,_classCallCheck2.default)(this,RCTTransformAnimatedNode);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(RCTTransformAnimatedNode).call(this,tag,config));_this.propsDictionary={};return _this;}(0,_createClass2.default)(RCTTransformAnimatedNode,[{key:"performUpdate",value:function performUpdate(){(0,_get2.default)((0,_getPrototypeOf2.default)(RCTTransformAnimatedNode.prototype),"performUpdate",this).call(this);var transformConfigs=this.config.transforms;var transform=[];for(var _iterator=transformConfigs,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref;if(_isArray){if(_i>=_iterator.length)break;_ref=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref=_i.value;}var _transformConfig=_ref;var type=_transformConfig.type;var property=_transformConfig.property;var value=void 0;if(type==="animated"){var nodeTag=_transformConfig.nodeTag;var node=this.parentNodes?this.parentNodes[nodeTag]:null;if(!(node instanceof _RCTValueAnimatedNode.default)){continue;}value=node.value;}else{value=_transformConfig.value;}transform.push((0,_defineProperty2.default)({},property,value));}this.propsDictionary.animatedTransform=transform;}}]);return RCTTransformAnimatedNode;}(_RCTAnimatedNode2.default);var _default=RCTTransformAnimatedNode;exports.default=_default;
//# sourceMappingURL=RCTTransformAnimatedNode.js.map