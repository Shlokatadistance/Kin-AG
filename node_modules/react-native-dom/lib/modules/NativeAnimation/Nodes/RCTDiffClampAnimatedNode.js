var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _get2=_interopRequireDefault(require("@babel/runtime/helpers/get"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _invariant=_interopRequireDefault(require("invariant"));var _RCTValueAnimatedNode2=_interopRequireDefault(require("./RCTValueAnimatedNode"));var RCTDiffClampAnimatedNode=function(_RCTValueAnimatedNode){(0,_inherits2.default)(RCTDiffClampAnimatedNode,_RCTValueAnimatedNode);function RCTDiffClampAnimatedNode(tag,config){var _this;(0,_classCallCheck2.default)(this,RCTDiffClampAnimatedNode);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(RCTDiffClampAnimatedNode).call(this,tag,config));_this.inputNodeTag=config.input;_this.min=config.min;_this.max=config.max;return _this;}(0,_createClass2.default)(RCTDiffClampAnimatedNode,[{key:"onAttachedToNode",value:function onAttachedToNode(parent){(0,_get2.default)((0,_getPrototypeOf2.default)(RCTDiffClampAnimatedNode.prototype),"onAttachedToNode",this).call(this,parent);this.value=this.lastValue=this.inputNodeValue;}},{key:"performUpdate",value:function performUpdate(){(0,_get2.default)((0,_getPrototypeOf2.default)(RCTDiffClampAnimatedNode.prototype),"performUpdate",this).call(this);var lastValue=this.lastValue?this.lastValue:0;var value=this.inputNodeValue;var diff=value-lastValue;this.lastValue=value;this.value=Math.min(Math.max(this.value+diff,this.min),this.max);}},{key:"inputNodeValue",get:function get(){(0,_invariant.default)(this.parentNodes,"diffClamp node has no parents");var inputNode=this.parentNodes[this.inputNodeTag];if(!(inputNode instanceof _RCTValueAnimatedNode2.default)){console.error("Illegal node ID set as an input for Animated.DiffClamp node");return 0;}return inputNode.value;}}]);return RCTDiffClampAnimatedNode;}(_RCTValueAnimatedNode2.default);var _default=RCTDiffClampAnimatedNode;exports.default=_default;
//# sourceMappingURL=RCTDiffClampAnimatedNode.js.map